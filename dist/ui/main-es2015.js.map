{"version":3,"sources":["./node_modules/moment/locale sync ^\\.\\/.*$","./src/app/about/about.component.html","./src/app/app.component.html","./src/app/attributes-dictionary-details/attributes-dictionary-details.component.html","./src/app/attributes-dictionary-list/attributes-dictionary-list.component.html","./src/app/footer/footer.component.html","./src/app/navbar/navbar.component.html","./src/app/panel-menu/panel-menu.component.html","./src/app/sensor-detail-attribute-dialog/sensor-detail-attribute-dialog.component.html","./src/app/sensor-detail/sensor-detail.component.html","./src/app/sensors-list/sensors-list.component.html","./src/app/sensortypes-details/sensortypes-details.component.html","./src/app/sensortypes-list/sensortypes-list.component.html","./node_modules/tslib/tslib.es6.js","./src/$_lazy_route_resource lazy namespace object","./src/app/about/about.component.css","./src/app/about/about.component.ts","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/attributes-dictionary-details/attributes-dictionary-details.component.css","./src/app/attributes-dictionary-details/attributes-dictionary-details.component.ts","./src/app/attributes-dictionary-list/attributes-dictionary-list.component.css","./src/app/attributes-dictionary-list/attributes-dictionary-list.component.ts","./src/app/crosscutting/componentsMode.ts","./src/app/footer/footer.component.css","./src/app/footer/footer.component.ts","./src/app/interceptors/failure-attributes-message-builder.ts","./src/app/interceptors/failure-message-builder.ts","./src/app/interceptors/failure-sensor-message-builder.ts","./src/app/interceptors/failure-sensortypes-message-builder.ts","./src/app/interceptors/http-error-interceptor-service.service.ts","./src/app/interceptors/successful-attributes-message-builder.ts","./src/app/interceptors/successful-message-builder.ts","./src/app/interceptors/successful-sensors-message-builder.ts","./src/app/interceptors/successful-sensortypes-message-builder.ts","./src/app/model/Sensor.ts","./src/app/navbar/navbar.component.css","./src/app/navbar/navbar.component.ts","./src/app/panel-menu/panel-menu.component.css","./src/app/panel-menu/panel-menu.component.ts","./src/app/sensor-detail-attribute-dialog/sensor-detail-attribute-dialog.component.css","./src/app/sensor-detail-attribute-dialog/sensor-detail-attribute-dialog.component.ts","./src/app/sensor-detail/sensor-detail.component.css","./src/app/sensor-detail/sensor-detail.component.ts","./src/app/sensors-list/sensors-list.component.css","./src/app/sensors-list/sensors-list.component.ts","./src/app/sensortypes-details/sensortypes-details.component.css","./src/app/sensortypes-details/sensortypes-details.component.ts","./src/app/sensortypes-list/sensortypes-list.component.css","./src/app/sensortypes-list/sensortypes-list.component.ts","./src/app/service/register-attributes.service.ts","./src/app/service/sensor-types.service.ts","./src/app/service/sensors.service.ts","./src/app/store/actions/attributes.actions.ts","./src/app/store/actions/attributesdialog.actions.ts","./src/app/store/actions/index.ts","./src/app/store/actions/sensors.actions.ts","./src/app/store/actions/sensortypes.actions.ts","./src/app/store/effects/attributes.effects.ts","./src/app/store/effects/index.ts","./src/app/store/effects/sensors.effects.ts","./src/app/store/effects/sensortypes.effects.ts","./src/app/store/reducers/attributes.reducer.ts","./src/app/store/reducers/attributesdialog.reducer.ts","./src/app/store/reducers/index.ts","./src/app/store/reducers/sensors.reducer.ts","./src/app/store/reducers/sensortypes.reducer.ts","./src/app/validators/UuidUniquenessValidator.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappingsnRA;AAAe,+PAAgM,MAAM,S;;;;;;;;;;;;ACArN;AAAe,4gB;;;;;;;;;;;;ACAf;AAAe,oFAAqB,kCAAkC,+FAA+F,aAAa,kzDAAkzD,0GAA0G,mBAAmB,mBAAmB,2C;;;;;;;;;;;;ACApnE;AAAe,6UAA8Q,YAAY,iQAAiQ,oBAAoB,6E;;;;;;;;;;;;ACA9jB;AAAe,0MAA2I,qE;;;;;;;;;;;;ACA1J;AAAe,yM;;;;;;;;;;;;ACAf;AAAe,0GAA2C,gBAAgB,wC;;;;;;;;;;;;ACA1E;AAAe,gyDAAiuD,EAAE,2eAA2e,qJ;;;;;;;;;;;;ACA7tE;AAAe,oFAAqB,kCAAkC,sCAAsC,sBAAsB,4FAA4F,mCAAmC,6XAA6X,kCAAkC,oeAAoe,aAAa,0uCAA0uC,kCAAkC,uoDAAuoD,oNAAoN,+BAA+B,2BAA2B,8BAA8B,0PAA0P,yrBAAyrB,0GAA0G,cAAc,yCAAyC,oKAAoK,oD;;;;;;;;;;;;ACAxkL;AAAe,+SAAgP,YAAY,4gBAA4gB,cAAc,wTAAwT,oBAAoB,4N;;;;;;;;;;;;ACAjnC;AAAe,oFAAqB,kCAAkC,+IAA+I,kCAAkC,6hBAA6hB,kCAAkC,8IAA8I,sBAAsB,kQAAkQ,aAAa,2uEAA2uE,0GAA0G,mBAAmB,kBAAkB,kM;;;;;;;;;;;;ACAnmH;AAAe,oFAAqB,kCAAkC,6QAA6Q,YAAY,kQAAkQ,oBAAoB,8N;;;;;;;;;;;;ACArnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA,+DAA+D;AAC/D;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;;AAEO;AACP;AACA,mBAAmB,sBAAsB;AACzC;AACA;;AAEO;AACP;AACA,gDAAgD,OAAO;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA,4DAA4D,cAAc;AAC1E;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;;AAEO;AACP,mCAAmC,oCAAoC;AACvE;;AAEO;AACP;AACA;;AAEO;AACP;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,iEAAiE,uBAAuB,EAAE,4BAA4B;AACrJ;AACA,KAAK;AACL;;AAEO;AACP,aAAa,6BAA6B,0BAA0B,aAAa,EAAE,qBAAqB;AACxG,gBAAgB,qDAAqD,oEAAoE,aAAa,EAAE;AACxJ,sBAAsB,sBAAsB,qBAAqB,GAAG;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,kCAAkC,SAAS;AAC3C,kCAAkC,WAAW,UAAU;AACvD,yCAAyC,cAAc;AACvD;AACA,6GAA6G,OAAO,UAAU;AAC9H,gFAAgF,iBAAiB,OAAO;AACxG,wDAAwD,gBAAgB,QAAQ,OAAO;AACvF,8CAA8C,gBAAgB,gBAAgB,OAAO;AACrF;AACA,iCAAiC;AACjC;AACA;AACA,SAAS,YAAY,aAAa,OAAO,EAAE,UAAU,WAAW;AAChE,mCAAmC,SAAS;AAC5C;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,MAAM,gBAAgB;AACzC;AACA;AACA;AACA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA;;AAEO;AACP,4BAA4B,sBAAsB;AAClD;AACA;AACA;;AAEO;AACP,iDAAiD,QAAQ;AACzD,wCAAwC,QAAQ;AAChD,wDAAwD,QAAQ;AAChE;AACA;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;AACA,iBAAiB,sFAAsF,aAAa,EAAE;AACtH,sBAAsB,gCAAgC,qCAAqC,0CAA0C,EAAE,EAAE,GAAG;AAC5I,2BAA2B,MAAM,eAAe,EAAE,YAAY,oBAAoB,EAAE;AACpF,sBAAsB,oGAAoG;AAC1H,6BAA6B,uBAAuB;AACpD,4BAA4B,wBAAwB;AACpD,2BAA2B,yDAAyD;AACpF;;AAEO;AACP;AACA,iBAAiB,4CAA4C,SAAS,EAAE,qDAAqD,aAAa,EAAE;AAC5I,yBAAyB,6BAA6B,oBAAoB,gDAAgD,gBAAgB,EAAE,KAAK;AACjJ;;AAEO;AACP;AACA;AACA,2GAA2G,sFAAsF,aAAa,EAAE;AAChN,sBAAsB,8BAA8B,gDAAgD,uDAAuD,EAAE,EAAE,GAAG;AAClK,4CAA4C,sCAAsC,UAAU,oBAAoB,EAAE,EAAE,UAAU;AAC9H;;AAEO;AACP,gCAAgC,uCAAuC,aAAa,EAAE,EAAE,OAAO,kBAAkB;AACjH;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP,4CAA4C;AAC5C;;;;;;;;;;;;ACnMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;ACZA;AAAe,6GAA8C,2I;;;;;;;;;;;;;;;;;ACAX;AAOlD,IAAa,cAAc,GAA3B,MAAa,cAAc;IAIzB;IACA,CAAC;IAED,QAAQ;IACR,CAAC;CAEF;AAVY,cAAc;IAL1B,+DAAS,CAAC;QACT,QAAQ,EAAE,WAAW;QACrB,mNAAqC;;KAEtC,CAAC;;GACW,cAAc,CAU1B;AAV0B;;;;;;;;;;;;;;;;;;;;;;;;;;ACPc;AACc;AACA;AACgC;AACS;AACoB;AACS;AAClD;AACG;AAE9E,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAC,EAAE,EAAE,SAAS,EAAE,qEAAc,EAAC;IACrC,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,qGAAwB,EAAC;IACrD,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,8GAA2B,EAAC;IAC5D,EAAE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,kIAAiC,EAAC;IACnE,EAAE,IAAI,EAAE,oBAAoB,EAAE,SAAS,EAAE,2IAAoC,EAAC;IAC9E,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,yFAAoB,EAAC;IACnD,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,4FAAqB,EAAC;IACxD,EAAE,IAAI,EAAC,OAAO,EAAE,SAAS,EAAE,qEAAc,EAAC;CAC3C,CAAC;AAMF,IAAa,gBAAgB,GAA7B,MAAa,gBAAgB;CAAI;AAApB,gBAAgB;IAJ5B,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,gBAAgB,CAAI;AAAJ;;;;;;;;;;;;;ACzB7B;AAAe,6GAA8C,+H;;;;;;;;;;;;;;;;;ACAnB;AAO1C,IAAa,YAAY,GAAzB,MAAa,YAAY;IALzB;QAME,UAAK,GAAG,IAAI,CAAC;IACf,CAAC;CAAA;AAFY,YAAY;IALxB,+DAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,yMAAmC;;KAEpC,CAAC;GACW,YAAY,CAExB;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AAEe;AACT;AACa;AACW;AACX;AAUnC;AACoD;AACpB;AACgC;AAC/C;AACF;AACI;AACF;AACF;AACiC;AACyB;AACxD;AACsB;AACE;AACuC;AACa;AACS;AAClD;AACG;AACiD;AA+CjI,IAAa,SAAS,GAAtB,MAAa,SAAS;CAAI;AAAb,SAAS;IA7CrB,8DAAQ,CAAC;QACR,YAAY,EAAE;YACZ,2DAAY;YACZ,wEAAe;YACf,mFAAkB;YAClB,wEAAe;YACf,sEAAc;YACd,sGAAwB;YACxB,+GAA2B;YAC3B,mIAAiC;YACjC,4IAAoC;YACpC,0FAAoB;YACpB,6FAAqB;YACrB,8IAAoC;SACrC;QACD,OAAO,EAAE;YACP,uEAAa;YACb,oEAAgB;YAChB,sEAAgB;YAChB,+DAAe;YACf,0DAAU;YACV,4FAAuB;YACvB,2DAAW;YACX,0DAAW;YACX,4DAAY;YACZ,2DAAW;YACX,wDAAW,CAAC,OAAO,CAAC,yDAAQ,CAAC;YAC7B,4DAAa,CAAC,OAAO,CAAC,uDAAO,CAAC;YAC9B,4DAAY;YACZ,0DAAW;YACX,6DAAa;YACb,6DAAa;YACb,+DAAe;YACf,mEAAmB;YACnB,mEAAmB;YACnB,8DAAc;YACd,iEAAiB;YACjB,6DAAa;SACd;QACD,SAAS,EAAE,CAAC,8DAAc;YACxB,iFAAkB;YAClB,EAAC,OAAO,EAAE,uEAAiB,EAAE,QAAQ,EAAE,wHAAkC,EAAE,KAAK,EAAE,IAAI,EAAC;SACxF;QACD,SAAS,EAAE,CAAC,2DAAY,CAAC;KAC1B,CAAC;GACW,SAAS,CAAI;AAAJ;;;;;;;;;;;;;ACnFtB;AAAe,6GAA8C,2M;;;;;;;;;;;;;;;;;;;;;;ACAX;AAC6B;AACxB;AACrB;AAC0B;AAGZ;AAOhD,IAAa,oCAAoC,GAAjD,MAAa,oCAAoC;IAS/C,YAAoB,MAAc,EACd,KAAqB,EACrB,EAAe,EACf,KAAmB;QAHnB,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;QACrB,OAAE,GAAF,EAAE,CAAa;QACf,UAAK,GAAL,KAAK,CAAc;QACrC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACzB,IAAI,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC9C,MAAM,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAChD,WAAW,EAAE,IAAI,0DAAW,EAAE;SAC/B,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACvD,IAAI,CAAC,UAAU,EAAE,CAAC;QAElB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,kEAAkB,EAAE,EAAC,MAAM,EAAE,IAAI,CAAC,IAAI,EAAC,CAAC,CAAC,SAAS,CAClE,IAAI,CAAC,EAAE;YACL,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QAC9B,CAAC,CACF,CAAC;IACJ,CAAC;IAEO,UAAU;QACf,IAAI,CAAC,WAAW,GAAG,oBAAoB,GAAG,IAAI,CAAC,IAAI,CAAC;QACpD,IAAI,CAAC,iBAAiB,GAAG,QAAQ,CAAC;IACrC,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;IACxC,CAAC;IAED,QAAQ;QACN,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAA4B,CAAC;QACrD,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,8DAA2B,CAAC,EAAC,IAAI,EAAC,CAAC,CAAC,CAAC;IAC/D,CAAC;IAED,yBAAyB;QACvB,OAAO,IAAI,CAAC;IACd,CAAC;CAEF;;YAxC6B,sDAAM;YACP,8DAAc;YACjB,0DAAW;YACR,iDAAK;;AAZrB,oCAAoC;IALhD,+DAAS,CAAC;QACT,QAAQ,EAAE,mCAAmC;QAC7C,2RAA6D;;KAE9D,CAAC;2EAU4B,sDAAM;QACP,8DAAc;QACjB,0DAAW;QACR,iDAAK;GAZrB,oCAAoC,CAiDhD;AAjDgD;;;;;;;;;;;;;ACdjD;AAAe,6GAA8C,mM;;;;;;;;;;;;;;;;;;;;;ACAX;AAG6B;AAC7C;AACK;AAEe;AAOtD,IAAa,iCAAiC,GAA9C,MAAa,iCAAiC;IAK5C,YAAoB,KAAmB,EACnB,MAAc;QADd,UAAK,GAAL,KAAK,CAAc;QACnB,WAAM,GAAN,MAAM,CAAQ;QAHlC,gBAAW,GAAsC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,gEAAgB,CAAC,CAAC;QAInF,IAAI,CAAC,IAAI,GAAG;YACV,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAC;YACpC,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAC;YAChC,EAAE,KAAK,EAAE,aAAa,EAAE,MAAM,EAAE,aAAa,EAAC;SAC/C,CAAC;IACJ,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,mEAAmB,CAAC;aACnC,SAAS,CAAC,SAAS,CAAC,EAAE;YACrB,IAAI,CAAC,SAAS,EAAE;gBACd,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,wEAA+B,EAAE,CAAC,CAAC;aAC5D;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,YAAY,CAAC,OAA4B;QACvC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;IACzD,CAAC;CAEF;;YAtB4B,iDAAK;YACJ,sDAAM;;AANvB,iCAAiC;IAL7C,+DAAS,CAAC;QACT,QAAQ,EAAE,gCAAgC;QAC1C,kRAA0D;;KAE3D,CAAC;2EAM2B,iDAAK;QACJ,sDAAM;GANvB,iCAAiC,CA2B7C;AA3B6C;;;;;;;;;;;;;;;;;ACd9C,IAAY,cAGX;AAHD,WAAY,cAAc;IACxB,iDAAG;IACH,mDAAI;AACN,CAAC,EAHW,cAAc,KAAd,cAAc,QAGzB;;;;;;;;;;;;;ACHD;AAAe,6GAA8C,2I;;;;;;;;;;;;;;;;;ACAX;AAOlD,IAAa,eAAe,GAA5B,MAAa,eAAe;IAE1B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;CAEF;AAPY,eAAe;IAL3B,+DAAS,CAAC;QACT,QAAQ,EAAE,YAAY;QACtB,sNAAsC;;KAEvC,CAAC;;GACW,eAAe,CAO3B;AAP2B;;;;;;;;;;;;;;;;;ACJrB,MAAM,2BAA2B;IAAxC;QAEE,aAAQ,GAAG,OAAO,CAAC;IAWrB,CAAC;IATC,YAAY,CAAC,MAAM,EAAE,GAAsB;QACzC,IAAI,OAAO,GAAY,EAAa,CAAC;QACrC,QAAQ,MAAM,EAAE;YACd,KAAK,KAAK;gBACR,OAAO,OAAO,GAAG,EAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,OAAO,EAAE,eAAe,EAAE,MAAM,EAAE,GAAG,CAAC,OAAO,EAAC,CAAC;YAC5F;gBACE,OAAO,IAAI,CAAC;SACf;IACH,CAAC;CACF;;;;;;;;;;;;;;;;;;;;ACdsF;AACN;AACJ;AAEtE,MAAM,qBAAqB;IAMhC;QACE,IAAI,CAAC,4BAA4B,GAAG,IAAI,qGAAgC,EAAE,CAAC;QAC3E,IAAI,CAAC,oBAAoB,GAAG,IAAI,+FAA2B,EAAE,CAAC;QAC9D,IAAI,CAAC,gBAAgB,GAAG,IAAI,2FAA2B,EAAE,CAAC;IAC5D,CAAC;IAED,YAAY,CAAC,GAAG,EAAE,MAAM,EAAE,GAAsB;QAC9C,IAAK,GAAG,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAE;YAChC,OAAO,IAAI,CAAC,4BAA4B,CAAC,YAAY,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;SACpE;QACD,IAAK,GAAG,CAAC,QAAQ,CAAC,YAAY,CAAC,EAAE;YAC/B,OAAO,IAAI,CAAC,oBAAoB,CAAC,YAAY,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;SAC5D;QACD,IAAK,GAAG,CAAC,QAAQ,CAAC,kBAAkB,CAAC,EAAE;YACrC,OAAO,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;SACxD;QACD,OAAO,IAAI,CAAC;IACd,CAAC;CACF;;;;;;;;;;;;;;;;;AC3BM,MAAM,2BAA2B;IAAxC;QACE,aAAQ,GAAG,OAAO,CAAC;IAarB,CAAC;IAXC,YAAY,CAAC,MAAM,EAAE,GAAsB;QACzC,IAAI,OAAO,GAAY,EAAa,CAAC;QACrC,QAAQ,MAAM,EAAE;YACd,KAAK,KAAK;gBACR,OAAO,OAAO,GAAG,EAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,OAAO,EAAE,eAAe,EAAE,MAAM,EAAE,GAAG,CAAC,OAAO,EAAC,CAAC;YAC5F,KAAK,MAAM;gBACT,OAAO,OAAO,GAAG,EAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,OAAO,EAAE,aAAa,EAAE,MAAM,EAAE,GAAG,CAAC,OAAO,EAAC,CAAC;YAC1F;gBACE,OAAO,IAAI,CAAC;SACf;IACH,CAAC;CACF;;;;;;;;;;;;;;;;;ACdM,MAAM,gCAAgC;IAA7C;QAEE,aAAQ,GAAG,OAAO,CAAC;IAerB,CAAC;IAbC,YAAY,CAAC,MAAM,EAAE,GAAsB;QACzC,IAAI,OAAO,GAAY,EAAa,CAAC;QACrC,QAAQ,MAAM,EAAE;YACd,KAAK,KAAK;gBACR,OAAO,OAAO,GAAG,EAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,OAAO,EAAE,eAAe,EAAE,MAAM,EAAE,GAAG,CAAC,OAAO,EAAC,CAAC;YAC5F,KAAK,MAAM;gBACT,OAAO,OAAO,GAAG,EAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,OAAO,EAAE,aAAa,EAAE,MAAM,EAAE,GAAG,CAAC,OAAO,EAAC,CAAC;YAC1F,KAAK,QAAQ;gBACX,OAAO,OAAO,GAAG,EAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,OAAO,EAAE,6BAA6B,EAAE,MAAM,EAAE,GAAG,CAAC,OAAO,EAAC,CAAC;YAC1G;gBACE,OAAO,IAAI,CAAC;SACf;IACH,CAAC;CACF;;;;;;;;;;;;;;;;;;;;;;;;;ACpB0C;AACS;AACkB;AACN;AAC0C;AACtE;AACW;AAK/C,IAAa,kCAAkC,GAA/C,MAAa,kCAAkC;IAK7C,YAAmB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;QAC/C,IAAI,CAAC,iBAAiB,GAAG,IAAI,oFAAwB,EAAE,CAAC;QACxD,IAAI,CAAC,iBAAiB,GAAG,IAAI,8EAAqB,EAAE,CAAC;IACvD,CAAC;IAED,SAAS,CAAC,GAAqB,EAAE,IAAiB;QAChD,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAC1B,0DAAG,CAAE,GAAG,CAAC,EAAE;YACT,IAAK,GAAG,YAAY,iEAAY,EAAG;gBACjC,MAAM,OAAO,GAAG,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC;gBAC/D,IAAI,OAAO,KAAK,IAAI,EAAE;oBACpB,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;iBAClC;aACF;QACH,CAAC,CAAC,EACF,iEAAU,CAAE,CAAC,GAAQ,EAAE,EAAE;YACvB,IAAK,GAAG,YAAY,sEAAiB,EAAE;gBACrC,IAAI;oBACF,MAAM,OAAO,GAAG,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;oBACpE,IAAK,OAAO,KAAK,IAAI,EAAG;wBACtB,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;qBAClC;iBACF;gBAAC,OAAO,CAAC,EAAE;oBACV,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,EAAC,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE,CAAC,EAAC,CAAC,CAAC;iBAC7E;aACF;YACD,OAAO,+CAAE,CAAC,GAAG,CAAC,CAAC;QACjB,CAAC,CAAC,CAAC,CAAC;IACR,CAAC;IAED,oBAAoB,CAAC,GAAG,EAAE,MAAM;QAC9B,OAAO,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;IAC1D,CAAC;IAED,oBAAoB,CAAC,GAAG,EAAE,MAAM,EAAE,GAAsB;QACtD,OAAO,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,GAAG,EAAE,MAAM,EAAE,GAAG,CAAC,CAAC;IAC/D,CAAC;CACF;;YArCoC,0DAAc;;AALtC,kCAAkC;IAH9C,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;2EAMmC,0DAAc;GALtC,kCAAkC,CA0C9C;AA1C8C;;;;;;;;;;;;;;;;;ACTxC,MAAM,kCAAkC;IAE7C,YAAY,CAAC,MAAM;QACjB,IAAI,OAAO,GAAY,EAAa,CAAC;QACrC,QAAQ,MAAM,EAAE;YACd,KAAK,KAAK;gBACR,OAAO,OAAO,GAAG,EAAC,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,mBAAmB,EAAE,MAAM,EAAE,+BAA+B,EAAC,CAAC;YAChH;gBACE,OAAO,IAAI,CAAC;SACf;IACH,CAAC;CACF;;;;;;;;;;;;;;;;;;;;ACb4F;AACF;AACP;AAE7E,MAAM,wBAAwB;IAMnC;QACE,IAAI,CAAC,qBAAqB,GAAG,IAAI,2GAAmC,EAAE,CAAC;QACvE,IAAI,CAAC,oBAAoB,GAAG,IAAI,yGAAkC,EAAE,CAAC;QACrE,IAAI,CAAC,gBAAgB,GAAG,IAAI,kGAA8B,EAAE,CAAC;IAC/D,CAAC;IAED,YAAY,CAAC,GAAG,EAAE,MAAM;QACtB,IAAI,GAAG,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAE;YAC/B,OAAO,IAAI,CAAC,qBAAqB,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;SACxD;QACD,IAAI,GAAG,CAAC,QAAQ,CAAC,YAAY,CAAC,EAAE;YAC9B,OAAO,IAAI,CAAC,oBAAoB,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;SACvD;QACD,IAAI,GAAG,CAAC,QAAQ,CAAC,kBAAkB,CAAC,EAAE;YACpC,OAAO,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;SACnD;QACD,OAAO,IAAI,CAAC;IACd,CAAC;CAEF;;;;;;;;;;;;;;;;;AC3BM,MAAM,8BAA8B;IAEzC,YAAY,CAAC,MAAM;QACjB,IAAI,OAAO,GAAY,EAAa,CAAC;QACrC,QAAQ,MAAM,EAAE;YACd,KAAK,KAAK;gBACR,OAAO,OAAO,GAAG,EAAC,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,mBAAmB,EAAE,MAAM,EAAE,kBAAkB,EAAC,CAAC;YACnG,KAAK,MAAM;gBACT,OAAO,OAAO,GAAG,EAAC,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,iBAAiB,EAAE,MAAM,EAAE,gCAAgC,EAAC,CAAC;YAC/G;gBACE,OAAO,IAAI,CAAC;SACf;IACH,CAAC;CACF;;;;;;;;;;;;;;;;;ACbM,MAAM,mCAAmC;IAE9C,YAAY,CAAC,MAAM;QACjB,IAAI,OAAO,GAAY,EAAa,CAAC;QACrC,QAAQ,MAAM,EAAE;YACd,KAAK,KAAK;gBACR,OAAO,OAAO,GAAG,EAAC,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,mBAAmB,EAAE,MAAM,EAAE,qBAAqB,EAAC,CAAC;YACtG,KAAK,MAAM;gBACT,OAAO,OAAO,GAAG,EAAC,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,iBAAiB,EAAE,MAAM,EAAE,oCAAoC,EAAC,CAAC;YACnH,KAAK,QAAQ;gBACX,OAAO,OAAO,GAAG,EAAC,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,oBAAoB,EAAE,MAAM,EAAE,yBAAyB,EAAC,CAAC;YAC3G;gBACE,OAAO,IAAI,CAAC;SACf;IACH,CAAC;CAEF;;;;;;;;;;;;;;;;;ACJM,SAAS,aAAa,CAAC,OAAO,EAAE,OAAO;IAC5C,IAAI,OAAO,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,EAAE;QAC/B,OAAO,CAAC,CAAC,CAAC;KACX;IACD,IAAI,OAAO,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,EAAE;QAC/B,OAAO,CAAC,CAAC;KACV;IACD,OAAO,CAAC,CAAC;AACX,CAAC;;;;;;;;;;;;;ACtBD;AAAe,6GAA8C,2I;;;;;;;;;;;;;;;;;ACAX;AAOlD,IAAa,eAAe,GAA5B,MAAa,eAAe;IAE1B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;CAEF;AAPY,eAAe;IAL3B,+DAAS,CAAC;QACT,QAAQ,EAAE,YAAY;QACtB,sNAAsC;;KAEvC,CAAC;;GACW,eAAe,CAO3B;AAP2B;;;;;;;;;;;;;ACP5B;AAAe,qFAAsB,qCAAqC,GAAG,2BAA2B,qBAAqB,GAAG,+CAA+C,uc;;;;;;;;;;;;;;;;;ACA5G;AASnE,IAAa,kBAAkB,GAA/B,MAAa,kBAAkB;IAI7B,gBAAe,CAAC;IAEhB,QAAQ;QACN,IAAI,CAAC,KAAK,GAAG;YACX;gBACE,KAAK,EAAE,SAAS,EAAE,QAAQ,EAAE,IAAI;gBAChC,KAAK,EAAE;oBACL,EAAC,KAAK,EAAE,WAAW,EAAE,IAAI,EAAE,uBAAuB,EAAE,UAAU,EAAE,CAAC,WAAW,CAAC;wBAC3E,OAAO,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAC;oBAC9C,EAAC,KAAK,EAAE,UAAU,EAAE,IAAI,EAAE,yBAAyB,EAAE,UAAU,EAAE,CAAC,OAAO,CAAC;wBACxE,OAAO,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAC;iBAC/C;aACF;YACD;gBACE,KAAK,EAAE,SAAS,EAAE,QAAQ,EAAE,IAAI;gBAChC,KAAK,EAAE;oBACL,EAAC,KAAK,EAAE,kBAAkB,EAAE,IAAI,EAAE,kBAAkB,EAAE,UAAU,EAAE,CAAC,SAAS,CAAC;wBAC3E,uBAAuB,EAAE,EAAC,KAAK,EAAE,IAAI,EAAC;wBACtC,OAAO,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAC;oBAC9C,EAAC,KAAK,EAAE,cAAc,EAAE,IAAI,EAAE,qBAAqB,EAAE,UAAU,EAAE,CAAC,OAAO,CAAC,EAAE,uBAAuB,EAAE,EAAC,KAAK,EAAE,IAAI,EAAC;wBAChH,OAAO,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAC;oBAC9C,EAAC,KAAK,EAAE,yBAAyB,EAAE,IAAI,EAAE,uBAAuB,EAAE,UAAU,EAAE,CAAC,YAAY,CAAC;wBAC1F,uBAAuB,EAAE,EAAC,KAAK,EAAE,IAAI,EAAC;wBACtC,OAAO,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAC;iBAC/C;aACF;YACD;gBACE,KAAK,EAAE,gBAAgB,EAAE,QAAQ,EAAE,IAAI;gBACvC,KAAK,EAAE;oBACL;wBACE,KAAK,EAAE,cAAc;wBACrB,IAAI,EAAE,iBAAiB;wBACvB,UAAU,EAAE,CAAC,cAAc,CAAC;wBAC5B,uBAAuB,EAAE,EAAC,KAAK,EAAE,IAAI,EAAC;wBACtC,OAAO,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;qBAC5C;iBACF;aACF;SAAC,CAAC;IACP,CAAC;IAED,WAAW,CAAC,KAAK;QACf,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;YAC5B,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;QACH,KAAK,CAAC,IAAI,CAAC,UAAU,GAAG,oBAAoB,CAAC;IAC/C,CAAC;IAED,gBAAgB,CAAC,IAAI;QACnB,IAAI,IAAI,CAAC,KAAK,KAAK,SAAS,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;YAC9E,OAAO;SACR;QACD,IAAI,CAAC,KAAK,CAAC,OAAO,CAAE,OAAO,CAAC,EAAE;YAC5B,OAAO,CAAC,UAAU,GAAG,sBAAsB,CAAC;QAC9C,CAAC,CAAC,CAAC;IACL,CAAC;CAEF;AA5DY,kBAAkB;IAN9B,+DAAS,CAAC;QACT,QAAQ,EAAE,gBAAgB;QAC1B,kOAA0C;QAE1C,aAAa,EAAE,+DAAiB,CAAC,IAAI;;KACtC,CAAC;;GACW,kBAAkB,CA4D9B;AA5D8B;;;;;;;;;;;;;ACT/B;AAAe,6GAA8C,2M;;;;;;;;;;;;;;;;;;;;;;ACAb;AAC+B;AAE7C;AAQP;AAE2B;AAEQ;AAS9D,IAAa,oCAAoC,GAAjD,MAAa,oCAAoC;IAU/C,YAAoB,EAAe,EACf,KAAmB;QADnB,OAAE,GAAF,EAAE,CAAa;QACf,UAAK,GAAL,KAAK,CAAc;QAJvC,qBAAgB,GAAG,KAAK,CAAC;QAKvB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACzB,SAAS,EAAE,IAAI,0DAAW,EAAE;YAC5B,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAChD,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,yEAAyB,CAAC,CAAC,SAAS,CACpD,QAAQ,CAAC,EAAE;YACT,IAAI,QAAQ,KAAK,IAAI,EAAE;gBACrB,IAAI,CAAC,gBAAgB,EAAE,CAAC;aACzB;QACH,CAAC,CACF,CAAC;IACJ,CAAC;IAEO,gBAAgB;QAEtB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,uEAAuB,CAAC,CAAC,SAAS,CAClD,IAAI,CAAC,EAAE;YACL,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,IAAI,KAAK,2EAAc,CAAC,IAAI,CAAC;QAC5D,CAAC,CACF,CAAC;QAEF,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,kEAAkB,CAAC,CAAC,SAAS,CAC7C,eAAe,CAAC,EAAE,CAAC,IAAI,CAAC,eAAe,GAAG,eAAe,CAC1D,CAAC;QAEF,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,oEAAoB,CAAC,CAAC,SAAS,CAC/C,gBAAgB,CAAC,EAAE;YACjB,IAAI,CAAC,iBAAiB,GAAG,gBAAgB,CAAC;QAC5C,CAAC,CACF,CAAC;QAEF,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,gEAAgB,CAAC,CAAC,SAAS,CAC3C,UAAU,CAAC,EAAE;YACX,IAAI,CAAC,yBAAyB,CAAC,UAAU,CAAC,CAAC;QAC7C,CAAC,CACF,CAAC;IACJ,CAAC;IAED,oBAAoB;QAClB,MAAM,cAAc,GAAoB;YACtC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,KAAK;YACpC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC,MAAM;YAChD,SAAS,EAAE,IAAI,CAAC,IAAI,KAAK,2EAAc,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI;YACpF,EAAE,EAAE,IAAI,CAAC,IAAI,KAAK,2EAAc,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI;YACtE,OAAO,EAAE,IAAI,CAAC,IAAI,KAAK,2EAAc,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI;SACjF,CAAC;QACF,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,0EAAiC,CAAC,EAAC,eAAe,EAAE,cAAc,EAAC,CAAC,CAAC,CAAC;QAC9F,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;QACnB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,gEAAuB,EAAE,CAAC,CAAC;IACrD,CAAC;IAED,oBAAoB;QAClB,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;QACnB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,gEAAuB,EAAE,CAAC,CAAC;IACrD,CAAC;IAEO,yBAAyB,CAAC,aAAoC;QACpE,IAAI,CAAC,cAAc,GAAG,aAAa,CAAC;QACpC,IAAI,IAAI,CAAC,IAAI,KAAK,2EAAc,CAAC,GAAG,EAAE;YACpC,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;gBACpC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM,KAAK,IAAI,CAAC,MAAM,CAAC,CAAC;YACtF,CAAC,CAAC,CAAC;SACJ;QACD,IAAI,IAAI,CAAC,IAAI,KAAK,2EAAc,CAAC,IAAI,EAAE;YACrC,MAAM,kBAAkB,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM,KAAK,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;YACzG,IAAI,kBAAkB,CAAC,MAAM,KAAK,CAAC,EAAE;gBACnC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,UAAU,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC9D,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;aAChE;SACF;IACH,CAAC;IAED,cAAc;IACd,CAAC;IAED,YAAY;QACV,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,KAA4B,CAAC;QAC3E,IAAI,CAAC,SAAS,EAAE;YACd,OAAO,IAAI,CAAC;SACb;QACD,OAAO,SAAS,CAAC,SAAS,CAAC;IAC7B,CAAC;CACF;;YAxFyB,0DAAW;YACR,iDAAK;;AAXrB,oCAAoC;IANhD,+DAAS,CAAC;QACT,QAAQ,EAAE,oCAAoC;QAC9C,8RAA8D;;KAE/D,CAAC;2EAYwB,0DAAW;QACR,iDAAK;GAXrB,oCAAoC,CAkGhD;AAlGgD;;;;;;;;;;;;;ACxBjD;AAAe,6GAA8C,+J;;;;;;;;;;;;;;;;;;;;;;;;ACAM;AACZ;AACmC;AACxD;AASP;AAG2B;AAEQ;AAEgB;AAQ9E,IAAa,qBAAqB,GAAlC,MAAa,qBAAqB;IAmBhC,YAAoB,MAAc,EACd,KAAqB,EACrB,EAAe,EACf,KAAmB,EACnB,uBAAgD;QAJhD,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;QACrB,OAAE,GAAF,EAAE,CAAa;QACf,UAAK,GAAL,KAAK,CAAc;QACnB,4BAAuB,GAAvB,uBAAuB,CAAyB;QAjBpE,6BAAwB,GAAG,KAAK,CAAC;QASjC,gBAAgB;QAChB,wBAAmB,GAAG,KAAK,CAAC;QAS1B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACzB,EAAE,EAAE,IAAI,0DAAW,EAAE;YACrB,OAAO,EAAE,IAAI,0DAAW,EAAE;YAC1B,IAAI,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC9C,IAAI,EAAE,IAAI,0DAAW,CAAC,EAAE,EACtB,yDAAU,CAAC,OAAO,CAAC,+EAA+E,CAAC,EACnG,uBAAuB,CAAC,mBAAmB,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;YAC5E,IAAI,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC9C,UAAU,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACpD,WAAW,EAAE,IAAI,0DAAW,EAAE;YAC9B,UAAU,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC;SAC9B,CAAC,CAAC;QAEH,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAClD,IAAI,EAAE,KAAK,KAAK,EAAE;YAChB,IAAI,CAAC,IAAI,GAAG,2EAAc,CAAC,GAAG,CAAC;SAChC;aAAM;YACL,IAAI,CAAC,IAAI,GAAG,2EAAc,CAAC,IAAI,CAAC;YAChC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;SAClC;QACD,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,sEAA6B,CAAC,EAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAC,CAAC,CAAC,CAAC;QAC1E,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,IAAI,KAAK,2EAAc,CAAC,IAAI,CAAC;QAElE,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAC7B,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC5B,IAAI,CAAC,wCAAwC,EAAE,CAAC;QAChD,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IAEO,eAAe;QACrB,IAAI,IAAI,CAAC,IAAI,KAAK,2EAAc,CAAC,GAAG,EAAE;YACpC,IAAI,CAAC,WAAW,GAAG,0BAA0B,CAAC;YAC9C,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC;SAC5B;IACH,CAAC;IAEO,gBAAgB;QACtB,IAAI,IAAI,CAAC,IAAI,KAAK,2EAAc,CAAC,IAAI,EAAE;YACrC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,+DAAe,EAAE,EAAC,EAAE,EAAE,IAAI,CAAC,QAAQ,EAAC,CAAC,CAAC,SAAS,CAC/D,MAAM,CAAC,EAAE;gBACP,IAAI,CAAC,MAAM,EAAE;oBACX,OAAO;iBACR;gBACD,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;YAC/B,CAAC,CAAC,CAAC;SACN;aAAM;YACL,IAAI,CAAC,cAAc,EAAE,CAAC;SACvB;IACH,CAAC;IAEO,cAAc;QACpB,IAAI,CAAC,+BAA+B,EAAE,CAAC;IACzC,CAAC;IAEO,eAAe,CAAC,MAAc;QACpC,MAAM,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,KAAK,MAAM,CAAC,IAAI,CAAC,CAAC;QAC1E,IAAI,UAAU,EAAE;YACd,MAAM,CAAC,UAAU,GAAG,UAAU,CAAC;YAC/B,MAAM,CAAC,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC;SAC/B;QACD,IAAI,MAAM,CAAC,UAAU,IAAI,IAAI,EAAC;YAC5B,MAAM,CAAC,UAAU,GAAG,EAAE,CAAC;SACxB;QACD,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QAC9B,IAAI,CAAC,uBAAuB,CAAC,MAAM,CAAC,CAAC;QACrC,IAAI,CAAC,+BAA+B,EAAE,CAAC;IACzC,CAAC;IAEO,uBAAuB,CAAC,MAAc;QAC5C,MAAM,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,CAAc,CAAC;QAClE,OAAO,eAAe,CAAC,MAAM,EAAE;YAC7B,eAAe,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;SAC7B;QACD,IAAI,MAAM,CAAC,UAAU,KAAK,SAAS,IAAI,MAAM,CAAC,UAAU,IAAI,IAAI,IAAI,MAAM,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;YAChG,MAAM,CAAC,UAAU,CAAC,OAAO,CAAE,SAAS,CAAC,EAAE;gBACrC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;YACjD,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAEO,+BAA+B;QACrC,IAAI,MAAc,CAAC;QACnB,IAAI,2EAAc,CAAC,GAAG,EAAE;YACtB,MAAM,GAAG,EAAY,CAAC;YACtB,MAAM,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,KAAmB,CAAC;YACrE,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC;SACtC;aAAM;YACL,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,KAAe,CAAC;SACrC;QACD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,KAAK,2EAAc,CAAC,IAAI,CAAC,CAAC,CAAC,kBAAkB,GAAG,MAAM,CAAC,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,YAAY,CAAC;QAC7G,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,KAAK,2EAAc,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC;QAC1E,IAAI,IAAI,CAAC,wBAAwB,EAAE;YACjC,IAAI,CAAC,mBAAmB,GAAG,yDAAyD,CAAC;YACrF,IAAI,CAAC,yBAAyB,GAAG,gEAAgE,CAAC;SACnG;IACH,CAAC;IAED,mBAAmB;QACjB,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,KAAmB,CAAC;QACpE,IAAI,UAAU,EAAE;YACd,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;SACpD;IACH,CAAC;IAGD,mBAAmB;QACjB,MAAM,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,CAAc,CAAC;QAClE,IAAI,eAAe,CAAC,MAAM,KAAK,CAAC,EAAE;YAChC,MAAM,YAAY,GAAG,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAC9C,IAAI,YAAY,CAAC,MAAM,KAAK,EAAE,EAAE;gBAC9B,OAAO,IAAI,CAAC;aACb;SACF;QACD,OAAO,KAAK,CAAC;IACf,CAAC;IAED,SAAS;QACP,OAAO,IAAI,CAAC,IAAI,KAAK,2EAAc,CAAC,GAAG,CAAC;IAC1C,CAAC;IAED,iBAAiB;QACf,IAAI,CAAC,oBAAoB,GAAG,sBAAsB,CAAC;QACnD,MAAM,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,CAAc,CAAC;QAClE,MAAM,UAAU,GAAG,eAAe,CAAC,KAA0B,CAAC;QAC9D,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,oEAA2B,CAAC,EAAC,gBAAgB,EAAE,UAAU,EAAC,CAAC,CAAC,CAAC;QACrF,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,yEAAyB,CAAC,CAAC,SAAS,CACpD,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,sBAAsB,GAAG,QAAQ,CACnD,CAAC;IACJ,CAAC;IAED,yBAAyB,CAAC,eAAgC;QACxD,IAAI,CAAC,oBAAoB,GAAG,oBAAoB,CAAC;QACjD,MAAM,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,CAAc,CAAC;QAClE,MAAM,UAAU,GAAG,eAAe,CAAC,KAA0B,CAAC;QAC9D,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,uEAA8B,CAAC,EAAC,eAAe,EAAE,iBAAiB,EAAE,UAAU,EAAC,CAAC,CAAC,CAAC;QAC1G,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,yEAAyB,CAAC,CAAC,SAAS,CACpD,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,sBAAsB,GAAG,QAAQ,CACnD,CAAC;IACJ,CAAC;IAED,aAAa;QACX,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;IACrC,CAAC;IAED,IAAI,eAAe;QACjB,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,CAAc,CAAC;IACnD,CAAC;IAEO,wBAAwB,CAAC,eAAgC;QAC/D,MAAM,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,CAAc,CAAC;QAClE,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,CAAC;IACvD,CAAC;IAEO,qBAAqB,CAAC,eAAgC;QAC5D,MAAM,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,CAAc,CAAC;QAClE,MAAM,UAAU,GAAG,eAAe,CAAC,KAA0B,CAAC;QAE9D,UAAU,CAAC,OAAO,CAAE,IAAI,CAAC,EAAE;YACzB,IAAI,IAAI,CAAC,MAAM,KAAK,eAAe,CAAC,MAAM,EAAE;gBAC1C,IAAI,CAAC,KAAK,GAAG,eAAe,CAAC,KAAK,CAAC;aACpC;QACH,CAAC,CAAC,CAAC;QACH,eAAe,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;IACzC,CAAC;IAED,QAAQ;QACN,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,KAAe,CAAC;QAC1C,IAAI,IAAI,CAAC,IAAI,KAAK,2EAAc,CAAC,GAAG,EAAE;YACpC,MAAM,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,KAAmB,CAAC;YACrE,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC;YACrC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,+DAAsB,CAAC,EAAC,MAAM,EAAC,CAAC,CAAC,CAAC;SAC3D;aAAM;YACL,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC;YACrC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,iEAAwB,CAAC,EAAC,MAAM,EAAC,CAAC,CAAC,CAAC;SAC7D;IACH,CAAC;IAED,uBAAuB,CAAC,MAAc;QACpC,MAAM,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,CAAc,CAAC;QAClE,IAAI,UAAU,GAAG,eAAe,CAAC,KAAK,CAAC;QACvC,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM,KAAK,MAAM,CAAC,CAAC;QAC7D,OAAO,eAAe,CAAC,MAAM,EAAE;YAC7B,eAAe,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;SAC7B;QACD,UAAU,CAAC,OAAO,CAAE,SAAS,CAAC,EAAE;YAC9B,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;QACjD,CAAC,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,iEAAwB,CAAC,EAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,KAAK,EAAC,CAAC,CAAC,CAAC;QACxF,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;QACnC,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;IACnC,CAAC;IAEO,wCAAwC;QAC9C,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,6EAA6B,CAAC,CAAC,SAAS,CACxD,IAAI,CAAC,EAAE;YACL,IAAI,IAAI,CAAC,uBAAuB,IAAI,IAAI,CAAC,mBAAmB,KAAK,2EAAc,CAAC,GAAG,EAAE;gBACnF,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;aAC7D;YACD,IAAI,IAAI,CAAC,uBAAuB,IAAI,IAAI,CAAC,mBAAmB,KAAK,2EAAc,CAAC,IAAI,EAAE;gBACpF,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;aAC1D;QACH,CAAC,CACF,CAAC;IACJ,CAAC;IAEO,oBAAoB;QAC1B,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,mEAAmB,CAAC,CAAC,SAAS,CAC9C,gBAAgB,CAAC,EAAE;YACjB,IAAI,CAAC,gBAAgB,EAAE;gBACrB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,wEAA+B,EAAE,CAAC,CAAC;aAC5D;QACH,CAAC,CACF,CAAC;IACJ,CAAC;IAED,qBAAqB;QACnB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,oEAAoB,CAAC,CAAC,SAAS,CAC/C,iBAAiB,CAAC,EAAE;YAClB,IAAI,CAAC,iBAAiB,EAAE;gBACtB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,yEAAgC,EAAE,CAAC,CAAC;aAC7D;QACH,CAAC,CACF,CAAC;QACF,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,iEAAiB,CAAC,CAAC,SAAS,CAAC,WAAW,CAAC,EAAE;YAC3D,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QACjC,CAAC,CAAC,CAAC;IACL,CAAC;CACF;;YAhP6B,sDAAM;YACP,8DAAc;YACjB,0DAAW;YACR,iDAAK;YACa,2FAAuB;;AAvBzD,qBAAqB;IANjC,+DAAS,CAAC;QACT,QAAQ,EAAE,mBAAmB;QAC7B,2OAA6C;QAE7C,SAAS,EAAE,CAAC,2FAAuB,CAAC;;KACrC,CAAC;2EAoB4B,sDAAM;QACP,8DAAc;QACjB,0DAAW;QACR,iDAAK;QACa,2FAAuB;GAvBzD,qBAAqB,CAmQjC;AAnQiC;;;;;;;;;;;;;AC3BlC;AAAe,6GAA8C,2J;;;;;;;;;;;;;;;;;;;;;;;ACAX;AAEI;AACI;AACnB;AACL;AAC6D;AAEzC;AAOtD,IAAa,oBAAoB,GAAjC,MAAa,oBAAoB;IAO/B,YAAoB,OAAuB,EACvB,MAAc,EACd,KAAmB;QAFnB,YAAO,GAAP,OAAO,CAAgB;QACvB,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAc;QANvC,aAAQ,GAAyB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,6DAAa,CAAC,CAAC;QAQhE,IAAI,CAAC,IAAI,GAAG;YACV,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAC;YAChC,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAC;YAChC,EAAE,KAAK,EAAE,aAAa,EAAE,MAAM,EAAE,aAAa,EAAC;SAC/C,CAAC;QAEF,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,oEAAoB,CAAC,CAAC,SAAS,CAC/C,WAAW,CAAC,EAAE;YACZ,IAAI,CAAC,WAAW,EAAE;gBAChB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,yEAAgC,EAAE,CAAC,CAAC;aAC7D;QACH,CAAC,CACF,CAAC;IACJ,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,gEAAgB,CAAC,CAAC,SAAS,CAC3C,aAAa,CAAC,EAAE;YACd,IAAI,CAAC,aAAa,EAAE;gBAClB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,mEAA0B,EAAE,CAAC,CAAC;aACvD;QACH,CAAC,CACF,CAAC;QAEF,IAAI,CAAC,QAAQ,CAAC,SAAS,CACrB,IAAI,CAAC,EAAE;YACL,IAAI,IAAI,EAAE;gBACR,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,2DAAa,CAAC,CAAC;gBACxC,IAAI,CAAC,sBAAsB,EAAE,CAAC;aAC/B;QAAA,CAAC,CACL,CAAC;IACJ,CAAC;IAED,WAAW,CAAC,MAAc;QACxB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;IACjD,CAAC;IAED,WAAW;QACT,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;IACxC,CAAC;IAED,sBAAsB;QACpB,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;QAC3B,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC5C,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;gBAChC,MAAM,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;gBAC1B,IAAI,CAAC,KAAK,CAAC,EAAE;oBACX,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAC,CAAC;iBACpD;qBAAM;oBACL,MAAM,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;oBAC5C,MAAM,gBAAgB,GAAG,eAAe,CAAC,IAAI,CAAC;oBAC9C,IAAI,IAAI,KAAK,gBAAgB,EAAE;wBAC7B,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC;qBACpC;yBAAM;wBACL,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAC,CAAC;qBACpD;iBACF;aACF;SACF;IACH,CAAC;CAEF;;YAlE8B,uEAAc;YACf,sDAAM;YACP,iDAAK;;AATrB,oBAAoB;IALhC,+DAAS,CAAC;QACT,QAAQ,EAAE,kBAAkB;QAC5B,wOAA4C;;KAE7C,CAAC;2EAQ6B,uEAAc;QACf,sDAAM;QACP,iDAAK;GATrB,oBAAoB,CAyEhC;AAzEgC;;;;;;;;;;;;;ACfjC;AAAe,6GAA8C,+K;;;;;;;;;;;;;;;;;;;;;;ACAX;AAC6B;AACxB;AACrB;AACmF;AAE/D;AAQtD,IAAa,2BAA2B,GAAxC,MAAa,2BAA2B;IAatC,YAAoB,KAAqB,EACrB,MAAc,EACd,EAAe,EACf,KAAmB;QAHnB,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,OAAE,GAAF,EAAE,CAAa;QACf,UAAK,GAAL,KAAK,CAAc;QAVvC,wBAAmB,GAAG,KAAK,CAAC;QAG5B,8BAAyB,GAAG,KAAK,CAAC;QAQhC,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAClD,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QAEf,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CACxB;YACE,EAAE,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACvB,OAAO,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAC5B,IAAI,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC9C,IAAI,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC9C,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC/C,WAAW,EAAE,IAAI,0DAAW,EAAE;SAC/B,CACF,CAAC;IACJ,CAAC;IAED,QAAQ;QACN,IAAI,IAAI,CAAC,IAAI,KAAK,KAAK,EAAE;YACvB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,mEAAmB,EAAE,EAAC,EAAE,EAAE,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC,EAAC,CAAC,CAAC,SAAS,CAC7E,IAAI,CAAC,EAAE;gBACL,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,EAAE,KAAK,SAAS,IAAI,IAAI,CAAC,EAAE,KAAK,IAAI,EAAE;oBACtD,OAAM;iBACP;gBACD,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;gBAC5B,IAAI,CAAC,WAAW,GAAG,UAAU,GAAG,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;gBAC/C,IAAI,CAAC,iBAAiB,GAAG,QAAQ,CAAC;gBAElC,+DAA+D;gBAC/D,uGAAuG;gBACvG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,gEAAgB,CAAC,CAAC,SAAS,CAC3C,aAAa,CAAC,EAAE;oBACd,IAAI,CAAC,aAAa,EAAE;wBAClB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,mEAA0B,EAAE,CAAC,CAAC;qBACvD;gBACH,CAAC,CACF,CAAC;gBAEF,kEAAkE;gBAClE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,oFAAoC,EAAE,EAAC,UAAU,EAAE,IAAI,CAAC,IAAI,EAAC,CAAC,CAAC,SAAS,CACxF,MAAM,CAAC,EAAE;oBACP,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;oBACzB,IAAI,MAAM,KAAK,SAAS,IAAI,MAAM,KAAK,IAAI,IAAI,MAAM,KAAK,CAAC,EAAG;wBAC5D,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;wBAC1B,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;qBAC7B;yBAAM,IAAI,MAAM,GAAG,CAAC,EAAE;wBACrB,IAAI,CAAC,oBAAoB,GAAG,GAAG,MAAM,UAAU,CAAC;qBACjD;yBAAM,IAAI,MAAM,KAAK,CAAC,EAAE;wBACvB,IAAI,CAAC,oBAAoB,GAAG,GAAG,MAAM,SAAS,CAAC;qBAChD;oBACD,IAAI,IAAI,CAAC,YAAY,EAAE;wBACrB,IAAI,CAAC,eAAe;4BAClB,qFAAqF,IAAI,CAAC,oBAAoB,EAAE,CAAC;qBACpH;gBACH,CAAC,CACF,CAAC;YACJ,CAAC,CACF,CAAC;SACH;aAAM;YACL,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC;YAChC,IAAI,CAAC,WAAW,GAAG,uBAAuB,CAAC;SAC5C;IACH,CAAC;IAED,kBAAkB;QAChB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;IACnC,CAAC;IAED,QAAQ;QACN,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,KAAmB,CAAC;QAClD,IAAI,IAAI,CAAC,IAAI,KAAK,KAAK,EAAE;YACvB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,qEAA4B,CAAC,EAAC,UAAU,EAAC,CAAC,CAAC,CAAC;SACrE;aAAM;YACL,UAAU,CAAC,EAAE,GAAG,IAAI,CAAC;YACrB,UAAU,CAAC,OAAO,GAAG,IAAI,CAAC;YAC1B,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,mEAA0B,CAAC,EAAC,UAAU,EAAC,CAAC,CAAC,CAAC;YAClE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;SAClC;IACH,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,qEAA4B,CAAC,EAAC,EAAE,EAAE,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC,EAAC,CAAC,CAAC,CAAC;QACrF,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;QACjC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;IACnC,CAAC;IAED,UAAU;QACR,IAAI,IAAI,CAAC,oBAAoB,KAAK,SAAS,IAAI,IAAI,CAAC,oBAAoB,KAAK,IAAI,EAAE;YACjF,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;SACjC;aAAM;YACL,IAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC;SACvC;IACH,CAAC;IAED,gBAAgB;QACd,OAAO,IAAI,CAAC,IAAI,KAAK,KAAK,CAAC;IAC7B,CAAC;CACF;;YAnG4B,8DAAc;YACb,sDAAM;YACV,0DAAW;YACR,iDAAK;;AAhBrB,2BAA2B;IALvC,+DAAS,CAAC;QACT,QAAQ,EAAE,yBAAyB;QACnC,6PAAmD;;KAEpD,CAAC;2EAc2B,8DAAc;QACb,sDAAM;QACV,0DAAW;QACR,iDAAK;GAhBrB,2BAA2B,CAgHvC;AAhHuC;;;;;;;;;;;;;ACdxC;AAAe,6GAA8C,uK;;;;;;;;;;;;;;;;;;;;;ACAX;AAG+B;AAC/C;AACK;AAEe;AAOtD,IAAa,wBAAwB,GAArC,MAAa,wBAAwB;IAKnC,YAAoB,MAAc,EACd,KAAmB;QADnB,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAc;QAHvC,iBAAY,GAA6B,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,iEAAiB,CAAC,CAAC;QAK5E,IAAI,CAAC,IAAI,GAAG;YACV,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE;YACjC,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE;YACjC,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE;SACpC,CAAC;IACJ,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,oEAAoB,CAAC;aACpC,SAAS,CAAE,SAAS,CAAC,EAAE;YACtB,IAAI,CAAC,SAAS,EAAE;gBACd,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,yEAAgC,EAAE,CAAC,CAAC;aAC7D;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,WAAW;QACT,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;IACtC,CAAC;IAED,aAAa,CAAC,OAAmB;QAC/B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,GAAG,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;IAChD,CAAC;CAEF;;YA3B6B,sDAAM;YACP,iDAAK;;AANrB,wBAAwB;IALpC,+DAAS,CAAC;QACT,QAAQ,EAAE,sBAAsB;QAChC,oPAAgD;;KAEjD,CAAC;2EAM4B,sDAAM;QACP,iDAAK;GANrB,wBAAwB,CAgCpC;AAhCoC;;;;;;;;;;;;;;;;;;;;ACdM;AACK;AAOhD,IAAa,yBAAyB,iCAAtC,MAAa,yBAAyB;IAIpC,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;IAAI,CAAC;IAE/C,MAAM;QACJ,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAwB,2BAAyB,CAAC,UAAU,CAAC,CAAC;IAC1F,CAAC;IAED,MAAM,CAAC,MAAc,EAAE,SAA8B;QACnD,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAsB,2BAAyB,CAAC,UAAU,GAAG,MAAM,EAAE,SAAS,CAAC,CAAC;IAC5G,CAAC;CACF;AAXiB,oCAAU,GAAW,2BAA2B,CAAC;;YAEjC,+DAAU;;AAJ/B,yBAAyB;IAHrC,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;2EAKgC,+DAAU;GAJ/B,yBAAyB,CAarC;AAbqC;;;;;;;;;;;;;;;;;;;;;;ACRK;AACK;AAET;AACG;AAK1C,IAAa,kBAAkB,0BAA/B,MAAa,kBAAkB;IAI7B,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;IAAI,CAAC;IAE/C,MAAM;QACJ,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAe,oBAAkB,CAAC,UAAU,CAAC,CAAC,IAAI,CAC1E,iEAAU,CAAC,GAAG,CAAC,EAAE;YACf,OAAO,0CAAK,CAAC;QACf,CAAC,CAAC,CAAC,CAAC;IACR,CAAC;IAED,IAAI,CAAC,UAAsB;QACzB,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAa,oBAAkB,CAAC,UAAU,GAAG,MAAM,EAAE,UAAU,CAAC,CAAC;IAC9F,CAAC;IAED,MAAM,CAAC,UAAsB;QAC3B,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAa,oBAAkB,CAAC,UAAU,GAAG,GAAG,GAAG,UAAU,CAAC,EAAE,EAAE,UAAU,CAAC,CAAC;IAC1G,CAAC;IAED,MAAM,CAAC,EAAU;QACf,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,oBAAkB,CAAC,UAAU,GAAG,GAAG,GAAG,EAAE,CAAC,CAAC;IAC1E,CAAC;CACF;AAtBiB,6BAAU,GAAW,kBAAkB,CAAC;;YAExB,+DAAU;;AAJ/B,kBAAkB;IAH9B,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;2EAKgC,+DAAU;GAJ/B,kBAAkB,CAwB9B;AAxB8B;;;;;;;;;;;;;;;;;;;ACTY;AACK;AAOhD,IAAa,cAAc,GAA3B,MAAa,cAAc;IAIzB,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QAFzB,eAAU,GAAY,wBAAwB,CAAC;IAElB,CAAC;IAExC,MAAM;QACX,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAW,IAAI,CAAC,UAAU,CAAC,CAAC;IACxD,CAAC;IAEM,OAAO,CAAC,EAAU;QACvB,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAS,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC,CAAC;IAC3D,CAAC;IAEM,MAAM,CAAC,IAAY;QACxB,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,CAAS,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,CAAC;IAChE,CAAC;IAEM,MAAM,CAAC,MAAc;QAC1B,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAS,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;IAC5E,CAAC;IAEM,IAAI,CAAC,MAAc;QACxB,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAS,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;IAC7E,CAAC;CAEF;;YAtBiC,+DAAU;;AAJ/B,cAAc;IAH1B,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;2EAKgC,+DAAU;GAJ/B,cAAc,CA0B1B;AA1B0B;;;;;;;;;;;;;;;;;;;;;;;ACL3B,IAAY,0BAQX;AARD,WAAY,0BAA0B;IACpC,sFAAwD;IACxD,mGAAqE;IACrE,6FAA+D;IAE/D,wFAA0D;IAC1D,6GAA+E;IAC/E,4FAA8D;AAChE,CAAC,EARW,0BAA0B,KAA1B,0BAA0B,QAQrC;AAEM,MAAM,mBAAmB;IAAhC;QACW,SAAI,GAAG,0BAA0B,CAAC,mBAAmB,CAAC;IACjE,CAAC;CAAA;AAEM,MAAM,wBAAwB;IAEnC,YAAmB,OAAsC;QAAtC,YAAO,GAAP,OAAO,CAA+B;QADhD,SAAI,GAAG,0BAA0B,CAAC,wBAAwB,CAAC;IACR,CAAC;CAC9D;AAEM,MAAM,qBAAqB;IAEhC,YAAmB,OAAqB;QAArB,YAAO,GAAP,OAAO,CAAc;QAD/B,SAAI,GAAG,0BAA0B,CAAC,qBAAqB,CAAC;IACtB,CAAC;CAC7C;AAEM,MAAM,eAAe;IAE1B,YAAmB,OAAoC;QAApC,YAAO,GAAP,OAAO,CAA6B;QAD9C,SAAI,GAAG,0BAA0B,CAAC,eAAe,CAAC;IACD,CAAC;CAC5D;AAEM,MAAM,yBAAyB;IAEpC,YAAmB,OAAoC;QAApC,YAAO,GAAP,OAAO,CAA6B;QAD9C,SAAI,GAAG,0BAA0B,CAAC,yBAAyB,CAAC;IACX,CAAC;CAC5D;AAEM,MAAM,qBAAqB;IAEhC,YAAmB,OAAqB;QAArB,YAAO,GAAP,OAAO,CAAc;QAD/B,SAAI,GAAG,0BAA0B,CAAC,sBAAsB,CAAC;IACvB,CAAC;CAC7C;;;;;;;;;;;;;;;;;;;;;ACrCD,IAAY,uBAKX;AALD,WAAY,uBAAuB;IACjC,2FAAgE;IAChE,iGAAsE;IACtE,sGAA2E;IAC3E,iFAAsD;AACxD,CAAC,EALW,uBAAuB,KAAvB,uBAAuB,QAKlC;AAEM,MAAM,eAAe;IAE1B,YAAmB,OAA8C;QAA9C,YAAO,GAAP,OAAO,CAAuC;QADxD,SAAI,GAAG,uBAAuB,CAAC,eAAe,CAAC;IACY,CAAC;CACtE;AAEM,MAAM,kBAAkB;IAE7B,YAAmB,OAAiF;QAAjF,YAAO,GAAP,OAAO,CAA0E;QAD3F,SAAI,GAAG,uBAAuB,CAAC,kBAAkB,CAAC;IAC4C,CAAC;CACzG;AAEM,MAAM,qBAAqB;IAEhC,YAAmB,OAA2C;QAA3C,YAAO,GAAP,OAAO,CAAoC;QADrD,SAAI,GAAG,uBAAuB,CAAC,qBAAqB,CAAC;IACG,CAAC;CACnE;AAEM,MAAM,WAAW;IAAxB;QACW,SAAI,GAAG,uBAAuB,CAAC,WAAW,CAAC;IACtD,CAAC;CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3BqC;AACD;AACH;AACS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACC3C,IAAY,cAsBX;AAtBD,WAAY,cAAc;IACxB,uDAAqC;IACrC,sEAAoD;IACpD,kEAAgD;IAEhD,mEAAiD;IACjD,iFAA+D;IAC/D,iFAA+D;IAE/D,0DAAwC;IACxC,wEAAsD;IACtD,wEAAsD;IAEtD,+DAA6C;IAC7C,qEAAmD;IACnD,wEAAsD;IAEtD,2DAAyC;IACzC,oEAAkD;IAClD,oEAAkD;IAElD,mEAAiD;AACnD,CAAC,EAtBW,cAAc,KAAd,cAAc,QAsBzB;AAEM,MAAM,cAAc;IAA3B;QACW,SAAI,GAAG,cAAc,CAAC,cAAc,CAAC;IAChD,CAAC;CAAA;AAEM,MAAM,qBAAqB;IAEhC,YAAmB,OAA4B;QAA5B,YAAO,GAAP,OAAO,CAAqB;QADtC,SAAI,GAAG,cAAc,CAAC,qBAAqB,CAAC;IACH,CAAC;CACpD;AAEM,MAAM,qBAAqB;IAEhC,YAAmB,OAAqB;QAArB,YAAO,GAAP,OAAO,CAAc;QAD/B,SAAI,GAAG,cAAc,CAAC,qBAAqB,CAAC;IACV,CAAC;CAC7C;AAEM,MAAM,gBAAgB;IAE3B,YAAmB,OAAqB;QAArB,YAAO,GAAP,OAAO,CAAc;QAD/B,SAAI,GAAG,cAAc,CAAC,gBAAgB,CAAC;IACL,CAAC;CAC7C;AAEM,MAAM,uBAAuB;IAElC,YAAmB,OAAyB;QAAzB,YAAO,GAAP,OAAO,CAAkB;QADnC,SAAI,GAAG,cAAc,CAAC,uBAAuB,CAAC;IACR,CAAC;CACjD;AAEM,MAAM,uBAAuB;IAElC,YAAmB,OAAqB;QAArB,YAAO,GAAP,OAAO,CAAc;QAD/B,SAAI,GAAG,cAAc,CAAC,uBAAuB,CAAC;IACZ,CAAC;CAC7C;AAEM,MAAM,YAAY;IAEvB,YAAmB,OAAuB;QAAvB,YAAO,GAAP,OAAO,CAAgB;QADjC,SAAI,GAAG,cAAc,CAAC,YAAY,CAAC;IACC,CAAC;CAC/C;AAEM,MAAM,mBAAmB;IAE9B,YAAmB,OAAuB;QAAvB,YAAO,GAAP,OAAO,CAAgB;QADjC,SAAI,GAAG,cAAc,CAAC,mBAAmB,CAAC;IACN,CAAC;CAC/C;AAEM,MAAM,mBAAmB;IAE9B,YAAmB,OAAqB;QAArB,YAAO,GAAP,OAAO,CAAc;QAD/B,SAAI,GAAG,cAAc,CAAC,mBAAmB,CAAC;IACR,CAAC;CAC7C;AAEM,MAAM,YAAY;IAEvB,YAAmB,OAAyB;QAAzB,YAAO,GAAP,OAAO,CAAkB;QADnC,SAAI,GAAG,cAAc,CAAC,YAAY,CAAC;IACG,CAAC;CACjD;AAEM,MAAM,mBAAmB;IAE9B,YAAmB,OAAyB;QAAzB,YAAO,GAAP,OAAO,CAAkB;QADnC,SAAI,GAAG,cAAc,CAAC,mBAAmB,CAAC;IACJ,CAAC;CACjD;AAEM,MAAM,mBAAmB;IAE9B,YAAmB,OAAqB;QAArB,YAAO,GAAP,OAAO,CAAc;QAD/B,SAAI,GAAG,cAAc,CAAC,mBAAmB,CAAC;IACR,CAAC;CAC7C;AAEM,MAAM,UAAU;IAErB,YAAmB,OAAyB;QAAzB,YAAO,GAAP,OAAO,CAAkB;QADnC,SAAI,GAAG,cAAc,CAAC,UAAU,CAAC;IACK,CAAC;CACjD;AAEM,MAAM,iBAAiB;IAE5B,YAAmB,OAAyB;QAAzB,YAAO,GAAP,OAAO,CAAkB;QADnC,SAAI,GAAG,cAAc,CAAC,iBAAiB,CAAC;IACF,CAAC;CACjD;AAEM,MAAM,iBAAiB;IAE5B,YAAmB,OAAqB;QAArB,YAAO,GAAP,OAAO,CAAc;QAD/B,SAAI,GAAG,cAAc,CAAC,iBAAiB,CAAC;IACN,CAAC;CAC7C;AAEM,MAAM,iBAAiB;IAE5B,YAAmB,OAA+B;QAA/B,YAAO,GAAP,OAAO,CAAwB;QADzC,SAAI,GAAG,cAAc,CAAC,iBAAiB,CAAC;IACI,CAAC;CACvD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtGD,IAAY,kBAgBX;AAhBD,WAAY,kBAAkB;IAC5B,uEAAiD;IACjD,iFAA2D;IAC3D,2EAAqD;IAErD,qEAA+C;IAC/C,oFAA8D;IAC9D,8EAAwD;IAExD,qEAA+C;IAC/C,oFAA8D;IAC9D,6EAAuD;IAEvD,gEAA0C;IAC1C,+EAAyD;IACzD,yEAAmD;AACrD,CAAC,EAhBW,kBAAkB,KAAlB,kBAAkB,QAgB7B;AAEM,MAAM,oBAAoB;IAAjC;QACW,SAAI,GAAG,kBAAkB,CAAC,oBAAoB,CAAC;IAC1D,CAAC;CAAA;AAEM,MAAM,yBAAyB;IAEpC,YAAmB,OAAoC;QAApC,YAAO,GAAP,OAAO,CAA6B;QAD9C,SAAI,GAAG,kBAAkB,CAAC,yBAAyB,CAAC;IACH,CAAC;CAC5D;AAEM,MAAM,sBAAsB;IAEjC,YAAmB,OAAqB;QAArB,YAAO,GAAP,OAAO,CAAc;QAD/B,SAAI,GAAG,kBAAkB,CAAC,sBAAsB,CAAC;IACf,CAAC;CAC7C;AAEM,MAAM,gBAAgB;IAE3B,YAAmB,OAAiC;QAAjC,YAAO,GAAP,OAAO,CAA0B;QAD3C,SAAI,GAAG,kBAAkB,CAAC,gBAAgB,CAAC;IACG,CAAC;CACzD;AAEM,MAAM,0BAA0B;IAErC,YAAmB,OAAiC;QAAjC,YAAO,GAAP,OAAO,CAA0B;QAD3C,SAAI,GAAG,kBAAkB,CAAC,0BAA0B,CAAC;IACP,CAAC;CACzD;AAEM,MAAM,uBAAuB;IAElC,YAAmB,OAAqB;QAArB,YAAO,GAAP,OAAO,CAAc;QAD/B,SAAI,GAAG,kBAAkB,CAAC,uBAAuB,CAAC;IAChB,CAAC;CAC7C;AAEM,MAAM,gBAAgB;IAE3B,YAAmB,OAAqB;QAArB,YAAO,GAAP,OAAO,CAAc;QAD/B,SAAI,GAAG,kBAAkB,CAAC,gBAAgB,CAAC;IACT,CAAC;CAC7C;AAEM,MAAM,0BAA0B;IAErC,YAAmB,OAAqB;QAArB,YAAO,GAAP,OAAO,CAAc;QAD/B,SAAI,GAAG,kBAAkB,CAAC,0BAA0B,CAAC;IACnB,CAAC;CAC7C;AAEM,MAAM,uBAAuB;IAElC,YAAmB,OAAqB;QAArB,YAAO,GAAP,OAAO,CAAc;QAD/B,SAAI,GAAG,kBAAkB,CAAC,uBAAuB,CAAC;IAChB,CAAC;CAC7C;AAEM,MAAM,cAAc;IAEzB,YAAmB,OAAiC;QAAjC,YAAO,GAAP,OAAO,CAA0B;QAD3C,SAAI,GAAG,kBAAkB,CAAC,cAAc,CAAC;IACK,CAAC;CACzD;AAEM,MAAM,wBAAwB;IAEnC,YAAmB,OAAiC;QAAjC,YAAO,GAAP,OAAO,CAA0B;QAD3C,SAAI,GAAG,kBAAkB,CAAC,wBAAwB,CAAC;IACL,CAAC;CACzD;AAEM,MAAM,qBAAqB;IAEhC,YAAmB,OAAqB;QAArB,YAAO,GAAP,OAAO,CAAc;QAD/B,SAAI,GAAG,kBAAkB,CAAC,qBAAqB,CAAC;IACd,CAAC;CAC7C;;;;;;;;;;;;;;;;;;;;;;;AC9EwC;AACa;AAC8B;AAEpC;AACU;AAGlC;AAGxB,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;IAE5B,YAAoB,MAAe,EACf,OAAkC;QADlC,WAAM,GAAN,MAAM,CAAS;QACf,YAAO,GAAP,OAAO,CAA2B;QAKtD,aAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CACzB,4DAAM,CAAC,yEAAsC,CAAC,mBAAmB,CAAC,EAClE,gEAAS,CAAC,GAAG,EAAE;YACb,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,IAAI,CAC/B,0DAAG,CAAE,IAAI,CAAC,EAAE,CAAC,IAAI,uEAAoC,CAAC,EAAC,IAAI,EAAC,CAAC,CAAC,CAC/D,CAAC;QACJ,CAAC,CAAC,CACH,CAAC;QAGF,eAAU,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAC3B,4DAAM,CAAkB,yEAAsC,CAAC,eAAe,CAAC,EAC/E,gEAAS,CAAE,CAAC,EAAC,OAAO,EAAC,EAAE,EAAE;YACvB,MAAM,MAAM,GAAG,OAAO,CAAC,IAA2B,CAAC;YACnD,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,IAAI,CACpD,0DAAG,CAAE,IAAI,CAAC,EAAE;gBACV,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBAClB,OAAO,IAAI,wEAAqC,CAAC,EAAC,IAAI,EAAC,CAAC,CAAC;YAC3D,CAAC,CAAC,EACF,iEAAU,CAAE,KAAK,CAAC,EAAE,CAAC,+CAAE,CAAC,IAAI,oEAAiC,CAAC,EAAC,KAAK,EAAC,CAAC,CAAC,CAAC,CACzE,CAAC;QACJ,CAAC,CAAC,CACH,CAAC;IAzBF,CAAC;CA0BF;;YA7B6B,qDAAO;YACN,8FAAyB;;AAKtD;IADC,4DAAM,EAAE;;mDAQP;AAGF;IADC,4DAAM,EAAE;;qDAaP;AA9BS,iBAAiB;IAD7B,gEAAU,EAAE;2EAGiB,qDAAO;QACN,8FAAyB;GAH3C,iBAAiB,CA+B7B;AA/B6B;;;;;;;;;;;;;;;;;;;;ACX2B;AACF;AACN;AAE1C,MAAM,OAAO,GAAU;IAC5B,uEAAkB;IAClB,qEAAiB;IACjB,+DAAc;CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;ACPoC;AACO;AAEb;AACU;AAClC;AACiB;AAGzC,IAAa,cAAc,GAA3B,MAAa,cAAc;IAEzB,YAAoB,MAAe,EACf,OAAuB;QADvB,WAAM,GAAN,MAAM,CAAS;QACf,YAAO,GAAP,OAAO,CAAgB;QAK3C,YAAO,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CACxB,4DAAM,CAAC,6DAA0B,CAAC,cAAc,CAAC,EACjD,gEAAS,CAAE,GAAG,EAAE;YACd,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,IAAI,CAC/B,0DAAG,CAAE,CAAC,IAAI,EAAE,EAAE;gBACZ,OAAO,IAAI,oEAAiC,CAAC,EAAC,OAAO,EAAE,IAAI,EAAC,CAAC,CAAC;YAChE,CAAC,CAAC,EACF,iEAAU,CAAE,KAAK,CAAC,EAAE;gBAClB,OAAO,+CAAE,CAAC,IAAI,oEAAiC,CAAC,EAAC,KAAK,EAAC,CAAC,CAAC,CAAC;YAC5D,CAAC,CAAC,CACH,CAAC;QACJ,CAAC,CAAC,CACH,CAAC;QAGF,eAAU,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAC3B,4DAAM,CAA+B,6DAA0B,CAAC,gBAAgB,CAAC,EACjF,gEAAS,CAAC,CAAC,EAAC,OAAO,EAAC,EAAE,EAAE;YACtB,MAAM,EAAE,GAAG,OAAO,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC;YACjC,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,IAAI,CAClC,0DAAG,CAAC,CAAC,MAAM,EAAE,EAAE;gBACb,OAAO,IAAI,sEAAmC,CAAC,EAAC,MAAM,EAAC,CAAC,CAAC;YAC3D,CAAC,CAAC,EACF,iEAAU,CAAC,KAAK,CAAC,EAAE;gBACjB,OAAO,+CAAE,CAAC,IAAI,sEAAmC,CAAC,EAAC,KAAK,EAAC,CAAC,CAAC,CAAC;YAC9D,CAAC,CAAC,CACH,CAAC;QACJ,CAAC,CAAC,CACH,CAAC;QAGF,WAAM,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CACvB,4DAAM,CAA2B,6DAA0B,CAAC,YAAY,CAAC,EACzE,gEAAS,CAAC,CAAC,EAAC,OAAO,EAAC,EAAE,EAAE;YACtB,MAAM,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;YAC1B,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CACnC,0DAAG,CAAE,GAAG,EAAE;gBACR,OAAO,IAAI,kEAA+B,CAAC,EAAC,IAAI,EAAC,CAAC,CAAC;YACrD,CAAC,CAAC,EACF,iEAAU,CAAE,KAAK,CAAC,EAAE;gBAClB,OAAO,+CAAE,CAAC,IAAI,kEAA+B,CAAC,EAAC,KAAK,EAAC,CAAC,CAAC,CAAC;YAC1D,CAAC,CAAC,CACH,CAAC;QACJ,CAAC,CAAC,CACH,CAAC;QAGF,WAAM,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CACvB,4DAAM,CAA2B,6DAA0B,CAAC,YAAY,CAAC,EACzE,gEAAS,CAAC,CAAC,EAAC,OAAO,EAAC,EAAE,EAAE;YACtB,MAAM,cAAc,GAAG,OAAO,CAAC,MAAM,CAAC;YACtC,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC,IAAI,CAC7C,0DAAG,CAAC,MAAM,CAAC,EAAE;gBACX,OAAO,IAAI,kEAA+B,CAAC,EAAC,MAAM,EAAE,MAAM,EAAC,CAAC,CAAC;YAC/D,CAAC,CAAC,EACF,iEAAU,CAAC,KAAK,CAAC,EAAE;gBACjB,OAAO,+CAAE,CAAC,IAAI,kEAA+B,CAAC,EAAC,KAAK,EAAC,CAAC,CAAC,CAAC;YAC1D,CAAC,CAAC,CACH,CAAC;QACJ,CAAC,CAAC,CACH,CAAC;QAGF,SAAI,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CACrB,4DAAM,CAAyB,6DAA0B,CAAC,UAAU,CAAC,EACrE,gEAAS,CAAC,CAAC,EAAC,OAAO,EAAC,EAAE,EAAE;YACtB,MAAM,YAAY,GAAG,OAAO,CAAC,MAAM,CAAC;YACpC,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,IAAI,CACzC,0DAAG,CAAC,MAAM,CAAC,EAAE;gBACX,OAAO,IAAI,gEAA6B,CAAC,EAAC,MAAM,EAAE,MAAM,EAAC,CAAC,CAAC;YAC7D,CAAC,CAAC,EACF,iEAAU,CAAC,KAAK,CAAC,EAAE;gBACjB,OAAO,+CAAE,CAAC,IAAI,gEAA6B,CAAC,EAAC,KAAK,EAAC,CAAC,CAAC,CAAC;YACxD,CAAC,CAAC,CACH,CAAC;QACJ,CAAC,CAAC,CACH,CAAC;IA/EF,CAAC;CAiFF;;YApF6B,qDAAO;YACN,uEAAc;;AAK3C;IADC,4DAAM,EAAE;;+CAaP;AAGF;IADC,4DAAM,EAAE;;kDAcP;AAGF;IADC,4DAAM,EAAE;;8CAcP;AAGF;IADC,4DAAM,EAAE;;8CAcP;AAGF;IADC,4DAAM,EAAE;;4CAcP;AApFS,cAAc;IAD1B,gEAAU,EAAE;2EAGiB,qDAAO;QACN,uEAAc;GAHhC,cAAc,CAsF1B;AAtF0B;;;;;;;;;;;;;;;;;;;;;;;ACTc;AACa;AACgB;AAEtB;AAMU;AAClC;AAIxB,IAAa,kBAAkB,GAA/B,MAAa,kBAAkB;IAE7B,YAAoB,MAAe,EACf,OAA2B;QAD3B,WAAM,GAAN,MAAM,CAAS;QACf,YAAO,GAAP,OAAO,CAAoB;QAI/C,oBAAe,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAChC,4DAAM,CAA4B,iEAA8B,CAAC,oBAAoB,CAAC,EACtF,gEAAS,CAAE,CAAC,EAAE,EAAE,EAAE;YAChB,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,IAAI,CAC/B,0DAAG,CAAE,IAAI,CAAC,EAAE,CAAC,IAAI,wEAAqC,CAAC,EAAC,WAAW,EAAE,IAAI,EAAC,CAAC,CAAC,EAC5E,iEAAU,CAAE,KAAK,CAAC,EAAE,CAAC,+CAAE,CAAC,IAAI,qEAAkC,CAAC,EAAC,KAAK,EAAC,CAAC,CAAC,CAAC,CAC1E,CAAC;QACJ,CAAC,CAAC,CACH,CAAC;QAGF,qBAAgB,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CACjC,4DAAM,CAAmB,iEAA8B,CAAC,gBAAgB,CAAC,EACzE,gEAAS,CAAE,CAAC,EAAC,OAAO,EAAC,EAAE,EAAE;YACvB,MAAM,UAAU,GAAG,OAAO,CAAC,UAAwB,CAAC;YACpD,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,IAAI,CACzC,0DAAG,CAAC,IAAI,CAAC,EAAE;gBACT,OAAO,IAAI,yEAAsC,CAAC,EAAC,UAAU,EAAE,IAAI,EAAC,CAAC,CAAC;YACxE,CAAC,CAAC,EACF,iEAAU,CAAC,KAAK,CAAC,EAAE,CAAC,+CAAE,CAAC,IAAI,sEAAmC,CAAC,EAAC,KAAK,EAAC,CAAC,CAAC,CAAC,CAC1E,CAAC;QACJ,CAAC,CAAC,CACH,CAAC;QAGF,qBAAgB,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CACjC,4DAAM,CAAmB,iEAA8B,CAAC,gBAAgB,CAAC,EACzE,gEAAS,CAAC,CAAC,EAAC,OAAO,EAAC,EAAE,EAAE;YACtB,MAAM,EAAE,GAAG,OAAO,CAAC,EAAE,CAAC;YACtB,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,CACjC,0DAAG,CAAE,MAAM,CAAC,EAAE;gBACZ,IAAI,MAAM,EAAE;oBACV,OAAO,IAAI,yEAAsC,CAAC,EAAC,EAAE,EAAC,CAAC,CAAC;iBACzD;gBACD,OAAO,IAAI,sEAAmC,CAAC,EAAC,KAAK,EAAE,uCAAuC,GAAG,EAAE,EAAC,CAAC,CAAC;YACxG,CAAC,CAAC,EACF,iEAAU,CAAC,KAAK,CAAC,EAAE;gBACjB,OAAO,+CAAE,CAAC,IAAI,sEAAmC,CAAC,EAAC,KAAK,EAAC,CAAC,CAAC,CAAC;YAC9D,CAAC,CAAC,CACH,CAAC;QACJ,CAAC,CAAC,CACH,CAAC;QAGF,mBAAc,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAC/B,4DAAM,CAAiB,iEAA8B,CAAC,cAAc,CAAC,EACrE,gEAAS,CAAC,CAAC,EAAC,OAAO,EAAC,EAAE,EAAE;YACtB,MAAM,UAAU,GAAG,OAAO,CAAC,UAAwB,CAAC;YACpD,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,IAAI,CACvC,0DAAG,CAAE,CAAC,MAAM,EAAE,EAAE;gBACd,OAAO,IAAI,uEAAoC,CAAC,EAAC,UAAU,EAAE,MAAM,EAAC,CAAC,CAAC;YACxE,CAAC,CAAC,EACF,iEAAU,CAAC,KAAK,CAAC,EAAE;gBACjB,OAAO,+CAAE,CAAC,IAAI,oEAAiC,CAAC,EAAC,KAAK,EAAC,CAAC,CAAC,CAAC;YAC5D,CAAC,CAAC,CACH,CAAC;QACJ,CAAC,CAAC,CACH,CAAC;IA5DF,CAAC;CA8DF;;YAhE6B,qDAAO;YACN,gFAAkB;;AAI/C;IADC,4DAAM,EAAE;;2DASP;AAGF;IADC,4DAAM,EAAE;;4DAYP;AAGF;IADC,4DAAM,EAAE;;4DAiBP;AAGF;IADC,4DAAM,EAAE;;0DAcP;AAhES,kBAAkB;IAD9B,gEAAU,EAAE;2EAGiB,qDAAO;QACN,gFAAkB;GAHpC,kBAAkB,CAkE9B;AAlE8B;;;;;;;;;;;;;;;;;;;;;ACbiB;AAOzC,MAAM,YAAY,GAAoB;IAC3C,KAAK,EAAE,EAAE;IACT,SAAS,EAAE,KAAK;CACjB,CAAC;AAEK,SAAS,iBAAiB,CAC/B,KAAK,GAAG,YAAY,EACpB,MAAmC;IAGnC,QAAQ,MAAM,CAAC,IAAI,EAAE;QACnB,KAAK,yEAAsC,CAAC,mBAAmB,CAAC,CAAC;YAC/D,yBACK,KAAK,IACR,KAAK,EAAE,EAAE,IACT;SACH;QAED,KAAK,yEAAsC,CAAC,wBAAwB,CAAC,CAAC;YACpE,yBACK,KAAK,IACR,KAAK,EAAE,MAAM,CAAC,OAAO,CAAC,IAAI,EAC1B,SAAS,EAAE,IAAI,IACf;SACH;QAED,KAAK,yEAAsC,CAAC,eAAe,CAAC,CAAC;YAC3D,MAAM,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC;YACpC,MAAM,SAAS,GAAG,KAAK,CAAC,KAAK,CAAC;YAC9B,MAAM,QAAQ,GAAG,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,KAAK,OAAO,CAAC,MAAM,CAAC,CAAC;YAC1E,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAG;gBAC1B,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;gBAChC,QAAQ,CAAC,CAAC,CAAC,CAAC,WAAW,GAAG,OAAO,CAAC,WAAW,CAAC;aAC/C;YACD,yBACK,KAAK,IACR,KAAK,EAAE,SAAS,EAChB,SAAS,EAAE,IAAI,IACf;SACH;QAED,OAAO,CAAC,CAAC;YACP,OAAO,KAAK,CAAC;SACd;KACF;AACH,CAAC;AAEM,MAAM,aAAa,GAAG,CAAC,KAAsB,EAAE,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC;AAC9D,MAAM,YAAY,GAAG,CAAC,KAAsB,EAAE,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;ACvDxB;AACiB;AAU1D,MAAM,YAAY,GAA0B;IACjD,MAAM,EAAE,KAAK;IACb,iBAAiB,EAAE,EAAE;IACrB,eAAe,EAAE,IAAI;IACrB,IAAI,EAAE,IAAI;IACV,0BAA0B,EAAE,IAAI;CACjC,CAAC;AAEK,SAAS,uBAAuB,CACrC,KAAK,GAAG,YAAY,EACpB,MAAgD;IAGhD,QAAQ,MAAM,CAAC,IAAI,EAAE;QACnB,KAAK,sEAAmC,CAAC,eAAe,CAAC,CAAC;YACxD,yBACK,KAAK,IACR,MAAM,EAAE,IAAI,EACZ,iBAAiB,EAAE,MAAM,CAAC,OAAO,CAAC,gBAAgB,EAClD,IAAI,EAAE,2EAAc,CAAC,GAAG,IACxB;SACH;QAED,KAAK,sEAAmC,CAAC,kBAAkB,CAAC,CAAC;YAC3D,yBACK,KAAK,IACR,MAAM,EAAE,IAAI,EACZ,eAAe,EAAE,MAAM,CAAC,OAAO,CAAC,eAAe,EAC/C,iBAAiB,EAAE,MAAM,CAAC,OAAO,CAAC,iBAAiB,EACnD,IAAI,EAAE,2EAAc,CAAC,IAAI,IACzB;SACH;QAED,KAAK,sEAAmC,CAAC,qBAAqB,CAAC,CAAC;YAC9D,yBACK,KAAK,IACR,MAAM,EAAE,IAAI,EACZ,iBAAiB,EAAE,KAAK,CAAC,iBAAiB,EAC1C,IAAI,EAAE,KAAK,CAAC,IAAI,EAChB,0BAA0B,EAAE,MAAM,CAAC,OAAO,CAAC,eAAe,IAC1D;SACH;QAED,KAAK,sEAAmC,CAAC,WAAW,CAAC,CAAC;YACpD,yBACK,KAAK,IACR,MAAM,EAAE,KAAK,EACb,iBAAiB,EAAE,EAAE,EACrB,IAAI,EAAE,IAAI,EACV,0BAA0B,EAAE,IAAI,EAChC,eAAe,EAAE,IAAI,IACrB;SACH;QAED,OAAO,CAAC,CAAC;YACP,OAAO,KAAK,CAAC;SACd;KACF;AACH,CAAC;AAEM,MAAM,yBAAyB,GAAG,CAAC,KAA4B,EAAE,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC;AACjF,MAAM,oBAAoB,GAAG,CAAC,KAA4B,EAAE,EAAE,CAAC,KAAK,CAAC,iBAAiB,CAAC;AACvF,MAAM,uBAAuB,GAAG,CAAC,KAA4B,EAAE,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC;AAC7E,MAAM,kBAAkB,GAAG,CAAC,KAA4B,EAAE,EAAE,CAAC,KAAK,CAAC,eAAe,CAAC;AACnF,MAAM,6BAA6B,GAAG,CAAC,KAA4B,EAAE,EAAE;IAC5E,OAAO;QACL,uBAAuB,EAAE,KAAK,CAAC,0BAA0B;QACzD,mBAAmB,EAAE,KAAK,CAAC,IAAI;KAChC,CAAC;AACJ,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClFuD;AACF;AACN;AACkB;AAGN;AAStD,MAAM,QAAQ,GAA4B;IAC/C,WAAW,EAAE,uEAAkC;IAC/C,UAAU,EAAE,qEAAgC;IAC5C,OAAO,EAAE,+DAA0B;IACnC,uBAAuB,EAAE,iFAA4C;CACtE,CAAC;AAEF,uCAAuC;AAChC,MAAM,mBAAmB,GAAG,CAAC,KAAY,EAAE,EAAE,CAAC,KAAK,CAAC,WAAW,CAAC;AAChE,MAAM,iBAAiB,GAAG,kEAAc,CAAC,mBAAmB,EAAE,uEAAkC,CAAC,CAAC;AAClG,MAAM,oBAAoB,GAAG,kEAAc,CAAC,mBAAmB,EAAE,iEAA4B,CAAC,CAAC;AAC/F,MAAM,mBAAmB,GAAG,kEAAc,CAAC,mBAAmB,EACnE,CAAC,WAAW,EAAE,KAAK,EAAE,EAAE,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAE,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,KAAK,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;AAErF,sCAAsC;AAC/B,MAAM,kBAAkB,GAAG,CAAC,KAAY,EAAE,EAAE,CAAC,KAAK,CAAC,UAAU,CAAC;AAC9D,MAAM,gBAAgB,GAAG,kEAAc,CAAC,kBAAkB,EAAE,iEAA4B,CAAC,CAAC;AAC1F,MAAM,mBAAmB,GAAG,kEAAc,CAAC,kBAAkB,EAAE,gEAA2B,CAAC,CAAC;AAC5F,MAAM,kBAAkB,GAAG,kEAAc,CAAC,kBAAkB,EACjE,CAAC,UAAU,EAAE,KAAK,EAAE,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAE,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM,KAAK,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;AAErF,mCAAmC;AAC5B,MAAM,eAAe,GAAG,CAAC,KAAY,EAAE,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC;AACxD,MAAM,aAAa,GAAG,kEAAc,CAAC,eAAe,EAAE,4DAAuB,CAAC,CAAC;AAC/E,MAAM,gBAAgB,GAAG,kEAAc,CAAC,eAAe,EAAE,6DAAwB,CAAC,CAAC;AACnF,MAAM,oCAAoC,GAAG,kEAAc,CAAC,eAAe,EAChF,CAAC,OAAO,EAAE,KAAK,EAAE,EAAE;IACjB,IAAI,OAAO,KAAK,SAAS,IAAI,OAAO,CAAC,KAAK,KAAK,SAAS,IAAI,OAAO,CAAC,KAAK,KAAK,IAAI,IAAI,OAAO,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;QAChH,OAAO,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,KAAK,KAAK,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC;KAC1E;IACD,OAAO,CAAC,CAAC;AACX,CAAC,CAAC,CAAC;AACE,MAAM,eAAe,GAAG,kEAAc,CAAC,eAAe,EAC3D,CAAC,OAAO,EAAE,KAAK,EAAE,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,KAAK,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;AAC/D,MAAM,QAAQ,GAAG,kEAAc,CAAC,eAAe,EAAE,yDAAoB,CAAC,CAAC;AACvE,MAAM,oBAAoB,GAAG,kEAAc,CAAC,eAAe,EAAE,qEAAgC,CAAC,CAAC;AAEtG,0BAA0B;AACnB,MAAM,8BAA8B,GAAG,CAAC,KAAY,EAAE,EAAE,CAAC,KAAK,CAAC,uBAAuB,CAAC;AACvF,MAAM,yBAAyB,GAAG,kEAAc,CAAC,8BAA8B,EAAE,mFAA8C,CAAC,CAAC;AACjI,MAAM,oBAAoB,GAAG,kEAAc,CAAC,8BAA8B,EAAE,8EAAyC,CAAC,CAAC;AACvH,MAAM,uBAAuB,GAAG,kEAAc,CAAC,8BAA8B,EAAE,iFAA4C,CAAC,CAAC;AAC7H,MAAM,kBAAkB,GAAG,kEAAc,CAAC,8BAA8B,EAAE,4EAAuC,CAAC,CAAC;AACnH,MAAM,6BAA6B,GAAG,kEAAc,CAAC,8BAA8B,EACxF,uFAAkD,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;AC3DG;AAET;AACiB;AAQ1D,MAAM,YAAY,GAAiB;IACxC,KAAK,EAAE,EAAE;IACT,SAAS,EAAE,KAAK;IAChB,IAAI,EAAE,2EAAc,CAAC,GAAG;CACzB,CAAC;AAEK,SAAS,cAAc,CAC5B,KAAK,GAAG,YAAY,EACpB,MAAuC;IAGvC,QAAQ,MAAM,CAAC,IAAI,EAAE;QACnB,KAAK,6DAA0B,CAAC,qBAAqB,CAAC,CAAC;YACrD,yBACK,KAAK,IACR,KAAK,EAAE,MAAM,CAAC,OAAO,CAAC,OAAO,EAC7B,SAAS,EAAE,IAAI,IACf;SACH;QAED,KAAK,6DAA0B,CAAC,iBAAiB,CAAC,CAAC;YACjD,yBACK,KAAK,IACR,KAAK,EAAE,KAAK,CAAC,KAAK,EAClB,SAAS,EAAE,KAAK,CAAC,SAAS,EAC1B,IAAI,EAAE,MAAM,CAAC,OAAO,CAAC,IAAI,IACzB;SACH;QAED,KAAK,6DAA0B,CAAC,mBAAmB,CAAC,CAAC;YACnD,MAAM,IAAI,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC;YACjC,MAAM,SAAS,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC;YAC/D,SAAS,CAAC,IAAI,CAAC,2DAAa,CAAC,CAAC;YAC9B,yBACK,KAAK,IACR,KAAK,EAAE,SAAS,EAChB,SAAS,EAAE,IAAI,IACf;SACH;QAED,KAAK,6DAA0B,CAAC,mBAAmB,CAAC,CAAC;YACnD,MAAM,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC;YACrC,MAAM,SAAS,GAAG,KAAK,CAAC,KAAK,CAAC;YAC9B,MAAM,cAAc,GAAG,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,KAAK,MAAM,CAAC,IAAI,CAAC,CAAC;YACzE,MAAM,KAAK,GAAG,SAAS,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;YAChD,SAAS,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC;YAC1B,SAAS,CAAC,IAAI,CAAC,2DAAa,CAAC,CAAC;YAC9B,yBACK,KAAK,IACR,KAAK,EAAE,SAAS,EAChB,SAAS,EAAE,IAAI,IACf;SACH;QAED,KAAK,6DAA0B,CAAC,iBAAiB,CAAC,CAAC;YACjD,MAAM,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC;YACrC,IAAI,SAAS,GAAG,KAAK,CAAC,KAAK,CAAC;YAC5B,IAAI,CAAC,SAAS,EAAE;gBACd,SAAS,GAAG,IAAI,KAAK,EAAE,CAAC;aACzB;YACD,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACvB,SAAS,CAAC,IAAI,CAAC,2DAAa,CAAC,CAAC;YAC9B,yBACK,KAAK,IACR,KAAK,EAAE,SAAS,EAChB,SAAS,EAAE,IAAI,IACf;SACH;QAED,OAAO,CAAC,CAAC;YACP,OAAO,KAAK,CAAC;SACd;KAEF;AACH,CAAC;AAEM,MAAM,WAAW,GAAG,CAAC,KAAmB,EAAE,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC;AACzD,MAAM,YAAY,GAAG,CAAC,KAAmB,EAAE,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC;AAC9D,MAAM,QAAQ,GAAG,CAAC,KAAmB,EAAE,EAAE;IAC9C,IAAI,KAAK,CAAC,KAAK,EAAE;QACf,OAAO,KAAK,CAAC,KAAK,CAAC,GAAG,CAAE,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;KAC1C;IACD,OAAO,EAAE,CAAC;AACZ,CAAC,CAAC;AACK,MAAM,oBAAoB,GAAG,CAAC,KAAmB,EAAE,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC;;;;;;;;;;;;;;;;;;;;;AC/FxB;AAQzC,MAAM,uBAAuB,GAAqB;IACvD,WAAW,EAAE,EAAE;IACf,SAAS,EAAE,KAAK;CACjB,CAAC;AAEK,SAAS,kBAAkB,CAChC,KAAK,GAAG,uBAAuB,EAC/B,MAAqC;IAGrC,QAAQ,MAAM,CAAC,IAAI,EAAE;QACnB,KAAK,iEAA8B,CAAC,yBAAyB,CAAC,CAAC;YAC7D,yBACK,KAAK,IACR,WAAW,EAAE,MAAM,CAAC,OAAO,CAAC,WAAW,EACvC,SAAS,EAAE,IAAI,IACf;SACH;QAED,KAAK,iEAA8B,CAAC,0BAA0B,CAAC,CAAC;YAC9D,MAAM,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC;YAC1C,MAAM,SAAS,GAAG,KAAK,CAAC,WAAW,CAAC;YACpC,SAAS,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE;gBAC5B,IAAI,IAAI,CAAC,EAAE,KAAK,OAAO,CAAC,EAAE,EAAE;oBAC1B,SAAS,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC;iBACxB;YACH,CAAC,CAAC,CAAC;YACH,yBACK,KAAK,IACR,WAAW,EAAE,SAAS,EACtB,SAAS,EAAE,IAAI,IACf;SACH;QAED,KAAK,iEAA8B,CAAC,0BAA0B,CAAC,CAAC;YAC9D,MAAM,EAAE,GAAG,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC;YAC7B,MAAM,SAAS,GAAG,KAAK,CAAC,WAAW,CAAC;YACpC,MAAM,QAAQ,GAAG,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;YAC1D,yBACK,KAAK,IACR,WAAW,EAAE,QAAQ,EACrB,SAAS,EAAE,IAAI,IACf;SACH;QAED,KAAK,iEAA8B,CAAC,wBAAwB,CAAC,CAAC;YAC5D,IAAI,OAAO,GAAG,KAAK,CAAC,WAAW,CAAC;YAChC,IAAI,CAAC,OAAO,EAAE;gBACZ,OAAO,GAAG,IAAI,KAAK,EAAE,CAAC;aACvB;YACD,MAAM,UAAU,GAAG,MAAM,CAAC,OAAO,CAAC,UAAwB,CAAC;YAC3D,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YACzB,yBACK,KAAK,IACR,WAAW,EAAE,OAAO,EACpB,SAAS,EAAE,IAAI,IACf;SACH;QAED;YACE,OAAO,KAAK,CAAC;KAChB;AACH,CAAC;AAEM,MAAM,kBAAkB,GAAG,CAAC,KAAuB,EAAE,EAAE,CAAC,KAAK,CAAC,WAAW,CAAC;AAC1E,MAAM,YAAY,GAAG,CAAC,KAAuB,EAAE,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC;;;;;;;;;;;;;;;;;;;;;;;ACzEhC;AACP;AACwD;AAEtD;AAE8B;AACJ;AAG9D,IAAa,uBAAuB,GAApC,MAAa,uBAAuB;IAIlC,YAAoB,KAAmB;QAAnB,UAAK,GAAL,KAAK,CAAc;QACrC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,gEAAgB,CAAC,CAAC,SAAS,CAC3C,gBAAgB,CAAC,EAAE;YACjB,IAAI,CAAC,gBAAgB,EAAE;gBACrB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,6EAA4B,EAAE,CAAC,CAAC;aACzD;QACH,CAAC,CACF,CAAC;QAEF,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,oEAAoB,CAAC,CAAC,SAAS,CAC/C,IAAI,CAAC,EAAE;YACL,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACnB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,mBAAmB,CAAC,KAAsB;QACxC,8CAA8C;QAC9C,IAAI,IAAI,CAAC,IAAI,KAAK,2EAAc,CAAC,IAAI,EAAE;YACrC,OAAO,+CAAE,CAAC,IAAI,CAAC,CAAC;SACjB;QACD,IAAI,cAAc,GAAa,EAAE,CAAC;QAClC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,wDAAQ,CAAC,CAAC,SAAS,CACnC,KAAK,CAAC,EAAE;YACN,cAAc,GAAG,KAAK,CAAC;QACzB,CAAC,CACF,CAAC;QACF,yCAAyC;QACzC,MAAM,MAAM,GAAG,cAAc,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACnD,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACpB,OAAO,+CAAE,CAAC,cAAc,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAC,OAAO,EAAE,0BAA0B,EAAC,CAAC,CAAC;IACpG,CAAC;CACF;;YAhC4B,iDAAK;;AAJrB,uBAAuB;IADnC,gEAAU,EAAE;2EAKgB,iDAAK;GAJrB,uBAAuB,CAoCnC;AApCmC;;;;;;;;;;;;;ACVpC;AAAA;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,IAAI,EAAE,WAAW;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;;;AChBpB;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-SG\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-SG.js\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","export default \"<h1>Xdevices</h1>\\n\\n<p>\\n  <br/>\\n  This is udemy course project for micro-monitoring system based on microservices.\\n  <br/> <br/>\\n  Welcome and enjoy doing it. <br/>\\n\\n  <br/><br/>\\n  {{host}}\\n</p>\\n\"","export default \"<div class=\\\"p-grid sample-layout\\\">\\n\\n  <div class=\\\"p-col-12 p-col-nogutter\\\">\\n    <app-navbar></app-navbar>\\n  </div>\\n\\n  <div class=\\\"p-col-4 p-md-2 p-col-nogutter\\\">\\n    <app-panel-menu></app-panel-menu>\\n  </div>\\n\\n  <div class=\\\"p-col-12 p-md-9 p-col-nogutter ui-g-nopad\\\">\\n    <div class=\\\"p-col-12\\\">\\n      <router-outlet></router-outlet>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"p-col-12\\\">\\n    <app-footer></app-footer>\\n  </div>\\n\\n</div>\\n\"","export default \"<p-toast [style]=\\\"{marginTop: '80px', width: '350px'}\\\"></p-toast>\\n\\n<form [formGroup]=\\\"model\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n  <p-panel header=\\\"{{headerTitle}}\\\">\\n    <div class=\\\"general-panel-container\\\">\\n      <p-panel header=\\\"Settings\\\">\\n        <div class=\\\"ui-grid ui-grid-responsive ui-grid-pad ui-fluid\\\" style=\\\"margin: 10px 0px\\\">\\n          <div class=\\\"ui-grid-row\\\">\\n            <div class=\\\"ui-grid-col-2\\\">\\n              Name:\\n            </div>\\n            <div class=\\\"ui-grid-col-6\\\">\\n              <input pInputText type=\\\"text\\\" placeholder=\\\"Required\\\" formControlName=\\\"name\\\"/>\\n            </div>\\n            <div class=\\\"ui-grid-col-4\\\">\\n              <p-message severity=\\\"error\\\" text=\\\"Name is required\\\" *ngIf=\\\"!model.controls['name'].valid&&model.controls['name'].dirty\\\"></p-message>\\n            </div>\\n          </div>\\n          <div class=\\\"ui-grid-row\\\">\\n            <div class=\\\"ui-grid-col-2\\\">\\n              Symbol:\\n            </div>\\n            <div class=\\\"ui-grid-col-6\\\">\\n              <input pInputText type=\\\"text\\\" placeholder=\\\"Required\\\" [attr.disabled]=\\\"isEditAndCreationDisabled\\\" formControlName=\\\"symbol\\\"/>\\n            </div>\\n            <div class=\\\"ui-grid-col-4\\\">\\n              <p-message severity=\\\"error\\\" text=\\\"Symbol is required\\\" *ngIf=\\\"!model.controls['symbol'].valid&&model.controls['symbol'].dirty\\\"></p-message>\\n            </div>\\n          </div>\\n          <div class=\\\"ui-grid-row\\\">\\n            <div class=\\\"ui-grid-col-2\\\">\\n              Description:\\n            </div>\\n            <div class=\\\"ui-grid-col-6\\\">\\n              <textarea pInputTextarea type=\\\"text\\\" [autoResize]=\\\"false\\\" [cols]=\\\"3\\\" formControlName=\\\"description\\\"></textarea>\\n            </div>\\n            <div class=\\\"ui-grid-col-4\\\"></div>\\n          </div>\\n\\n        </div>\\n      </p-panel>\\n    </div>\\n\\n    <p-footer>\\n      <button pButton class=\\\"ui-button-info\\\" (click)=\\\"onBack()\\\" label=\\\"Back\\\"></button> &nbsp;\\n      <button pButton class=\\\"ui-button-warning\\\" type=\\\"submit\\\" [disabled]=\\\"!model.valid\\\" label=\\\"{{submitButtonLabel}}\\\"></button> &nbsp;\\n    </p-footer>\\n  </p-panel>\\n</form>\\n\"","export default \"<p-panel header=\\\"Attributes dictionary\\\">\\n  <p-table [columns]=\\\"cols\\\" [value]=\\\"attributes$ | async\\\" [rowHover]=\\\"true\\\" dataKey=\\\"symbol\\\">\\n\\n    <ng-template pTemplate=\\\"header\\\" let-columns>\\n      <tr>\\n        <th *ngFor=\\\"let col of columns\\\">\\n          {{col.header}}\\n        </th>\\n      </tr>\\n    </ng-template>\\n\\n    <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\">\\n      <tr [pSelectableRow]=\\\"rowData\\\">\\n        <td *ngFor=\\\"let col of columns\\\" (click)=\\\"onRowClicked(rowData)\\\">\\n          {{rowData[col.field]}}\\n        </td>\\n      </tr>\\n    </ng-template>\\n  </p-table>\\n</p-panel>\\n\"","export default \"<div class=\\\"container-fluid\\\">\\n  <hr>\\n  <footer>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <p>Copyright &copy; 2019 xdevices </p>\\n      </div>\\n    </div>\\n  </footer>\\n</div>\\n\"","export default \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n  <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/']\\\">Xdevices</a>\\n</nav>\\n\"","export default \"<p-panelMenu [model]=\\\"items\\\" [style]=\\\"{'width':'200px'}\\\" [multiple]=\\\"true\\\"></p-panelMenu>\\n\"","export default \"<form [formGroup]=\\\"model\\\">\\n  <div class=\\\"ui-grid ui-grid-responsive ui-grid-pad ui-fluid\\\" style=\\\"margin: 10px 0px\\\">\\n    <div class=\\\"ui-grid-row\\\">\\n      <div class=\\\"ui-grid-col-2\\\">\\n        Attribute:\\n      </div>\\n      <div class=\\\"ui-grid-col-6\\\">\\n        <p-dropdown [options]=\\\"attributesLeft\\\" [disabled]=\\\"dropdownDisabled\\\" optionLabel=\\\"symbol\\\" formControlName=\\\"attribute\\\" placeholder=\\\"Select attribute to add...\\\" (ngModelChange)=\\\"onModelChanged()\\\"></p-dropdown>\\n      </div>\\n      <div class=\\\"ui-grid-col-4\\\">\\n        <p-message severity=\\\"error\\\" text=\\\"Attribute required\\\" *ngIf=\\\"!model.controls['attribute'].valid&&model.controls['attribute'].dirty\\\"></p-message>\\n      </div>\\n    </div>\\n    <div class=\\\"ui-grid-row\\\">\\n      <div class=\\\"ui-grid-col-2\\\">\\n        Value:\\n      </div>\\n      <div class=\\\"ui-grid-col-6\\\" *ngIf=\\\"getInputtype() === null\\\">\\n        <input pInputText type=\\\"text\\\" placeholder=\\\"Required\\\" disabled=\\\"true\\\" formControlName=\\\"value\\\"/>\\n      </div>\\n      <div class=\\\"ui-grid-col-6\\\" *ngIf=\\\"getInputtype() === 'boolean'\\\">\\n        <p-inputSwitch formControlName=\\\"value\\\"></p-inputSwitch>\\n      </div>\\n      <div class=\\\"ui-grid-col-6\\\" *ngIf=\\\"getInputtype() === 'positive_numeric'\\\">\\n        <p-spinner size=\\\"30\\\" formControlName=\\\"value\\\" [min]=\\\"0\\\"></p-spinner>\\n      </div>\\n      <div class=\\\"ui-grid-col-6\\\" *ngIf=\\\"getInputtype() === 'numeric'\\\">\\n        <p-spinner size=\\\"30\\\" formControlName=\\\"value\\\" step=\\\"0.5\\\" formatInput=\\\"true\\\"></p-spinner>\\n      </div>\\n      <div class=\\\"ui-grid-col-6\\\" *ngIf=\\\"getInputtype() === 'ip'\\\">\\n        <input pInputText type=\\\"text\\\" formControlName=\\\"value\\\" pattern=\\\"\\\\b((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)(\\\\.|$)){4}\\\\b\\\"/>\\n      </div>\\n\\n      <div class=\\\"ui-grid-col-4\\\">\\n        <p-message severity=\\\"error\\\" text=\\\"Value is required\\\" *ngIf=\\\"!model.controls['value'].valid&&model.controls['value'].dirty\\\"></p-message>\\n      </div>\\n    </div>\\n  </div>\\n  <br/>\\n  <br/>\\n  <br/>\\n  <br/>\\n  <div class=\\\"custom-dialog-component-footer\\\">\\n    <button pButton class=\\\"ui-button-warning\\\" type=\\\"button\\\" [disabled]=\\\"!model.valid\\\" (click)=\\\"onSubmitNewAttribute()\\\" label=\\\"OK\\\"></button> &nbsp;\\n    <button pButton class=\\\"ui-button-warning\\\" type=\\\"button\\\" (click)=\\\"onCancelNewAttribute()\\\" label=\\\"Cancel\\\"></button>\\n  </div>\\n</form>\\n\"","export default \"<p-toast [style]=\\\"{marginTop: '80px', width: '350px'}\\\"></p-toast>\\n\\n<p-dialog header=\\\"{{attributeDialogTitle}}\\\" [(visible)]=\\\"attributeDialogVisible\\\" [modal]=\\\"true\\\" [responsive]=\\\"true\\\" [style]=\\\"{width: '600px', minHeight: '150px'}\\\" [minY]=\\\"70\\\"\\n          [maximizable]=\\\"true\\\" [resizable]=\\\"true\\\" [baseZIndex]=\\\"10000\\\">\\n  <app-sensor-detail-attribute-dialog *ngIf=\\\"attributeDialogVisible\\\"></app-sensor-detail-attribute-dialog>\\n</p-dialog>\\n\\n<div class=\\\"delete-dialog-box\\\">\\n  <p-dialog header=\\\"Delete Sensor?\\\" [(visible)]=\\\"displayDeleteDialog\\\" [modal]=\\\"true\\\" [responsive]=\\\"true\\\" [style]=\\\"{width: '350px', minWidth: '200px'}\\\" [minY]=\\\"70\\\"\\n            [maximizable]=\\\"true\\\" [baseZIndex]=\\\"10000\\\">\\n    <p>Are you sure, you want to delete this Sensor?</p>\\n    <p-footer>\\n      <button pButton class=\\\"ui-button-danger\\\" type=\\\"button\\\" (click)=\\\"onDelete()\\\" label=\\\"Yes\\\"></button>\\n      <button pButton class=\\\"ui-button-info\\\" type=\\\"button\\\" (click)=\\\"displayDeleteDialog=false\\\" label=\\\"No\\\"></button>\\n    </p-footer>\\n  </p-dialog>\\n</div>\\n\\n<form [formGroup]=\\\"model\\\">\\n  <p-panel header=\\\"{{headerTitle}}\\\" >\\n    <div class=\\\"general-panel-container\\\">\\n      <p-panel header=\\\"General settings\\\">\\n        <div class=\\\"ui-grid ui-grid-responsive ui-grid-pad ui-fluid\\\" style=\\\"margin: 10px 0px\\\">\\n          <div class=\\\"ui-grid-row\\\">\\n            <div class=\\\"ui-grid-col-2\\\">\\n              Name:\\n            </div>\\n            <div class=\\\"ui-grid-col-6\\\">\\n              <input pInputText type=\\\"text\\\" placeholder=\\\"Required\\\" formControlName=\\\"name\\\"/>\\n            </div>\\n            <div class=\\\"ui-grid-col-4\\\">\\n              <p-message severity=\\\"error\\\" text=\\\"Name is required\\\" *ngIf=\\\"!model.controls['name'].valid&&model.controls['name'].dirty\\\"></p-message>\\n            </div>\\n          </div>\\n          <div class=\\\"ui-grid-row\\\">\\n            <div class=\\\"ui-grid-col-2\\\">\\n              Uuid:\\n            </div>\\n            <div class=\\\"ui-grid-col-6\\\">\\n              <input pInputText type=\\\"text\\\" placeholder=\\\"Required\\\" formControlName=\\\"uuid\\\" [readOnly]=\\\"disableUnmmutableControl\\\" [pTooltip]=\\\"disabledUuidTooltip\\\"/>\\n            </div>\\n            <div class=\\\"ui-grid-col-4\\\">\\n              <p-message severity=\\\"error\\\" text=\\\"Uuid is required\\\" *ngIf=\\\"isNewMode() &&  model.hasError('invalid', 'uuid')\\\" text=\\\"{{model.get('uuid').errors.invalid}}\\\"></p-message>\\n              <p-message severity=\\\"error\\\" text=\\\"Valid, not registered uuid is required\\\" *ngIf=\\\"!model.controls['uuid'].valid&&model.controls['uuid'].dirty\\\"></p-message>\\n            </div>\\n          </div>\\n          <div class=\\\"ui-grid-row\\\">\\n            <div class=\\\"ui-grid-col-2\\\">\\n              Type:\\n            </div>\\n            <div class=\\\"ui-grid-col-6\\\">\\n              <p-dropdown [options]=\\\"sensorTypes\\\" optionLabel=\\\"type\\\" [disabled]=\\\"disableUnmmutableControl\\\" formControlName=\\\"sensorType\\\" [pTooltip]=\\\"disabledSensorTypeTooltip\\\" placeholder=\\\"Select type to add...\\\" (ngModelChange)=\\\"onSensorTypeChanged()\\\"></p-dropdown>\\n            </div>\\n            <div class=\\\"ui-grid-col-4\\\">\\n              <p-message severity=\\\"error\\\" text=\\\"Type is required\\\" *ngIf=\\\"!model.controls['sensorType'].valid&&model.controls['sensorType'].dirty\\\"></p-message>\\n            </div>\\n          </div>\\n          <div class=\\\"ui-grid-row\\\">\\n            <div class=\\\"ui-grid-col-2\\\">\\n              Description:\\n            </div>\\n            <div class=\\\"ui-grid-col-6\\\">\\n              <textarea pInputTextarea type=\\\"text\\\" [autoResize]=\\\"false\\\" [rows]=\\\"3\\\" formControlName=\\\"description\\\"></textarea>\\n            </div>\\n            <div class=\\\"ui-grid-col-4\\\"></div>\\n          </div>\\n        </div>\\n      </p-panel>\\n      <br/>\\n      <p-panel header=\\\"Sensor's attributes\\\">\\n        <p-table [value]=\\\"attributesModel.controls\\\" [rowHover]=\\\"true\\\">\\n          <ng-template pTemplate=\\\"header\\\">\\n            <tr>\\n              <th>Symbol</th>\\n              <th>Value</th>\\n              <th style=\\\"width: 15%; text-align: center\\\">Actions</th>\\n            </tr>\\n          </ng-template>\\n          <ng-template pTemplate=\\\"body\\\" let-attribute>\\n            <tr [hidden]=\\\"hideAttributesPanel()\\\">\\n              <td>{{attribute.get('symbol').value}}</td>\\n              <td>{{attribute.get('value').value}}</td>\\n              <td style=\\\"text-align: right\\\">\\n                <button pButton class=\\\"ui-button-warning\\\" type=\\\"button\\\" icon=\\\"pi pi-pencil\\\" (click)=\\\"openUpdateAttributeDialog(attribute.value)\\\" pTooltip=\\\"change value\\\"></button> &nbsp;\\n                <button pButton class=\\\"ui-button-danger\\\" type=\\\"button\\\" icon=\\\"pi pi-trash\\\" (click)=\\\"removeAttributeFromList(attribute.get('symbol').value)\\\" pTooltip=\\\"remove from attribute's list\\\"></button>\\n              </td>\\n            </tr>\\n          </ng-template>\\n        </p-table>\\n        <p-footer class=\\\"text-right\\\">\\n          <button pButton class=\\\"ui-button-success\\\" type=\\\"button\\\" icon=\\\"pi pi-plus\\\" (click)=\\\"onAddNewAttribute()\\\" pTooltip=\\\"add new attribute\\\"></button>\\n        </p-footer>\\n      </p-panel>\\n    </div>\\n    <p-footer>\\n      <button pButton class=\\\"ui-button-info\\\" type=\\\"button\\\" (click)=\\\"backToSensors()\\\" label=\\\"Back\\\"></button>&nbsp;\\n      <button pButton class=\\\"ui-button-warning\\\" type=\\\"button\\\" [disabled]=\\\"!model.valid\\\" label=\\\"{{saveBtnLabel}}\\\" (click)=\\\"onSubmit()\\\"></button>&nbsp;\\n      <button pButton class=\\\"ui-button-warning\\\" type=\\\"button\\\" [hidden]=\\\"isNewMode()\\\" (click)=\\\"displayDeleteDialog = true\\\" label=\\\"Delete\\\"></button>&nbsp;\\n    </p-footer>\\n  </p-panel>\\n</form>\\n\\n<br/>\\n\"","export default \"<p-panel header=\\\"Sensors\\\">\\n  <p-table [columns]=\\\"cols\\\" [value]=\\\"sensors\\\" [rowHover]=\\\"true\\\" dataKey=\\\"type\\\">\\n    <ng-template pTemplate=\\\"header\\\" let-columns>\\n      <tr>\\n        <th *ngFor=\\\"let col of columns\\\">\\n          {{col.header}}\\n        </th>\\n      </tr>\\n    </ng-template>\\n    <ng-template pTemplate=\\\"body\\\" let-rowData let-rowIndex=\\\"rowIndex\\\" let-expanded=\\\"expanded\\\" let-columns=\\\"columns\\\">\\n      <tr class=\\\"custom-widget-header\\\" *ngIf=\\\"rowGroupMetadata[rowData.type].index === rowIndex\\\">\\n        <td colspan=\\\"3\\\">\\n          <a href=\\\"#\\\" [pRowToggler]=\\\"rowData\\\" [style.display]=\\\"'block'\\\">\\n            <i [ngClass]=\\\"expanded ? 'pi pi-fw pi-chevron-circle-down' : 'pi pi-fw pi-chevron-circle-right'\\\"></i>\\n            <span>{{rowData.type}}</span>\\n          </a>\\n        </td>\\n      </tr>\\n    </ng-template>\\n    <ng-template pTemplate=\\\"rowexpansion\\\"  let-rowData let-rowIndex=\\\"rowIndex\\\" let-columns=\\\"columns\\\">\\n      <tr [pSelectableRow]=\\\"rowData\\\">\\n        <td *ngFor=\\\"let col of columns\\\" (click)=\\\"selectedRow(rowData)\\\">\\n          {{rowData[col.field]}}\\n        </td>\\n      </tr>\\n    </ng-template>\\n  </p-table>\\n\\n  <p-footer>\\n    <button pButton class=\\\"ui-button-info\\\" type=\\\"button\\\" (click)=\\\"onCreateNew()\\\" label=\\\"New\\\"></button>\\n  </p-footer>\\n</p-panel>\\n\"","export default \"<p-toast [style]=\\\"{marginTop: '80px', width: '350px'}\\\"></p-toast>\\n\\n<p-dialog header=\\\"Delete SensorType?\\\" [(visible)]=\\\"displayDeleteDialog\\\" [modal]=\\\"true\\\" [responsive]=\\\"true\\\" [style]=\\\"{width: '350px', minWidth: '200px'}\\\" [minY]=\\\"70\\\"\\n          [maximizable]=\\\"true\\\" [baseZIndex]=\\\"10000\\\">\\n  <p>Are you sure, you want to delete this SensorType?</p>\\n  <p-footer>\\n    <button pButton class=\\\"ui-button-danger\\\" type=\\\"button\\\" (click)=\\\"onDelete()\\\" label=\\\"Yes\\\"></button>\\n    <button pButton class=\\\"ui-button-info\\\" type=\\\"button\\\" (click)=\\\"displayDeleteDialog=false\\\" label=\\\"No\\\"></button>\\n  </p-footer>\\n</p-dialog>\\n\\n<p-dialog header=\\\"Cannot delete\\\" [(visible)]=\\\"displayCannotDeleteDialog\\\" [modal]=\\\"true\\\" [responsive]=\\\"true\\\" [style]=\\\"{width: '350px', minWidth: '200px'}\\\" [minY]=\\\"70\\\"\\n          [maximizable]=\\\"true\\\" [baseZIndex]=\\\"10000\\\">\\n  <p>Cannot delete sensor type, because it is currently used by {{amountOfUsingSensors}} </p>\\n  <p-footer>\\n    <button pButton class=\\\"ui-button-info\\\" type=\\\"button\\\" (click)=\\\"displayCannotDeleteDialog=false\\\" label=\\\"OK\\\"></button>\\n  </p-footer>\\n</p-dialog>\\n\\n<form [formGroup]=\\\"model\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n  <p-panel header=\\\"{{headerTitle}}\\\">\\n        <div class=\\\"ui-grid ui-grid-responsive ui-grid-pad ui-fluid\\\" style=\\\"margin: 10px 0px\\\">\\n          <div class=\\\"ui-grid-row\\\">\\n            <div class=\\\"ui-grid-col-2\\\">\\n              Name:\\n            </div>\\n            <div class=\\\"ui-grid-col-6\\\">\\n              <input pInputText type=\\\"text\\\" placeholder=\\\"Required\\\" formControlName=\\\"name\\\"/>\\n            </div>\\n            <div class=\\\"ui-grid-col-4\\\">\\n              <p-message severity=\\\"error\\\" text=\\\"Name is required\\\" *ngIf=\\\"!model.controls['name'].valid&&model.controls['name'].dirty\\\"></p-message>\\n            </div>\\n          </div>\\n          <div class=\\\"ui-grid-row\\\">\\n            <div class=\\\"ui-grid-col-2\\\">\\n              Type:\\n            </div>\\n            <div class=\\\"ui-grid-col-6\\\">\\n              <input pInputText type=\\\"text\\\" [readOnly]=\\\"readOnlyType\\\" placeholder=\\\"Required\\\" formControlName=\\\"type\\\" [pTooltip]=\\\"readOnlyToolTip\\\"/>\\n            </div>\\n            <div class=\\\"ui-grid-col-4\\\">\\n              <p-message severity=\\\"error\\\" text=\\\"Type is required\\\" *ngIf=\\\"!model.controls['type'].valid&&model.controls['type'].dirty\\\"></p-message>\\n            </div>\\n          </div>\\n          <div class=\\\"ui-grid-row\\\">\\n            <div class=\\\"ui-grid-col-2\\\">\\n              Topic:\\n            </div>\\n            <div class=\\\"ui-grid-col-6\\\">\\n              <input pInputText type=\\\"text\\\" placeholder=\\\"Required\\\" formControlName=\\\"topic\\\"/>\\n            </div>\\n            <div class=\\\"ui-grid-col-4\\\">\\n              <p-message severity=\\\"error\\\" text=\\\"Topic is required\\\" *ngIf=\\\"!model.controls['topic'].valid&&model.controls['topic'].dirty\\\"></p-message>\\n            </div>\\n          </div>\\n          <div class=\\\"ui-grid-row\\\">\\n            <div class=\\\"ui-grid-col-2\\\">\\n              Description:\\n            </div>\\n            <div class=\\\"ui-grid-col-6\\\">\\n              <textarea pInputTextarea type=\\\"text\\\" [autoResize]=\\\"false\\\" [rows]=\\\"3\\\" formControlName=\\\"description\\\"></textarea>\\n            </div>\\n            <div class=\\\"ui-grid-col-4\\\"></div>\\n          </div>\\n\\n        </div>\\n    <p-footer>\\n      <button pButton class=\\\"ui-button-info\\\" type=\\\"button\\\" (click)=\\\"navigateToTypeList()\\\" label=\\\"Back\\\"></button>&nbsp;\\n      <button pButton class=\\\"ui-button-warning\\\" type=\\\"submit\\\" [disabled]=\\\"!model.valid\\\" label=\\\"{{submitButtonLabel}}\\\"></button>&nbsp;\\n      <button pButton class=\\\"ui-button-warning\\\" type=\\\"button\\\" (click)=\\\"showDialog()\\\" [hidden]=\\\"hideDeleteButton()\\\" label=\\\"Delete\\\"></button>\\n    </p-footer>\\n  </p-panel>\\n</form>\\n\"","export default \"<p-toast [style]=\\\"{marginTop: '80px', width: '350px'}\\\"></p-toast>\\n\\n<p-panel header=\\\"Sensor types definitions\\\">\\n  <p-table [columns]=\\\"cols\\\" [value]=\\\"sensorTypes$ | async\\\" [rowHover]=\\\"true\\\">\\n    <ng-template pTemplate=\\\"header\\\" let-columns>\\n      <tr>\\n        <th *ngFor=\\\"let col of columns\\\">\\n          {{col.header}}\\n        </th>\\n      </tr>\\n    </ng-template>\\n\\n    <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\">\\n      <tr [pSelectableRow]=\\\"rowData\\\">\\n        <td *ngFor=\\\"let col of columns\\\" (click)=\\\"onRowSelected(rowData)\\\">\\n          {{rowData[col.field]}}\\n        </td>\\n      </tr>\\n    </ng-template>\\n\\n  </p-table>\\n\\n  <p-footer>\\n    <button pButton class=\\\"ui-button-info\\\" type=\\\"button\\\" (click)=\\\"onCreateNew()\\\" label=\\\"New\\\"></button>\\n  </p-footer>\\n</p-panel>\\n\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Fib3V0L2Fib3V0LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  host: string;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {AboutComponent} from \"./about/about.component\";\nimport {SensortypesListComponent} from \"./sensortypes-list/sensortypes-list.component\";\nimport {SensortypesDetailsComponent} from \"./sensortypes-details/sensortypes-details.component\";\nimport {AttributesDictionaryListComponent} from \"./attributes-dictionary-list/attributes-dictionary-list.component\";\nimport {AttributesDictionaryDetailsComponent} from \"./attributes-dictionary-details/attributes-dictionary-details.component\";\nimport {SensorsListComponent} from \"./sensors-list/sensors-list.component\";\nimport {SensorDetailComponent} from \"./sensor-detail/sensor-detail.component\";\n\nconst routes: Routes = [\n  { path:'', component: AboutComponent},\n  { path: 'types', component: SensortypesListComponent},\n  { path: 'types/:id', component: SensortypesDetailsComponent},\n  { path: 'attributes', component: AttributesDictionaryListComponent},\n  { path: 'attributes/:symbol', component: AttributesDictionaryDetailsComponent},\n  { path: 'sensors', component: SensorsListComponent},\n  { path: 'sensors/:id', component: SensorDetailComponent},\n  { path:'about', component: AboutComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ui';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { PanelMenuComponent } from './panel-menu/panel-menu.component';\nimport { FooterComponent } from './footer/footer.component';\nimport {\n  ButtonModule,\n  DialogModule, InputTextareaModule, InputTextModule,\n  MenuModule,\n  DropdownModule,\n  MessageModule, MessageService,\n  PanelMenuModule,\n  PanelModule,\n  TooltipModule, InputSwitchModule, SpinnerModule\n} from \"primeng/primeng\";\nimport {BrowserAnimationsModule} from \"@angular/platform-browser/animations\";\nimport { AboutComponent } from './about/about.component';\nimport { SensortypesListComponent } from './sensortypes-list/sensortypes-list.component';\nimport {TableModule} from \"primeng/table\";\nimport {StoreModule} from \"@ngrx/store\";\nimport {EffectsModule} from \"@ngrx/effects\";\nimport {reducers} from \"./store/reducers\";\nimport {effects} from \"./store/effects\";\nimport {HTTP_INTERCEPTORS, HttpClientModule} from \"@angular/common/http\";\nimport { SensortypesDetailsComponent } from './sensortypes-details/sensortypes-details.component';\nimport {ToastModule} from \"primeng/toast\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {SensorTypesService} from \"./service/sensor-types.service\";\nimport {HttpErrorInterceptorServiceService} from \"./interceptors/http-error-interceptor-service.service\";\nimport { AttributesDictionaryListComponent } from './attributes-dictionary-list/attributes-dictionary-list.component';\nimport { AttributesDictionaryDetailsComponent } from './attributes-dictionary-details/attributes-dictionary-details.component';\nimport { SensorsListComponent } from './sensors-list/sensors-list.component';\nimport { SensorDetailComponent } from './sensor-detail/sensor-detail.component';\nimport { SensorDetailAttributeDialogComponent } from './sensor-detail-attribute-dialog/sensor-detail-attribute-dialog.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    PanelMenuComponent,\n    FooterComponent,\n    AboutComponent,\n    SensortypesListComponent,\n    SensortypesDetailsComponent,\n    AttributesDictionaryListComponent,\n    AttributesDictionaryDetailsComponent,\n    SensorsListComponent,\n    SensorDetailComponent,\n    SensorDetailAttributeDialogComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    PanelMenuModule,\n    MenuModule,\n    BrowserAnimationsModule,\n    PanelModule,\n    TableModule,\n    ButtonModule,\n    FormsModule,\n    StoreModule.forRoot(reducers),\n    EffectsModule.forRoot(effects),\n    DialogModule,\n    ToastModule,\n    MessageModule,\n    TooltipModule,\n    InputTextModule,\n    InputTextareaModule,\n    ReactiveFormsModule,\n    DropdownModule,\n    InputSwitchModule,\n    SpinnerModule\n  ],\n  providers: [MessageService,\n    SensorTypesService,\n    {provide: HTTP_INTERCEPTORS, useClass: HttpErrorInterceptorServiceService, multi: true},\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F0dHJpYnV0ZXMtZGljdGlvbmFyeS1kZXRhaWxzL2F0dHJpYnV0ZXMtZGljdGlvbmFyeS1kZXRhaWxzLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {Store} from \"@ngrx/store\";\nimport {getSingleAttribute, State} from \"../store/reducers\";\nimport {AttributeDictionary} from \"../model/AttributeDictionary\";\n\nimport * as fromActions from '../store/actions';\n\n@Component({\n  selector: 'app-attributes-dictionary-details',\n  templateUrl: './attributes-dictionary-details.component.html',\n  styleUrls: ['./attributes-dictionary-details.component.css']\n})\nexport class AttributesDictionaryDetailsComponent implements OnInit {\n\n  model: FormGroup;\n  headerTitle: string;\n  submitButtonLabel: string;\n\n  mode: string;\n\n\n  constructor(private router: Router,\n              private route: ActivatedRoute,\n              private fb: FormBuilder,\n              private store: Store<State>) {\n    this.model = this.fb.group({\n      name: new FormControl('', Validators.required),\n      symbol: new FormControl('', Validators.required),\n      description: new FormControl()\n    });\n  }\n\n  ngOnInit() {\n    this.mode = this.route.snapshot.paramMap.get('symbol');\n    this.initLabels();\n\n    this.store.select(getSingleAttribute, {symbol: this.mode}).subscribe(\n      data => {\n        this.model.patchValue(data);\n      }\n    );\n  }\n\n  private initLabels() {\n     this.headerTitle = 'Editing attribute ' + this.mode;\n     this.submitButtonLabel = 'Update';\n  }\n\n  onBack() {\n    this.router.navigate(['attributes/']);\n  }\n\n  onSubmit() {\n    const data = this.model.value as AttributeDictionary;\n    this.store.dispatch(new fromActions.UpdateAttribute({data}));\n  }\n\n  isEditAndCreationDisabled(): boolean {\n    return true;\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F0dHJpYnV0ZXMtZGljdGlvbmFyeS1saXN0L2F0dHJpYnV0ZXMtZGljdGlvbmFyeS1saXN0LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport {Observable} from \"rxjs\";\nimport {AttributeDictionary} from \"../model/AttributeDictionary\";\nimport {getAllAttributes, getAttributesLoaded, State} from \"../store/reducers\";\nimport {Store} from \"@ngrx/store\";\nimport {Router} from \"@angular/router\";\n\nimport * as DataActions from '../store/actions/index';\n\n@Component({\n  selector: 'app-attributes-dictionary-list',\n  templateUrl: './attributes-dictionary-list.component.html',\n  styleUrls: ['./attributes-dictionary-list.component.css']\n})\nexport class AttributesDictionaryListComponent implements OnInit {\n\n  cols: any[];\n  attributes$: Observable<AttributeDictionary[]> = this.store.select(getAllAttributes);\n\n  constructor(private store: Store<State>,\n              private router: Router) {\n    this.cols = [\n      { field: 'symbol', header: 'Symbol'},\n      { field: 'name', header: 'Name'},\n      { field: 'description', header: 'Description'}\n    ];\n  }\n\n  ngOnInit() {\n    this.store.select(getAttributesLoaded)\n      .subscribe(hasLoaded => {\n        if (!hasLoaded) {\n          this.store.dispatch(new DataActions.LoadAttributesBegin());\n        }\n      });\n  }\n\n  onRowClicked(rowData: AttributeDictionary) {\n    this.router.navigate(['attributes/' + rowData.symbol]);\n  }\n\n}\n","export enum ComponentsMode {\n  New,\n  Edit\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Zvb3Rlci9mb290ZXIuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {Message} from 'primeng/api';\nimport {HttpErrorResponse} from '@angular/common/http';\n\nexport class FailureAttributesMsgBuilder {\n\n  severity = 'error';\n\n  buildMessage(method, err: HttpErrorResponse): Message {\n    let message: Message = {} as Message;\n    switch (method) {\n      case 'PUT':\n        return message = {severity: this.severity, summary: 'Failed update', detail: err.message};\n      default:\n        return null;\n    }\n  }\n}\n","import {Message} from 'primeng/api';\nimport {HttpErrorResponse} from '@angular/common/http';\nimport {FailureSensortypesMessageBuilder} from './failure-sensortypes-message-builder';\nimport {FailureAttributesMsgBuilder} from \"./failure-attributes-message-builder\";\nimport {FailureSensorMessageBuilder} from \"./failure-sensor-message-builder\";\n\nexport class FailureMessageBuilder {\n\n  sensorTypesFailureMsgBuilder: FailureSensortypesMessageBuilder;\n  attributesMsgBuilder: FailureAttributesMsgBuilder;\n  sensorMsgBuilder: FailureSensorMessageBuilder;\n\n  constructor() {\n    this.sensorTypesFailureMsgBuilder = new FailureSensortypesMessageBuilder();\n    this.attributesMsgBuilder = new FailureAttributesMsgBuilder();\n    this.sensorMsgBuilder = new FailureSensorMessageBuilder();\n  }\n\n  buildMessage(url, method, err: HttpErrorResponse): Message {\n    if ( url.includes('sensortypes')) {\n      return this.sensorTypesFailureMsgBuilder.buildMessage(method, err);\n    }\n    if ( url.includes('attributes')) {\n      return this.attributesMsgBuilder.buildMessage(method, err);\n    }\n    if ( url.includes('register/sensors')) {\n      return this.sensorMsgBuilder.buildMessage(method, err);\n    }\n    return null;\n  }\n}\n","import {HttpErrorResponse} from '@angular/common/http';\nimport {Message} from 'primeng/api';\n\nexport class FailureSensorMessageBuilder {\n  severity = 'error';\n\n  buildMessage(method, err: HttpErrorResponse): Message {\n    let message: Message = {} as Message;\n    switch (method) {\n      case 'PUT':\n        return message = {severity: this.severity, summary: 'Failed update', detail: err.message};\n      case 'POST':\n        return message = {severity: this.severity, summary: 'Failed save', detail: err.message};\n      default:\n        return null;\n    }\n  }\n}\n","import {Message} from 'primeng/api';\nimport {HttpErrorResponse} from '@angular/common/http';\n\nexport class FailureSensortypesMessageBuilder {\n\n  severity = 'error';\n\n  buildMessage(method, err: HttpErrorResponse): Message {\n    let message: Message = {} as Message;\n    switch (method) {\n      case 'PUT':\n        return message = {severity: this.severity, summary: 'Failed update', detail: err.message};\n      case 'POST':\n        return message = {severity: this.severity, summary: 'Failed save', detail: err.message};\n      case 'DELETE':\n        return message = {severity: this.severity, summary: 'Failed to delete SensorType', detail: err.message};\n      default:\n        return null;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {Message, MessageService} from \"primeng/api\";\nimport {SuccessfulMessageBuilder} from \"./successful-message-builder\";\nimport {FailureMessageBuilder} from \"./failure-message-builder\";\nimport {HttpErrorResponse, HttpEvent, HttpHandler, HttpRequest, HttpResponse} from \"@angular/common/http\";\nimport {Observable, of} from \"rxjs\";\nimport {catchError, tap} from \"rxjs/operators\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpErrorInterceptorServiceService {\n\n  successMsgBuilder: SuccessfulMessageBuilder;\n  failureMsgBuilder: FailureMessageBuilder;\n\n  constructor(public messageService: MessageService) {\n    this.successMsgBuilder = new SuccessfulMessageBuilder();\n    this.failureMsgBuilder = new FailureMessageBuilder();\n  }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(req).pipe(\n      tap( evt => {\n        if ( evt instanceof HttpResponse ) {\n          const message = this.handleSuccessMessage(req.url, req.method);\n          if (message !== null) {\n            this.messageService.add(message);\n          }\n        }\n      }),\n      catchError( (err: any) => {\n        if ( err instanceof HttpErrorResponse) {\n          try {\n            const message = this.handleFailureMessage(req.url, req.method, err);\n            if ( message !== null ) {\n              this.messageService.add(message);\n            }\n          } catch (e) {\n            this.messageService.add({severity: 'error', summary: 'Failure', detail: e});\n          }\n        }\n        return of(err);\n      }));\n  }\n\n  handleSuccessMessage(url, method): Message {\n    return this.successMsgBuilder.buildMessage(url, method);\n  }\n\n  handleFailureMessage(url, method, err: HttpErrorResponse) {\n    return this.failureMsgBuilder.buildMessage(url, method, err);\n  }\n}\n","import {Message} from 'primeng/api';\n\nexport class SuccessfulAttributesMessageBuilder {\n\n  buildMessage(method) {\n    let message: Message = {} as Message;\n    switch (method) {\n      case 'PUT':\n        return message = {severity: 'success', summary: 'Successful update', detail: 'Attribute Dictionary updated!'};\n      default:\n        return null;\n    }\n  }\n}\n","import {SuccessfulSensortypesMessageBuilder} from './successful-sensortypes-message-builder';\nimport {SuccessfulAttributesMessageBuilder} from \"./successful-attributes-message-builder\";\nimport {SuccessfulSensorMessageBuilder} from \"./successful-sensors-message-builder\";\n\nexport class SuccessfulMessageBuilder {\n\n  sensorTypesMsgBuilder: SuccessfulSensortypesMessageBuilder;\n  attributesMsgBuilder: SuccessfulAttributesMessageBuilder;\n  sensorMsgBuilder: SuccessfulSensorMessageBuilder;\n\n  constructor() {\n    this.sensorTypesMsgBuilder = new SuccessfulSensortypesMessageBuilder();\n    this.attributesMsgBuilder = new SuccessfulAttributesMessageBuilder();\n    this.sensorMsgBuilder = new SuccessfulSensorMessageBuilder();\n  }\n\n  buildMessage(url, method) {\n    if (url.includes('sensortypes')) {\n      return this.sensorTypesMsgBuilder.buildMessage(method);\n    }\n    if (url.includes('attributes')) {\n      return this.attributesMsgBuilder.buildMessage(method);\n    }\n    if (url.includes('register/sensors')) {\n      return this.sensorMsgBuilder.buildMessage(method);\n    }\n    return null;\n  }\n\n}\n","import {Message} from 'primeng/api';\n\nexport class SuccessfulSensorMessageBuilder {\n\n  buildMessage(method) {\n    let message: Message = {} as Message;\n    switch (method) {\n      case 'PUT':\n        return message = {severity: 'success', summary: 'Successful update', detail: 'Sensort updated!'};\n      case 'POST':\n        return message = {severity: 'success', summary: 'Successful save', detail: 'New Sensor successfully saved!'};\n      default:\n        return null;\n    }\n  }\n}\n","import {Message} from 'primeng/api';\n\nexport class SuccessfulSensortypesMessageBuilder {\n\n  buildMessage(method) {\n    let message: Message = {} as Message;\n    switch (method) {\n      case 'PUT':\n        return message = {severity: 'success', summary: 'Successful update', detail: 'SensorType updated!'};\n      case 'POST':\n        return message = {severity: 'success', summary: 'Successful save', detail: 'New SensorType successfully saved!'};\n      case 'DELETE':\n        return message = {severity: 'success', summary: 'Successful deleted', detail: 'SensorType was deleted.'};\n      default:\n        return null;\n    }\n  }\n\n}\n","import {SensorAttribute} from './SensorAttribute';\nimport {SensorType} from './SensorType';\n\nexport interface Sensor {\n  id: number;\n  version: number;\n  name: string;\n  uuid: string;\n  type: string;\n  sensorType: SensorType;\n  description: string;\n  attributes: SensorAttribute[];\n}\n\nexport function compareByType(sensorA, sensorB) {\n  if (sensorA.type < sensorB.type) {\n    return -1;\n  }\n  if (sensorA.type > sensorB.type) {\n    return 1;\n  }\n  return 0;\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25hdmJhci9uYXZiYXIuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \".selected-menu-item {\\n  background: lightgrey !important;\\n}\\n\\n.unselected-menu-item {\\n  background: none;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFuZWwtbWVudS9wYW5lbC1tZW51LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQ0FBZ0M7QUFDbEM7O0FBRUE7RUFDRSxnQkFBZ0I7QUFDbEIiLCJmaWxlIjoic3JjL2FwcC9wYW5lbC1tZW51L3BhbmVsLW1lbnUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5zZWxlY3RlZC1tZW51LWl0ZW0ge1xuICBiYWNrZ3JvdW5kOiBsaWdodGdyZXkgIWltcG9ydGFudDtcbn1cblxuLnVuc2VsZWN0ZWQtbWVudS1pdGVtIHtcbiAgYmFja2dyb3VuZDogbm9uZTtcbn1cbiJdfQ== */\"","import {Component, OnInit, ViewEncapsulation} from '@angular/core';\nimport {MenuItem} from \"primeng/api\";\n\n@Component({\n  selector: 'app-panel-menu',\n  templateUrl: './panel-menu.component.html',\n  styleUrls: ['./panel-menu.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class PanelMenuComponent implements OnInit {\n\n  items: MenuItem[];\n\n  constructor() {}\n\n  ngOnInit() {\n    this.items = [\n      {\n        label: 'General', expanded: true,\n        items: [\n          {label: 'Dashboard', icon: 'pi pi-fw pi-chart-bar', routerLink: ['dashboard'],\n            command: (event) => this.styleConfig(event)},\n          {label: 'About...', icon: 'pi pi-fw pi-info-circle', routerLink: ['about'],\n            command: (event) => this.styleConfig(event)}\n        ]\n      },\n      {\n        label: 'Sensors', expanded: true,\n        items: [\n          {label: 'Sensors register', icon: 'pi pi-fw pi-list', routerLink: ['sensors'],\n            routerLinkActiveOptions: {exact: true},\n            command: (event) => this.styleConfig(event)},\n          {label: 'Sensor types', icon: 'pi pi-fw pi-sitemap', routerLink: ['types'], routerLinkActiveOptions: {exact: true},\n            command: (event) => this.styleConfig(event)},\n          {label: 'Attribute\\'s dictionary', icon: 'pi pi-fw pi-briefcase', routerLink: ['attributes'],\n            routerLinkActiveOptions: {exact: true},\n            command: (event) => this.styleConfig(event)}\n        ]\n      },\n      {\n        label: 'Administration', expanded: true,\n        items: [\n          {\n            label: 'Eventslogger',\n            icon: 'pi pi-pi pi-eye',\n            routerLink: ['eventslogger'],\n            routerLinkActiveOptions: {exact: true},\n            command: (event) => this.styleConfig(event)\n          }\n        ]\n      }];\n  }\n\n  styleConfig(event) {\n    this.items.forEach(subItems => {\n      this.disableSelection(subItems);\n    });\n    event.item.styleClass = 'selected-menu-item';\n  }\n\n  disableSelection(item) {\n    if (item.items === undefined || item.items === null || item.items.length === 0) {\n      return;\n    }\n    item.items.forEach( subItem => {\n      subItem.styleClass = 'unselected-menu-item';\n    });\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NlbnNvci1kZXRhaWwtYXR0cmlidXRlLWRpYWxvZy9zZW5zb3ItZGV0YWlsLWF0dHJpYnV0ZS1kaWFsb2cuY29tcG9uZW50LmNzcyJ9 */\"","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {AttributeDictionary} from '../model/AttributeDictionary';\nimport {Store} from '@ngrx/store';\nimport {\n  getAllAttributes,\n  getAttributesDialogMode,\n  getAttributesDialogOpened,\n  getSensorAttribute,\n  getSensorsAttributes,\n  State\n} from '../store/reducers';\n\nimport * as fromActions from '../store/actions/index';\nimport {SensorAttribute} from '../model/SensorAttribute';\nimport {ComponentsMode} from '../crosscutting/componentsMode';\nimport {InputType} from '../model/InputType';\n\n@Component({\n  selector: 'app-sensor-detail-attribute-dialog',\n  templateUrl: './sensor-detail-attribute-dialog.component.html',\n  styleUrls: ['./sensor-detail-attribute-dialog.component.css'],\n})\n\nexport class SensorDetailAttributeDialogComponent implements OnInit {\n\n  model: FormGroup;\n  attributesLeft: AttributeDictionary[];\n  sensorsAttributes: SensorAttribute[];\n  mode: ComponentsMode;\n  sensorAttribute: SensorAttribute;\n  dropdownDisabled = false;\n\n\n  constructor(private fb: FormBuilder,\n              private store: Store<State>) {\n    this.model = this.fb.group({\n      attribute: new FormControl(),\n      value: new FormControl('', Validators.required)\n    });\n  }\n\n  ngOnInit() {\n    this.store.select(getAttributesDialogOpened).subscribe(\n      isOpened => {\n        if (isOpened === true) {\n          this.initializeDialog();\n        }\n      }\n    );\n  }\n\n  private initializeDialog() {\n\n    this.store.select(getAttributesDialogMode).subscribe(\n      mode => {\n        this.mode = mode;\n        this.dropdownDisabled = this.mode === ComponentsMode.Edit;\n      }\n    );\n\n    this.store.select(getSensorAttribute).subscribe(\n      sensorAttribute => this.sensorAttribute = sensorAttribute\n    );\n\n    this.store.select(getSensorsAttributes).subscribe(\n      sensorAttributes => {\n        this.sensorsAttributes = sensorAttributes;\n      }\n    );\n\n    this.store.select(getAllAttributes).subscribe(\n      attributes => {\n        this.recalculateAttributesLeft(attributes);\n      }\n    );\n  }\n\n  onSubmitNewAttribute() {\n    const sensorToUpdate: SensorAttribute = {\n      value: this.model.get('value').value,\n      symbol: this.model.get('attribute').value.symbol,\n      sensor_id: this.mode === ComponentsMode.Edit ? this.sensorAttribute.sensor_id : null,\n      id: this.mode === ComponentsMode.Edit ? this.sensorAttribute.id : null,\n      version: this.mode === ComponentsMode.Edit ? this.sensorAttribute.version : null\n    };\n    this.store.dispatch(new fromActions.UpdateSensorAttribute({sensorAttribute: sensorToUpdate}));\n    this.model.reset();\n    this.store.dispatch(new fromActions.CloseDialog());\n  }\n\n  onCancelNewAttribute() {\n    this.model.reset();\n    this.store.dispatch(new fromActions.CloseDialog());\n  }\n\n  private recalculateAttributesLeft(allAttributes: AttributeDictionary[]) {\n    this.attributesLeft = allAttributes;\n    if (this.mode === ComponentsMode.New) {\n      this.sensorsAttributes.forEach(item => {\n        this.attributesLeft = this.attributesLeft.filter(obj => obj.symbol !== item.symbol);\n      });\n    }\n    if (this.mode === ComponentsMode.Edit) {\n      const attributesFiltered = this.attributesLeft.filter(obj => obj.symbol === this.sensorAttribute.symbol);\n      if (attributesFiltered.length === 1) {\n        this.model.get('attribute').patchValue(attributesFiltered[0]);\n        this.model.get('value').patchValue(this.sensorAttribute.value);\n      }\n    }\n  }\n\n  onModelChanged() {\n  }\n\n  getInputtype(): InputType {\n    const attribute = this.model.get('attribute').value as AttributeDictionary;\n    if (!attribute) {\n      return null;\n    }\n    return attribute.inputtype;\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NlbnNvci1kZXRhaWwvc2Vuc29yLWRldGFpbC5jb21wb25lbnQuY3NzIn0= */\"","import {Component, OnInit, ViewEncapsulation} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {FormArray, FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {Store} from '@ngrx/store';\nimport {\n  getAllSensorTypes,\n  getAttributesDialogOpened,\n  getAttributesLoaded,\n  getSensorAttributeAfterUpdate,\n  getSensorTypesLoaded,\n  getSingleSensor,\n  State\n} from '../store/reducers';\nimport {SensorType} from '../model/SensorType';\n\nimport * as DataActions from '../store/actions/index';\nimport {SensorAttribute} from '../model/SensorAttribute';\nimport {ComponentsMode} from '../crosscutting/componentsMode';\nimport {Sensor} from '../model/Sensor';\nimport {UuidUniquenessValidator} from '../validators/UuidUniquenessValidator';\n\n@Component({\n  selector: 'app-sensor-detail',\n  templateUrl: './sensor-detail.component.html',\n  styleUrls: ['./sensor-detail.component.css'],\n  providers: [UuidUniquenessValidator]\n})\nexport class SensorDetailComponent implements OnInit {\n  headerTitle: string;\n  mode: ComponentsMode;\n  model: FormGroup;\n\n  sensorTypes: SensorType[];\n  disableUnmmutableControl = false;\n  disabledUuidTooltip: string;\n  disabledSensorTypeTooltip: string;\n\n  // UI\n  saveBtnLabel: string;\n  attributeDialogVisible: boolean;\n  attributeDialogTitle: string;\n\n  // Delete Dialog\n  displayDeleteDialog = false;\n  sensorId: number;\n\n  constructor(private router: Router,\n              private route: ActivatedRoute,\n              private fb: FormBuilder,\n              private store: Store<State>,\n              private uuidUniquenessValidator: UuidUniquenessValidator) {\n\n    this.model = this.fb.group({\n      id: new FormControl(),\n      version: new FormControl(),\n      name: new FormControl('', Validators.required),\n      uuid: new FormControl('',\n        Validators.pattern('^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'),\n        uuidUniquenessValidator.checkUuidUniqueness.bind(uuidUniquenessValidator)), // sync validator must by as third parameter\n      type: new FormControl('', Validators.required),\n      sensorType: new FormControl('', Validators.required),\n      description: new FormControl(),\n      attributes: this.fb.array([])\n    });\n\n    const id = this.route.snapshot.paramMap.get('id');\n    if (id === 'new') {\n      this.mode = ComponentsMode.New;\n    } else {\n      this.mode = ComponentsMode.Edit;\n      this.sensorId = parseInt(id, 10);\n    }\n    this.store.dispatch(new DataActions.UpdateDetailsMode({mode: this.mode}));\n    this.disableUnmmutableControl = this.mode === ComponentsMode.Edit;\n\n    this.initializeSensorTypes();\n    this.initializeAttributes();\n    this.startHandlingAddingAndUpdateOfAttributes();\n    this.initHeaderTitle();\n  }\n\n  ngOnInit() {\n    this.initGeneralModel();\n  }\n\n  private initHeaderTitle() {\n    if (this.mode === ComponentsMode.New) {\n      this.headerTitle = 'Definition of new Sensor';\n      this.saveBtnLabel = 'Save';\n    }\n  }\n\n  private initGeneralModel() {\n    if (this.mode === ComponentsMode.Edit) {\n      this.store.select(getSingleSensor, {id: this.sensorId}).subscribe(\n        sensor => {\n          if (!sensor) {\n            return;\n          }\n          this.updateEditModel(sensor);\n        });\n    } else {\n      this.updateNewModel();\n    }\n  }\n\n  private updateNewModel() {\n    this.updateTitleAndSubmitButtonLabel();\n  }\n\n  private updateEditModel(sensor: Sensor) {\n    const sensorType = this.sensorTypes.find(obj => obj.type === sensor.type);\n    if (sensorType) {\n      sensor.sensorType = sensorType;\n      sensor.type = sensorType.type;\n    }\n    if (sensor.attributes == null){\n      sensor.attributes = [];\n    }\n    this.model.patchValue(sensor);\n    this.clearAndFillAttributtes(sensor);\n    this.updateTitleAndSubmitButtonLabel();\n  }\n\n  private clearAndFillAttributtes(sensor: Sensor) {\n    const attributesModel = this.model.get('attributes') as FormArray;\n    while (attributesModel.length) {\n      attributesModel.removeAt(0);\n    }\n    if (sensor.attributes !== undefined && sensor.attributes != null && sensor.attributes.length > 0) {\n      sensor.attributes.forEach( attribute => {\n        attributesModel.push(this.fb.group(attribute));\n      });\n    }\n  }\n\n  private updateTitleAndSubmitButtonLabel() {\n    let sensor: Sensor;\n    if (ComponentsMode.New) {\n      sensor = {} as Sensor;\n      sensor.sensorType = this.model.get('sensorType').value as SensorType;\n      sensor.type = sensor.sensorType.type;\n    } else {\n      sensor = this.model.value as Sensor;\n    }\n    this.headerTitle = this.mode === ComponentsMode.Edit ? 'Editing Sensor [' + sensor.name + ']' : 'New sensor';\n    this.saveBtnLabel = this.mode === ComponentsMode.Edit ? 'Update' : 'Save';\n    if (this.disableUnmmutableControl) {\n      this.disabledUuidTooltip = 'Changing uuid of already registered sensor not allowed!';\n      this.disabledSensorTypeTooltip = 'Changing sensor type of already registered sensor not allowed!';\n    }\n  }\n\n  onSensorTypeChanged() {\n    const sensorType = this.model.get('sensorType').value as SensorType;\n    if (sensorType) {\n      this.model.get('type').patchValue(sensorType.type);\n    }\n  }\n\n\n  hideAttributesPanel(): boolean {\n    const attributesModel = this.model.get('attributes') as FormArray;\n    if (attributesModel.length === 1) {\n      const firstElement = attributesModel.value[0];\n      if (firstElement.symbol === '') {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  isNewMode(): boolean {\n    return this.mode === ComponentsMode.New;\n  }\n\n  onAddNewAttribute() {\n    this.attributeDialogTitle = 'Adding new attribute';\n    const attributesModel = this.model.get('attributes') as FormArray;\n    const attributes = attributesModel.value as SensorAttribute[];\n    this.store.dispatch(new DataActions.OpenDialogToAdd({sensorAttributes: attributes}));\n    this.store.select(getAttributesDialogOpened).subscribe(\n      isOpened => this.attributeDialogVisible = isOpened\n    );\n  }\n\n  openUpdateAttributeDialog(sensorAttribute: SensorAttribute) {\n    this.attributeDialogTitle = 'Updating attribute';\n    const attributesModel = this.model.get('attributes') as FormArray;\n    const attributes = attributesModel.value as SensorAttribute[];\n    this.store.dispatch(new DataActions.OpenDialogToUpdate({sensorAttribute, sensorsAttributes: attributes}));\n    this.store.select(getAttributesDialogOpened).subscribe(\n      isOpened => this.attributeDialogVisible = isOpened\n    );\n  }\n\n  backToSensors() {\n    this.router.navigate(['sensors/']);\n  }\n\n  get attributesModel() {\n    return this.model.get('attributes') as FormArray;\n  }\n\n  private addSensorAttributeToList(sensorAttribute: SensorAttribute) {\n    const attributesModel = this.model.get('attributes') as FormArray;\n    attributesModel.push(this.fb.group(sensorAttribute));\n  }\n\n  private updateSensorAttribute(sensorAttribute: SensorAttribute) {\n    const attributesModel = this.model.get('attributes') as FormArray;\n    const attributes = attributesModel.value as SensorAttribute[];\n\n    attributes.forEach( item => {\n      if (item.symbol === sensorAttribute.symbol) {\n        item.value = sensorAttribute.value;\n      }\n    });\n    attributesModel.patchValue(attributes);\n  }\n\n  onSubmit() {\n    const sensor = this.model.value as Sensor;\n    if (this.mode === ComponentsMode.New) {\n      sensor.sensorType = this.model.get('sensorType').value as SensorType;\n      sensor.type = sensor.sensorType.type;\n      this.store.dispatch(new DataActions.SaveSensor({sensor}));\n    } else {\n      sensor.type = sensor.sensorType.type;\n      this.store.dispatch(new DataActions.UpdateSensor({sensor}));\n    }\n  }\n\n  removeAttributeFromList(symbol: string) {\n    const attributesModel = this.model.get('attributes') as FormArray;\n    let attributes = attributesModel.value;\n    attributes = attributes.filter(obj => obj.symbol !== symbol);\n    while (attributesModel.length) {\n      attributesModel.removeAt(0);\n    }\n    attributes.forEach( attribute => {\n      attributesModel.push(this.fb.group(attribute));\n    });\n  }\n\n  onDelete() {\n    this.store.dispatch(new DataActions.DeleteSensor({uuid: this.model.get('uuid').value}));\n    this.router.navigate(['/sensors']);\n    this.displayDeleteDialog = false;\n  }\n\n  private startHandlingAddingAndUpdateOfAttributes() {\n    this.store.select(getSensorAttributeAfterUpdate).subscribe(\n      data => {\n        if (data.sensorAttributeToUpdate && data.attributeDialogMode === ComponentsMode.New) {\n          this.addSensorAttributeToList(data.sensorAttributeToUpdate);\n        }\n        if (data.sensorAttributeToUpdate && data.attributeDialogMode === ComponentsMode.Edit) {\n          this.updateSensorAttribute(data.sensorAttributeToUpdate);\n        }\n      }\n    );\n  }\n\n  private initializeAttributes() {\n    this.store.select(getAttributesLoaded).subscribe(\n      attributesLoaded => {\n        if (!attributesLoaded) {\n          this.store.dispatch(new DataActions.LoadAttributesBegin());\n        }\n      }\n    );\n  }\n\n  initializeSensorTypes() {\n    this.store.select(getSensorTypesLoaded).subscribe(\n      sensortypesLoaded => {\n        if (!sensortypesLoaded) {\n          this.store.dispatch(new DataActions.LoadSensorTypesBegin());\n        }\n      }\n    );\n    this.store.select(getAllSensorTypes).subscribe(sensortypes => {\n      this.sensorTypes = sensortypes;\n    });\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NlbnNvcnMtbGlzdC9zZW5zb3JzLWxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport {Observable} from \"rxjs\";\nimport {compareByType, Sensor} from \"../model/Sensor\";\nimport {SensorsService} from \"../service/sensors.service\";\nimport {Router} from \"@angular/router\";\nimport {Store} from \"@ngrx/store\";\nimport {getAllSensors, getSensorsLoaded, getSensorTypesLoaded, State} from \"../store/reducers\";\n\nimport * as DataActions from '../store/actions/index';\n\n@Component({\n  selector: 'app-sensors-list',\n  templateUrl: './sensors-list.component.html',\n  styleUrls: ['./sensors-list.component.css']\n})\nexport class SensorsListComponent implements OnInit {\n\n  cols: any[];\n  sensors$: Observable<Sensor[]> = this.store.select(getAllSensors);\n  sensors: Sensor[];\n  rowGroupMetadata: any;\n\n  constructor(private service: SensorsService,\n              private router: Router,\n              private store: Store<State>) {\n\n    this.cols = [\n      { field: 'name', header: 'Name'},\n      { field: 'uuid', header: 'Uuid'},\n      { field: 'description', header: 'Description'}\n    ];\n\n    this.store.select(getSensorTypesLoaded).subscribe(\n      typesLoaded => {\n        if (!typesLoaded) {\n          this.store.dispatch(new DataActions.LoadSensorTypesBegin());\n        }\n      }\n    );\n  }\n\n  ngOnInit() {\n    this.store.select(getSensorsLoaded).subscribe(\n      sensorsLoaded => {\n        if (!sensorsLoaded) {\n          this.store.dispatch(new DataActions.LoadAllSensors());\n        }\n      }\n    );\n\n    this.sensors$.subscribe(\n      data => {\n        if (data) {\n          this.sensors = data.sort(compareByType);\n          this.updateRowGroupMetaData();\n        }}\n    );\n  }\n\n  selectedRow(sensor: Sensor) {\n    this.router.navigate(['sensors/' + sensor.id]);\n  }\n\n  onCreateNew() {\n    this.router.navigate(['sensors/new']);\n  }\n\n  updateRowGroupMetaData() {\n    this.rowGroupMetadata = {};\n    if (this.sensors) {\n      for (let i = 0; i < this.sensors.length; i++) {\n        const rowData = this.sensors[i];\n        const type = rowData.type;\n        if (i === 0) {\n          this.rowGroupMetadata[type] = { index: 0, size: 1};\n        } else {\n          const previousRowData = this.sensors[i - 1];\n          const previousRowGroup = previousRowData.type;\n          if (type === previousRowGroup) {\n            this.rowGroupMetadata[type].size++;\n          } else {\n            this.rowGroupMetadata[type] = { index: i, size: 1};\n          }\n        }\n      }\n    }\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NlbnNvcnR5cGVzLWRldGFpbHMvc2Vuc29ydHlwZXMtZGV0YWlscy5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {Store} from \"@ngrx/store\";\nimport {getAmountOfSensorsWhichUseSensorType, getSensorsLoaded, getSingleSensorType, State} from \"../store/reducers\";\n\nimport * as DataActions from '../store/actions/index';\nimport {SensorType} from \"../model/SensorType\";\n\n@Component({\n  selector: 'app-sensortypes-details',\n  templateUrl: './sensortypes-details.component.html',\n  styleUrls: ['./sensortypes-details.component.css']\n})\nexport class SensortypesDetailsComponent implements OnInit {\n\n  headerTitle: string;\n  model: FormGroup;\n  submitButtonLabel: string;\n  mode: string;\n  displayDeleteDialog = false;\n  readOnlyType: boolean;\n\n  displayCannotDeleteDialog = false;\n  amountOfUsingSensors: string;\n  readOnlyToolTip: string;\n\n  constructor(private route: ActivatedRoute,\n              private router: Router,\n              private fb: FormBuilder,\n              private store: Store<State>) {\n    const id = this.route.snapshot.paramMap.get('id');\n    this.mode = id;\n\n    this.model = this.fb.group(\n      {\n        id: new FormControl(''),\n        version: new FormControl(''),\n        name: new FormControl('', Validators.required),\n        type: new FormControl('', Validators.required),\n        topic: new FormControl('', Validators.required),\n        description: new FormControl()\n      }\n    );\n  }\n\n  ngOnInit() {\n    if (this.mode !== 'new') {\n      this.store.select(getSingleSensorType, {id: parseInt(this.mode, 10)}).subscribe(\n        data => {\n          if (!data || data.id === undefined || data.id === null) {\n            return\n          }\n          this.model.patchValue(data);\n          this.headerTitle = 'Editing ' + data.name + '';\n          this.submitButtonLabel = 'Update';\n\n          // NOTE: check if sensors are loaded if not, load them to store\n          // prevents deleting of type, in case sensors where not loaded before clicking sensors types menu item.\n          this.store.select(getSensorsLoaded).subscribe(\n            sensorsLoaded => {\n              if (!sensorsLoaded) {\n                this.store.dispatch(new DataActions.LoadAllSensors());\n              }\n            }\n          );\n\n          // NOTE: check if sensortype is used by any of registered sensors.\n          this.store.select(getAmountOfSensorsWhichUseSensorType, {sensortype: data.type}).subscribe(\n            amount => {\n              this.readOnlyType = true;\n              if (amount === undefined || amount === null || amount === 0 ) {\n                this.readOnlyType = false;\n                this.readOnlyToolTip = null;\n              } else if (amount > 1) {\n                this.amountOfUsingSensors = `${amount} sensors`;\n              } else if (amount === 1) {\n                this.amountOfUsingSensors = `${amount} sensor`;\n              }\n              if (this.readOnlyType) {\n                this.readOnlyToolTip =\n                  `Cannot edit type of this sensor type, because this sensor type is already used by ${this.amountOfUsingSensors}`;\n              }\n            }\n          );\n        }\n      );\n    } else {\n      this.submitButtonLabel = 'Save';\n      this.headerTitle = 'Adding new SensorType';\n    }\n  }\n\n  navigateToTypeList() {\n    this.router.navigate(['/types']);\n  }\n\n  onSubmit() {\n    const sensorType = this.model.value as SensorType;\n    if (this.mode !== 'new') {\n      this.store.dispatch(new DataActions.UpdateSensorType({sensorType}));\n    } else {\n      sensorType.id = null;\n      sensorType.version = null;\n      this.store.dispatch(new DataActions.SaveSensorType({sensorType}));\n      this.router.navigate(['/types']);\n    }\n  }\n\n  onDelete() {\n    this.store.dispatch(new DataActions.DeleteSensorType({id: parseInt(this.mode, 10)}));\n    this.displayDeleteDialog = false;\n    this.router.navigate(['/types']);\n  }\n\n  showDialog() {\n    if (this.amountOfUsingSensors === undefined || this.amountOfUsingSensors === null) {\n      this.displayDeleteDialog = true;\n    } else {\n      this.displayCannotDeleteDialog = true;\n    }\n  }\n\n  hideDeleteButton() {\n    return this.mode === 'new';\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NlbnNvcnR5cGVzLWxpc3Qvc2Vuc29ydHlwZXMtbGlzdC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport {Observable} from \"rxjs\";\nimport {SensorType} from \"../model/SensorType\";\nimport {getAllSensorTypes, getSensorTypesLoaded, State} from \"../store/reducers\";\nimport {Store} from \"@ngrx/store\";\nimport {Router} from \"@angular/router\";\n\nimport * as DataActions from '../store/actions/index';\n\n@Component({\n  selector: 'app-sensortypes-list',\n  templateUrl: './sensortypes-list.component.html',\n  styleUrls: ['./sensortypes-list.component.css']\n})\nexport class SensortypesListComponent implements OnInit {\n\n  cols: any[];\n  sensorTypes$: Observable<SensorType[]> = this.store.select(getAllSensorTypes);\n\n  constructor(private router: Router,\n              private store: Store<State>) {\n\n    this.cols = [\n      { field: 'type', header: 'Type' },\n      { field: 'name', header: 'Name' },\n      { field: 'topic', header: 'Topic' }\n    ];\n  }\n\n  ngOnInit() {\n    this.store.select(getSensorTypesLoaded)\n      .subscribe( hasLoaded => {\n        if (!hasLoaded) {\n          this.store.dispatch(new DataActions.LoadSensorTypesBegin());\n        }\n      });\n  }\n\n  onCreateNew() {\n    this.router.navigate(['types/new']);\n  }\n\n  onRowSelected(rowData: SensorType) {\n    this.router.navigate(['types/' + rowData.id]);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\nimport {AttributeDictionary} from \"../model/AttributeDictionary\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegisterAttributesService {\n\n  static readonly API_SUFFIX: string = '/api/register/attributes/';\n\n  constructor(private httpClient: HttpClient) { }\n\n  getAll(): Observable<AttributeDictionary[]> {\n    return this.httpClient.get<AttributeDictionary[]>(RegisterAttributesService.API_SUFFIX);\n  }\n\n  update(symbol: string, attribute: AttributeDictionary): Observable<AttributeDictionary> {\n    return this.httpClient.put<AttributeDictionary>(RegisterAttributesService.API_SUFFIX + symbol, attribute);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {SensorType} from \"../model/SensorType\";\nimport {EMPTY, Observable} from \"rxjs\";\nimport {catchError} from \"rxjs/operators\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SensorTypesService {\n\n  static readonly API_SUFFIX: string = '/api/sensortypes';\n\n  constructor(private httpClient: HttpClient) { }\n\n  getAll(): Observable<SensorType[]> {\n    return this.httpClient.get<SensorType[]>(SensorTypesService.API_SUFFIX).pipe(\n      catchError(err => {\n        return EMPTY;\n      }));\n  }\n\n  save(sensorType: SensorType): Observable<SensorType> {\n    return this.httpClient.post<SensorType>(SensorTypesService.API_SUFFIX + '/new', sensorType);\n  }\n\n  update(sensorType: SensorType): Observable<SensorType> {\n    return this.httpClient.put<SensorType>(SensorTypesService.API_SUFFIX + '/' + sensorType.id, sensorType);\n  }\n\n  delete(id: number): Observable<any> {\n    return this.httpClient.delete(SensorTypesService.API_SUFFIX + '/' + id);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {Sensor} from '../model/Sensor';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SensorsService {\n\n  private readonly API_SUFFIX: string  = '/api/register/sensors/';\n\n  constructor(private httpClient: HttpClient) { }\n\n  public getAll(): Observable<Sensor[]> {\n    return this.httpClient.get<Sensor[]>(this.API_SUFFIX);\n  }\n\n  public getById(id: string): Observable<Sensor> {\n    return this.httpClient.get<Sensor>(this.API_SUFFIX + id);\n  }\n\n  public delete(uuid: string): Observable<Sensor> {\n    return this.httpClient.delete<Sensor>(this.API_SUFFIX + uuid);\n  }\n\n  public update(sensor: Sensor): Observable<Sensor> {\n    return this.httpClient.put<Sensor>(this.API_SUFFIX + sensor.uuid, sensor);\n  }\n\n  public save(sensor: Sensor): Observable<Sensor> {\n    return this.httpClient.post<Sensor>(this.API_SUFFIX + sensor.uuid, sensor);\n  }\n\n}\n","import {Action} from '@ngrx/store';\nimport {AttributeDictionary} from '../../model/AttributeDictionary';\n\nexport enum AttributeDictionaryActions {\n  LoadAttributesBegin = '[AttributeDictionary] load begin',\n  LoadAttributesSuccessful = '[AttributeDictionary] loading successful',\n  LoadAttributesFailure = '[AttributeDictionary] loading failure',\n\n  UpdateAttribute = '[AttributeDictionary] update attribute',\n  UpdateAttributeSuccessful = '[AttributeDictionary] update attribute successful',\n  UpdateAttributeFailure = '[AttributeDictionary] update failed'\n}\n\nexport class LoadAttributesBegin implements Action {\n  readonly type = AttributeDictionaryActions.LoadAttributesBegin;\n}\n\nexport class LoadAttributesSuccessful implements Action {\n  readonly type = AttributeDictionaryActions.LoadAttributesSuccessful;\n  constructor(public payload: {data: AttributeDictionary[]}) {}\n}\n\nexport class LoadAttributesFailure implements Action {\n  readonly type = AttributeDictionaryActions.LoadAttributesFailure;\n  constructor(public payload: {error: any}) {}\n}\n\nexport class UpdateAttribute implements Action {\n  readonly type = AttributeDictionaryActions.UpdateAttribute;\n  constructor(public payload: {data: AttributeDictionary}) {}\n}\n\nexport class UpdateAttributeSuccessful implements Action {\n  readonly type = AttributeDictionaryActions.UpdateAttributeSuccessful;\n  constructor(public payload: {data: AttributeDictionary}) {}\n}\n\nexport class UpdateAttributeFailed implements Action {\n  readonly type = AttributeDictionaryActions.UpdateAttributeFailure;\n  constructor(public payload: {error: any}) {}\n}\n\nexport type AttributeUnions = LoadAttributesBegin\n  | LoadAttributesSuccessful\n  | LoadAttributesFailure\n  | UpdateAttribute\n  | UpdateAttributeSuccessful\n  | UpdateAttributeFailed;\n","import {Action} from '@ngrx/store';\nimport {SensorAttribute} from '../../model/SensorAttribute';\n\nexport enum AttributesDialogActions {\n  OpenDialogToAdd = '[AttributesDialogActions] open dialog to add',\n  OpenDialogToUpdate = '[AttributesDialogActions] open dialog to update',\n  UpdateSensorAttribute = '[AttributesDialogActions] update sensor attribute',\n  CloseDialog = '[AttributesDialogActions] close dialog'\n}\n\nexport class OpenDialogToAdd implements Action {\n  readonly type = AttributesDialogActions.OpenDialogToAdd;\n  constructor(public payload: {sensorAttributes: SensorAttribute[]}) {}\n}\n\nexport class OpenDialogToUpdate implements Action {\n  readonly type = AttributesDialogActions.OpenDialogToUpdate;\n  constructor(public payload: {sensorAttribute: SensorAttribute, sensorsAttributes: SensorAttribute[]}) {}\n}\n\nexport class UpdateSensorAttribute implements Action {\n  readonly type = AttributesDialogActions.UpdateSensorAttribute;\n  constructor(public payload: {sensorAttribute: SensorAttribute}) {}\n}\n\nexport class CloseDialog implements Action {\n  readonly type = AttributesDialogActions.CloseDialog;\n}\n\nexport type AttributesDialogActionsUnion =\n  OpenDialogToAdd | OpenDialogToUpdate | UpdateSensorAttribute | CloseDialog;\n","export * from './sensortypes.actions';\nexport * from './attributes.actions';\nexport * from './sensors.actions';\nexport * from './attributesdialog.actions';\n","import {Action} from '@ngrx/store';\nimport {Sensor} from '../../model/Sensor';\nimport {ComponentsMode} from \"../../crosscutting/componentsMode\";\n\nexport enum SensorsActions {\n  LoadAllSensors = '[Sensors] load all',\n  LoadAllSensorsSuccess = '[Sensors] load all success',\n  LoadAllSensorsFailure = '[Sensors] load failure',\n\n  LoadSingleSensor = '[Sensors] load single sensor',\n  LoadSingleSensorSuccess = '[Sensor] load single sensor success',\n  LoadSingleSensorFailure = '[Sensor] load single sensor failure',\n\n  DeleteSensor = '[Sensors] delete sensor',\n  DeleteSensorSuccess = '[Sensor] delete sensor success',\n  DeleteSensorFailure = '[Sensor] delete sensor failure',\n\n  UpdateSensor = '[Sensor] update sensor begin',\n  UpdateSensorSuccess = '[Sensor] update sensor load',\n  UpdateSensorFailure = '[Sensor] update sensor failure',\n\n  SaveSensor = '[Sensor] save sensor begin',\n  SaveSensorSuccess = '[Sensor] save sensor success',\n  SaveSensorFailure = '[Sensor] save sensor failure',\n\n  UpdateDetailsMode = '[Sensor] update sensor mode'\n}\n\nexport class LoadAllSensors implements Action {\n  readonly type = SensorsActions.LoadAllSensors;\n}\n\nexport class LoadAllSensorsSuccess implements Action {\n  readonly type = SensorsActions.LoadAllSensorsSuccess;\n  constructor(public payload: {sensors: Sensor[]}) {}\n}\n\nexport class LoadAllSensorsFailure implements Action {\n  readonly type = SensorsActions.LoadAllSensorsFailure;\n  constructor(public payload: {error: any}) {}\n}\n\nexport class LoadSingleSensor implements Action {\n  readonly type = SensorsActions.LoadSingleSensor;\n  constructor(public payload: {id: number}) {}\n}\n\nexport class LoadSingleSensorSuccess implements Action {\n  readonly type = SensorsActions.LoadSingleSensorSuccess;\n  constructor(public payload: {sensor: Sensor}) {}\n}\n\nexport class LoadSingleSensorFailure implements Action {\n  readonly type = SensorsActions.LoadSingleSensorFailure;\n  constructor(public payload: {error: any}) {}\n}\n\nexport class DeleteSensor implements Action {\n  readonly type = SensorsActions.DeleteSensor;\n  constructor(public payload: {uuid: string}) {}\n}\n\nexport class DeleteSensorSuccess implements Action {\n  readonly type = SensorsActions.DeleteSensorSuccess;\n  constructor(public payload: {uuid: string}) {}\n}\n\nexport class DeleteSensorFailure implements Action {\n  readonly type = SensorsActions.DeleteSensorFailure;\n  constructor(public payload: {error: any}) {}\n}\n\nexport class UpdateSensor implements Action {\n  readonly type = SensorsActions.UpdateSensor;\n  constructor(public payload: {sensor: Sensor}) {}\n}\n\nexport class UpdateSensorSuccess implements Action {\n  readonly type = SensorsActions.UpdateSensorSuccess;\n  constructor(public payload: {sensor: Sensor}) {}\n}\n\nexport class UpdateSensorFailure implements Action {\n  readonly type = SensorsActions.UpdateSensorFailure;\n  constructor(public payload: {error: any}) {}\n}\n\nexport class SaveSensor implements Action {\n  readonly type = SensorsActions.SaveSensor;\n  constructor(public payload: {sensor: Sensor}) {}\n}\n\nexport class SaveSensorSuccess implements Action {\n  readonly type = SensorsActions.SaveSensorSuccess;\n  constructor(public payload: {sensor: Sensor}) {}\n}\n\nexport class SaveSensorFailure implements Action {\n  readonly type = SensorsActions.SaveSensorFailure;\n  constructor(public payload: {error: any}) {}\n}\n\nexport class UpdateDetailsMode implements Action {\n  readonly type = SensorsActions.UpdateDetailsMode;\n  constructor(public payload: {mode: ComponentsMode}) {}\n}\n\nexport type SensorsActionsUnion =\n  LoadAllSensors\n  | LoadAllSensorsSuccess\n  | LoadAllSensorsFailure\n  | LoadSingleSensor\n  | LoadSingleSensorSuccess\n  | LoadSingleSensorFailure\n  | DeleteSensor\n  | DeleteSensorSuccess\n  | DeleteSensorFailure\n  | UpdateSensor\n  | UpdateSensorSuccess\n  | UpdateSensorFailure\n  | SaveSensor\n  | SaveSensorSuccess\n  | SaveSensorFailure\n  | UpdateDetailsMode;\n","import {Action} from '@ngrx/store';\nimport {SensorType} from '../../model/SensorType';\n\nexport enum SensorTypesActions {\n  LoadSensorTypesBegin = '[SensorTypes] load begin',\n  LoadSensorTypesSuccessful = '[SensorTypes] load successful',\n  LoadSensorTypesFailure = '[SensorTypes] load failure',\n\n  UpdateSensorType = '[SensorTypes] update begin',\n  UpdateSensorTypeSuccessful = '[SensorTypes] update successful',\n  UpdateSensorTypeFailure = '[SensorTypes] update failure',\n\n  DeleteSensorType = '[SensorTypes] delete begin',\n  DeleteSensorTypeSuccessful = '[SensorTypes] delete successful',\n  DeleteSensorTypeFailure = '[SensorType] delete failure',\n\n  SaveSensorType = '[SensorType] save begin',\n  SaveSensorTypeSuccessful = '[SensorType] save successful',\n  SaveSensorTypeFailure = '[SensorType] save failure'\n}\n\nexport class LoadSensorTypesBegin implements Action {\n  readonly type = SensorTypesActions.LoadSensorTypesBegin;\n}\n\nexport class LoadSensorTypesSuccessful implements Action {\n  readonly type = SensorTypesActions.LoadSensorTypesSuccessful;\n  constructor(public payload: {sensortypes: SensorType[]}) {}\n}\n\nexport class LoadSensorTypesFailure implements Action {\n  readonly type = SensorTypesActions.LoadSensorTypesFailure;\n  constructor(public payload: {error: any}) {}\n}\n\nexport class UpdateSensorType implements Action {\n  readonly type = SensorTypesActions.UpdateSensorType;\n  constructor(public payload: {sensorType: SensorType}) {}\n}\n\nexport class UpdateSensorTypeSuccessful implements Action {\n  readonly type = SensorTypesActions.UpdateSensorTypeSuccessful;\n  constructor(public payload: {sensortype: SensorType}) {}\n}\n\nexport class UpdateSensorTypeFailure implements Action {\n  readonly type = SensorTypesActions.UpdateSensorTypeFailure;\n  constructor(public payload: {error: any}) {}\n}\n\nexport class DeleteSensorType implements Action {\n  readonly type = SensorTypesActions.DeleteSensorType;\n  constructor(public payload: {id: number}) {}\n}\n\nexport class DeleteSensorTypeSuccessful implements Action {\n  readonly type = SensorTypesActions.DeleteSensorTypeSuccessful;\n  constructor(public payload: {id: number}) {}\n}\n\nexport class DeleteSensorTypeFailure implements Action {\n  readonly type = SensorTypesActions.DeleteSensorTypeFailure;\n  constructor(public payload: {error: any}) {}\n}\n\nexport class SaveSensorType implements Action {\n  readonly type = SensorTypesActions.SaveSensorType;\n  constructor(public payload: {sensorType: SensorType}) {}\n}\n\nexport class SaveSensorTypeSuccessful implements Action {\n  readonly type = SensorTypesActions.SaveSensorTypeSuccessful;\n  constructor(public payload: {sensorType: SensorType}) {}\n}\n\nexport class SaveSensorTypeFailure implements Action {\n  readonly type = SensorTypesActions.SaveSensorTypeFailure;\n  constructor(public payload: {error: any}) {}\n}\n\nexport type SensorTypesUnions =\n  LoadSensorTypesBegin\n  | LoadSensorTypesSuccessful\n  | LoadSensorTypesFailure\n  | UpdateSensorType\n  | UpdateSensorTypeSuccessful\n  | UpdateSensorTypeFailure\n  | DeleteSensorType\n  | DeleteSensorTypeSuccessful\n  | DeleteSensorTypeFailure\n  | SaveSensorType\n  | SaveSensorTypeSuccessful\n  | SaveSensorTypeFailure;\n","import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {RegisterAttributesService} from '../../service/register-attributes.service';\n\nimport * as DataActions from '../actions/index';\nimport {catchError, map, switchMap} from 'rxjs/operators';\nimport {AttributeDictionary} from '../../model/AttributeDictionary';\nimport {UpdateAttribute} from '../actions/index';\nimport {of} from 'rxjs';\n\n@Injectable()\nexport class AttributesEffects {\n\n  constructor(private action: Actions,\n              private service: RegisterAttributesService) {\n\n  }\n\n  @Effect()\n  loadData = this.action.pipe(\n    ofType(DataActions.AttributeDictionaryActions.LoadAttributesBegin),\n    switchMap(() => {\n      return this.service.getAll().pipe(\n        map( data => new DataActions.LoadAttributesSuccessful({data}))\n      );\n    })\n  );\n\n  @Effect()\n  updateData = this.action.pipe(\n    ofType<UpdateAttribute>(DataActions.AttributeDictionaryActions.UpdateAttribute),\n    switchMap( ({payload}) => {\n      const result = payload.data as AttributeDictionary;\n      return this.service.update(result.symbol, result).pipe(\n        map( data => {\n          console.log(data);\n          return new DataActions.UpdateAttributeSuccessful({data});\n        }),\n        catchError( error => of(new DataActions.UpdateAttributeFailed({error})))\n      );\n    })\n  );\n}\n","import {SensortypesEffects} from './sensortypes.effects';\nimport {AttributesEffects} from './attributes.effects';\nimport {SensorsEffects} from \"./sensors.effects\";\n\nexport const effects: any[] = [\n  SensortypesEffects,\n  AttributesEffects,\n  SensorsEffects];\n","import {Actions, Effect, ofType} from '@ngrx/effects';\nimport {SensorsService} from '../../service/sensors.service';\n\nimport * as DataActions from '../actions/index';\nimport {catchError, map, switchMap} from 'rxjs/operators';\nimport {of} from 'rxjs';\nimport {Injectable} from '@angular/core';\n\n@Injectable()\nexport class SensorsEffects {\n\n  constructor(private action: Actions,\n              private service: SensorsService) {\n\n  }\n\n  @Effect()\n  loadAll = this.action.pipe(\n    ofType(DataActions.SensorsActions.LoadAllSensors),\n    switchMap( () => {\n      return this.service.getAll().pipe(\n        map( (data) => {\n          return new DataActions.LoadAllSensorsSuccess({sensors: data});\n        }),\n        catchError( error => {\n          return of(new DataActions.LoadAllSensorsFailure({error}));\n        })\n      );\n    })\n  );\n\n  @Effect()\n  loadSingle = this.action.pipe(\n    ofType<DataActions.LoadSingleSensor>(DataActions.SensorsActions.LoadSingleSensor),\n    switchMap(({payload}) => {\n      const id = payload.id.toString();\n      return this.service.getById(id).pipe(\n        map((sensor) => {\n          return new DataActions.LoadSingleSensorSuccess({sensor});\n        }),\n        catchError(error => {\n          return of(new DataActions.LoadSingleSensorFailure({error}));\n        })\n      );\n    })\n  );\n\n  @Effect()\n  delete = this.action.pipe(\n    ofType<DataActions.DeleteSensor>(DataActions.SensorsActions.DeleteSensor),\n    switchMap(({payload}) => {\n      const uuid = payload.uuid;\n      return this.service.delete(uuid).pipe(\n        map( () => {\n          return new DataActions.DeleteSensorSuccess({uuid});\n        }),\n        catchError( error => {\n          return of(new DataActions.DeleteSensorFailure({error}));\n        })\n      );\n    })\n  );\n\n  @Effect()\n  update = this.action.pipe(\n    ofType<DataActions.UpdateSensor>(DataActions.SensorsActions.UpdateSensor),\n    switchMap(({payload}) => {\n      const sensorToUpdate = payload.sensor;\n      return this.service.update(sensorToUpdate).pipe(\n        map(result => {\n          return new DataActions.UpdateSensorSuccess({sensor: result});\n        }),\n        catchError(error => {\n          return of(new DataActions.UpdateSensorFailure({error}));\n        })\n      );\n    })\n  );\n\n  @Effect()\n  save = this.action.pipe(\n    ofType<DataActions.SaveSensor>(DataActions.SensorsActions.SaveSensor),\n    switchMap(({payload}) => {\n      const sensorToSave = payload.sensor;\n      return this.service.save(sensorToSave).pipe(\n        map(result => {\n          return new DataActions.SaveSensorSuccess({sensor: result});\n        }),\n        catchError(error => {\n          return of(new DataActions.SaveSensorFailure({error}));\n        })\n      );\n    })\n  );\n\n}\n","import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {SensorTypesService} from '../../service/sensor-types.service';\n\nimport * as DataActions from '../actions/index';\nimport {\n  DeleteSensorType,\n  LoadSensorTypesSuccessful, SaveSensorType,\n  UpdateSensorType,\n} from '../actions/index';\nimport {catchError, map, switchMap} from 'rxjs/operators';\nimport {of} from 'rxjs';\nimport {SensorType} from '../../model/SensorType';\n\n@Injectable()\nexport class SensortypesEffects {\n\n  constructor(private action: Actions,\n              private service: SensorTypesService) {\n  }\n\n  @Effect()\n  loadSensorTypes = this.action.pipe(\n    ofType<LoadSensorTypesSuccessful>(DataActions.SensorTypesActions.LoadSensorTypesBegin),\n    switchMap( ({}) => {\n      return this.service.getAll().pipe(\n        map( data => new DataActions.LoadSensorTypesSuccessful({sensortypes: data})),\n        catchError( error => of(new DataActions.LoadSensorTypesFailure({error})))\n      );\n    })\n  );\n\n  @Effect()\n  updateSensorType = this.action.pipe(\n    ofType<UpdateSensorType>(DataActions.SensorTypesActions.UpdateSensorType),\n    switchMap( ({payload}) => {\n      const sensorType = payload.sensorType as SensorType;\n      return this.service.update(sensorType).pipe(\n        map(data => {\n          return new DataActions.UpdateSensorTypeSuccessful({sensortype: data});\n        }),\n        catchError(error => of(new DataActions.UpdateSensorTypeFailure({error})))\n      );\n    })\n  );\n\n  @Effect()\n  deleteSensorType = this.action.pipe(\n    ofType<DeleteSensorType>(DataActions.SensorTypesActions.DeleteSensorType),\n    switchMap(({payload}) => {\n      const id = payload.id;\n      return this.service.delete(id).pipe(\n        map( result => {\n          if (result) {\n            return new DataActions.DeleteSensorTypeSuccessful({id});\n          }\n          return new DataActions.DeleteSensorTypeFailure({error: 'Could not delete sensortype with id: ' + id});\n        }),\n        catchError(error => {\n          return of(new DataActions.DeleteSensorTypeFailure({error}));\n        })\n      );\n    })\n  );\n\n  @Effect()\n  saveSensorType = this.action.pipe(\n    ofType<SaveSensorType>(DataActions.SensorTypesActions.SaveSensorType),\n    switchMap(({payload}) => {\n      const sensorType = payload.sensorType as SensorType;\n      return this.service.save(sensorType).pipe(\n        map( (result) => {\n          return new DataActions.SaveSensorTypeSuccessful({sensorType: result});\n        }),\n        catchError(error => {\n          return of(new DataActions.SaveSensorTypeFailure({error}));\n        })\n      );\n    })\n  );\n\n}\n","import {AttributeDictionary} from '../../model/AttributeDictionary';\n\nimport * as fromActions from '../actions/index';\n\nexport interface AttributesState {\n  items: AttributeDictionary[];\n  hasLoaded: boolean;\n}\n\nexport const initialState: AttributesState = {\n  items: [],\n  hasLoaded: false\n};\n\nexport function attributesReducer(\n  state = initialState,\n  action: fromActions.AttributeUnions\n): AttributesState {\n\n  switch (action.type) {\n    case fromActions.AttributeDictionaryActions.LoadAttributesBegin: {\n      return {\n        ...state,\n        items: []\n      };\n    }\n\n    case fromActions.AttributeDictionaryActions.LoadAttributesSuccessful: {\n      return {\n        ...state,\n        items: action.payload.data,\n        hasLoaded: true\n      };\n    }\n\n    case fromActions.AttributeDictionaryActions.UpdateAttribute: {\n      const payload = action.payload.data;\n      const copyItems = state.items;\n      const filtered = copyItems.filter(item => item.symbol === payload.symbol);\n      if (filtered.length === 1 ) {\n        filtered[0].name = payload.name;\n        filtered[0].description = payload.description;\n      }\n      return {\n        ...state,\n        items: copyItems,\n        hasLoaded: true\n      };\n    }\n\n    default: {\n      return state;\n    }\n  }\n}\n\nexport const getAttributes = (state: AttributesState) => state.items;\nexport const getHasLoaded = (state: AttributesState) => state.hasLoaded;\n","import {SensorAttribute} from '../../model/SensorAttribute';\n\nimport * as fromActions from '../actions/index';\nimport {ComponentsMode} from '../../crosscutting/componentsMode';\n\nexport interface AttributesDialogState {\n  opened: boolean;\n  sensorsAttributes: SensorAttribute[];\n  sensorAttribute: SensorAttribute;\n  mode: ComponentsMode;\n  sensorAttributeAfterUpdate: SensorAttribute;\n}\n\nexport const initialState: AttributesDialogState = {\n  opened: false,\n  sensorsAttributes: [],\n  sensorAttribute: null,\n  mode: null,\n  sensorAttributeAfterUpdate: null\n};\n\nexport function attributesDialogReducer(\n  state = initialState,\n  action: fromActions.AttributesDialogActionsUnion\n): AttributesDialogState {\n\n  switch (action.type) {\n    case fromActions.AttributesDialogActions.OpenDialogToAdd: {\n      return {\n        ...state,\n        opened: true,\n        sensorsAttributes: action.payload.sensorAttributes,\n        mode: ComponentsMode.New,\n      };\n    }\n\n    case fromActions.AttributesDialogActions.OpenDialogToUpdate: {\n      return {\n        ...state,\n        opened: true,\n        sensorAttribute: action.payload.sensorAttribute,\n        sensorsAttributes: action.payload.sensorsAttributes,\n        mode: ComponentsMode.Edit\n      };\n    }\n\n    case fromActions.AttributesDialogActions.UpdateSensorAttribute: {\n      return {\n        ...state,\n        opened: true,\n        sensorsAttributes: state.sensorsAttributes,\n        mode: state.mode,\n        sensorAttributeAfterUpdate: action.payload.sensorAttribute\n      };\n    }\n\n    case fromActions.AttributesDialogActions.CloseDialog: {\n      return {\n        ...state,\n        opened: false,\n        sensorsAttributes: [],\n        mode: null,\n        sensorAttributeAfterUpdate: null,\n        sensorAttribute: null\n      };\n    }\n\n    default: {\n      return state;\n    }\n  }\n}\n\nexport const getAttributesDialogOpened = (state: AttributesDialogState) => state.opened;\nexport const getSensorsAttributes = (state: AttributesDialogState) => state.sensorsAttributes;\nexport const getAttributesDialogMode = (state: AttributesDialogState) => state.mode;\nexport const getSensorAttribute = (state: AttributesDialogState) => state.sensorAttribute;\nexport const getSensorAttributeAfterUpdate = (state: AttributesDialogState) => {\n  return {\n    sensorAttributeToUpdate: state.sensorAttributeAfterUpdate,\n    attributeDialogMode: state.mode\n  };\n};\n","import * as fromSensorTypes from './sensortypes.reducer';\nimport * as fromAttributes from './attributes.reducer';\nimport * as fromSensors from './sensors.reducer';\nimport * as fromAttributesDialog from './attributesdialog.reducer';\n\n\nimport {ActionReducerMap, createSelector} from '@ngrx/store';\n\nexport interface State {\n  sensortypes: fromSensorTypes.SensortypesState;\n  attributes: fromAttributes.AttributesState;\n  sensors: fromSensors.SensorsState;\n  sensorsAttributesDialog: fromAttributesDialog.AttributesDialogState;\n}\n\nexport const reducers: ActionReducerMap<State> = {\n  sensortypes: fromSensorTypes.sensortypesReducer,\n  attributes: fromAttributes.attributesReducer,\n  sensors: fromSensors.sensorsReducer,\n  sensorsAttributesDialog: fromAttributesDialog.attributesDialogReducer,\n};\n\n// NOTE: SensortypesState and selectors\nexport const getSensortypesState = (state: State) => state.sensortypes;\nexport const getAllSensorTypes = createSelector(getSensortypesState, fromSensorTypes.getSensorTypeItems);\nexport const getSensorTypesLoaded = createSelector(getSensortypesState, fromSensorTypes.getHasLoaded);\nexport const getSingleSensorType = createSelector(getSensortypesState,\n  (sensortypes, props) => sensortypes.sensortypes.find( obj => obj.id === props.id));\n\n// NOTE: AttributesState and selectors\nexport const getAttributesState = (state: State) => state.attributes;\nexport const getAllAttributes = createSelector(getAttributesState, fromAttributes.getAttributes);\nexport const getAttributesLoaded = createSelector(getAttributesState, fromAttributes.getHasLoaded);\nexport const getSingleAttribute = createSelector(getAttributesState,\n  (attributes, props) => attributes.items.find( obj => obj.symbol === props.symbol));\n\n// NOTE: SensorsState and selectors\nexport const getSensorsState = (state: State) => state.sensors;\nexport const getAllSensors = createSelector(getSensorsState, fromSensors.getAllItems);\nexport const getSensorsLoaded = createSelector(getSensorsState, fromSensors.getHasLoaded);\nexport const getAmountOfSensorsWhichUseSensorType = createSelector(getSensorsState,\n  (sensors, props) => {\n    if (sensors !== undefined || sensors.items !== undefined || sensors.items !== null || sensors.items.length !== 0) {\n      return sensors.items.filter(obj => obj.type === props.sensortype).length;\n    }\n    return 0;\n  });\nexport const getSingleSensor = createSelector(getSensorsState,\n  (sensors, props) => sensors.items.find(obj => obj.id === props.id));\nexport const getUuids = createSelector(getSensorsState, fromSensors.getUuids);\nexport const getSensorDetailsMode = createSelector(getSensorsState, fromSensors.getSensorDetailsMode);\n\n// SensorAttributes dialog\nexport const getSensorAttributesDialogState = (state: State) => state.sensorsAttributesDialog;\nexport const getAttributesDialogOpened = createSelector(getSensorAttributesDialogState, fromAttributesDialog.getAttributesDialogOpened);\nexport const getSensorsAttributes = createSelector(getSensorAttributesDialogState, fromAttributesDialog.getSensorsAttributes);\nexport const getAttributesDialogMode = createSelector(getSensorAttributesDialogState, fromAttributesDialog.getAttributesDialogMode);\nexport const getSensorAttribute = createSelector(getSensorAttributesDialogState, fromAttributesDialog.getSensorAttribute);\nexport const getSensorAttributeAfterUpdate = createSelector(getSensorAttributesDialogState,\n  fromAttributesDialog.getSensorAttributeAfterUpdate);\n","import {compareByType, Sensor} from '../../model/Sensor';\n\nimport * as fromActions from '../actions/index';\nimport {ComponentsMode} from '../../crosscutting/componentsMode';\n\nexport interface SensorsState {\n  items: Sensor[];\n  hasLoaded: boolean;\n  mode: ComponentsMode;\n}\n\nexport const initialState: SensorsState = {\n  items: [],\n  hasLoaded: false,\n  mode: ComponentsMode.New\n};\n\nexport function sensorsReducer(\n  state = initialState,\n  action: fromActions.SensorsActionsUnion\n): SensorsState {\n\n  switch (action.type) {\n    case fromActions.SensorsActions.LoadAllSensorsSuccess: {\n      return {\n        ...state,\n        items: action.payload.sensors,\n        hasLoaded: true\n      };\n    }\n\n    case fromActions.SensorsActions.UpdateDetailsMode: {\n      return {\n        ...state,\n        items: state.items,\n        hasLoaded: state.hasLoaded,\n        mode: action.payload.mode\n      };\n    }\n\n    case fromActions.SensorsActions.DeleteSensorSuccess: {\n      const uuid = action.payload.uuid;\n      const copyItems = state.items.filter(obj => obj.uuid !== uuid);\n      copyItems.sort(compareByType);\n      return {\n        ...state,\n        items: copyItems,\n        hasLoaded: true\n      };\n    }\n\n    case fromActions.SensorsActions.UpdateSensorSuccess: {\n      const sensor = action.payload.sensor;\n      const copyItems = state.items;\n      const originalSensor = copyItems.find(item => item.uuid === sensor.uuid);\n      const index = copyItems.indexOf(originalSensor);\n      copyItems[index] = sensor;\n      copyItems.sort(compareByType);\n      return {\n        ...state,\n        items: copyItems,\n        hasLoaded: true\n      };\n    }\n\n    case fromActions.SensorsActions.SaveSensorSuccess: {\n      const sensor = action.payload.sensor;\n      let copyItems = state.items;\n      if (!copyItems) {\n        copyItems = new Array();\n      }\n      copyItems.push(sensor);\n      copyItems.sort(compareByType);\n      return {\n        ...state,\n        items: copyItems,\n        hasLoaded: true\n      };\n    }\n\n    default: {\n      return state;\n    }\n\n  }\n}\n\nexport const getAllItems = (state: SensorsState) => state.items;\nexport const getHasLoaded = (state: SensorsState) => state.hasLoaded;\nexport const getUuids = (state: SensorsState) => {\n  if (state.items) {\n    return state.items.map( obj => obj.uuid);\n  }\n  return [];\n};\nexport const getSensorDetailsMode = (state: SensorsState) => state.mode;\n","import * as fromActions from '../actions/index';\nimport {SensorType} from '../../model/SensorType';\n\nexport interface SensortypesState {\n  sensortypes: SensorType[];\n  hasLoaded: boolean;\n}\n\nexport const initialSensortypesState: SensortypesState = {\n  sensortypes: [],\n  hasLoaded: false\n};\n\nexport function sensortypesReducer(\n  state = initialSensortypesState,\n  action: fromActions.SensorTypesUnions\n): SensortypesState {\n\n  switch (action.type) {\n    case fromActions.SensorTypesActions.LoadSensorTypesSuccessful: {\n      return {\n        ...state,\n        sensortypes: action.payload.sensortypes,\n        hasLoaded: true\n      };\n    }\n\n    case fromActions.SensorTypesActions.UpdateSensorTypeSuccessful: {\n      const payload = action.payload.sensortype;\n      const copyItems = state.sensortypes;\n      copyItems.forEach((item, i) => {\n        if (item.id === payload.id) {\n          copyItems[i] = payload;\n        }\n      });\n      return {\n        ...state,\n        sensortypes: copyItems,\n        hasLoaded: true\n      };\n    }\n\n    case fromActions.SensorTypesActions.DeleteSensorTypeSuccessful: {\n      const id = action.payload.id;\n      const copyItems = state.sensortypes;\n      const filtered = copyItems.filter(item => item.id !== id);\n      return {\n        ...state,\n        sensortypes: filtered,\n        hasLoaded: true\n      };\n    }\n\n    case fromActions.SensorTypesActions.SaveSensorTypeSuccessful: {\n      let sensors = state.sensortypes;\n      if (!sensors) {\n        sensors = new Array();\n      }\n      const sensorType = action.payload.sensorType as SensorType;\n      sensors.push(sensorType);\n      return {\n        ...state,\n        sensortypes: sensors,\n        hasLoaded: true\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n\nexport const getSensorTypeItems = (state: SensortypesState) => state.sensortypes;\nexport const getHasLoaded = (state: SensortypesState) => state.hasLoaded;\n","import {Injectable} from '@angular/core';\nimport {Store} from '@ngrx/store';\nimport {getSensorDetailsMode, getSensorsLoaded, getUuids, State} from '../store/reducers';\nimport {AbstractControl, ValidationErrors} from '@angular/forms';\nimport {Observable, of} from 'rxjs';\n\nimport * as SensorActions from '../store/actions/sensors.actions';\nimport {ComponentsMode} from '../crosscutting/componentsMode';\n\n@Injectable()\nexport class UuidUniquenessValidator {\n\n  mode: ComponentsMode;\n\n  constructor(private store: Store<State>) {\n    this.store.select(getSensorsLoaded).subscribe(\n      areSensorsLoaded => {\n        if (!areSensorsLoaded) {\n          this.store.dispatch(new SensorActions.LoadAllSensors());\n        }\n      }\n    );\n\n    this.store.select(getSensorDetailsMode).subscribe(\n      mode => {\n        this.mode = mode;\n      }\n    );\n  }\n\n  checkUuidUniqueness(field: AbstractControl): Observable<ValidationErrors | null> {\n    // NOTE: in edit mode - never check uniqueness\n    if (this.mode === ComponentsMode.Edit) {\n      return of(null);\n    }\n    let validatorUuids: string[] = [];\n    this.store.select(getUuids).subscribe(\n      uuids => {\n        validatorUuids = uuids;\n      }\n    );\n    // tslint:disable-next-line:variable-name\n    const number = validatorUuids.indexOf(field.value);\n    console.log(number);\n    return of(validatorUuids.indexOf(field.value) < 0 ? null : {invalid: 'Uuid already registered.'});\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  host: 'localhost'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}